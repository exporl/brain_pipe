Search.setIndex({"docnames": ["api/_autosummary/brain_pipe", "api/_autosummary/brain_pipe.cli", "api/_autosummary/brain_pipe.cli.base", "api/_autosummary/brain_pipe.cli.base.CLI", "api/_autosummary/brain_pipe.cli.cli_entrypoint", "api/_autosummary/brain_pipe.cli.cli_factory", "api/_autosummary/brain_pipe.cli.default", "api/_autosummary/brain_pipe.cli.default.DefaultCLI", "api/_autosummary/brain_pipe.dataloaders", "api/_autosummary/brain_pipe.dataloaders.base", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader", "api/_autosummary/brain_pipe.dataloaders.path", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader", "api/_autosummary/brain_pipe.parser", "api/_autosummary/brain_pipe.parser.base", "api/_autosummary/brain_pipe.parser.base.Parser", "api/_autosummary/brain_pipe.parser.file", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin", "api/_autosummary/brain_pipe.parser.file.FileParser", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser", "api/_autosummary/brain_pipe.parser.simple_dict", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser", "api/_autosummary/brain_pipe.parser.template_text", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser", "api/_autosummary/brain_pipe.parser.text", "api/_autosummary/brain_pipe.parser.text.TextParser", "api/_autosummary/brain_pipe.parser.yaml", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser", "api/_autosummary/brain_pipe.pipeline", "api/_autosummary/brain_pipe.pipeline.base", "api/_autosummary/brain_pipe.pipeline.base.Pipeline", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep", "api/_autosummary/brain_pipe.pipeline.cache", "api/_autosummary/brain_pipe.pipeline.cache.base", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.default", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.pipeline", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "api/_autosummary/brain_pipe.pipeline.default", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn", "api/_autosummary/brain_pipe.pipeline.wrapper", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper", "api/_autosummary/brain_pipe.preprocessing", "api/_autosummary/brain_pipe.preprocessing.brain", "api/_autosummary/brain_pipe.preprocessing.brain.artifact", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "api/_autosummary/brain_pipe.preprocessing.brain.eeg", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "api/_autosummary/brain_pipe.preprocessing.brain.epochs", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs", "api/_autosummary/brain_pipe.preprocessing.brain.link", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "api/_autosummary/brain_pipe.preprocessing.brain.load", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader", "api/_autosummary/brain_pipe.preprocessing.brain.rereference", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "api/_autosummary/brain_pipe.preprocessing.brain.trigger", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction", "api/_autosummary/brain_pipe.preprocessing.filter", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt", "api/_autosummary/brain_pipe.preprocessing.resample", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly", "api/_autosummary/brain_pipe.preprocessing.stimulus", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.load", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli", "api/_autosummary/brain_pipe.preprocessing.transpose", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose", "api/_autosummary/brain_pipe.runner", "api/_autosummary/brain_pipe.runner.base", "api/_autosummary/brain_pipe.runner.base.Runner", "api/_autosummary/brain_pipe.runner.default", "api/_autosummary/brain_pipe.runner.default.DefaultRunner", "api/_autosummary/brain_pipe.save", "api/_autosummary/brain_pipe.save.base", "api/_autosummary/brain_pipe.save.base.Save", "api/_autosummary/brain_pipe.save.default", "api/_autosummary/brain_pipe.save.default.DefaultSave", "api/_autosummary/brain_pipe.save.default.default_filename_fn", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn", "api/_autosummary/brain_pipe.split", "api/_autosummary/brain_pipe.split.base", "api/_autosummary/brain_pipe.split.base.Splitter", "api/_autosummary/brain_pipe.split.mid", "api/_autosummary/brain_pipe.split.mid.MidSplit", "api/_autosummary/brain_pipe.split.operations", "api/_autosummary/brain_pipe.split.operations.base", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation", "api/_autosummary/brain_pipe.split.operations.normalize", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize", "api/_autosummary/brain_pipe.split.sequential", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit", "api/_autosummary/brain_pipe.utils", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig", "api/_autosummary/brain_pipe.utils.find", "api/_autosummary/brain_pipe.utils.find.Finder", "api/_autosummary/brain_pipe.utils.list", "api/_autosummary/brain_pipe.utils.list.flatten", "api/_autosummary/brain_pipe.utils.log", "api/_autosummary/brain_pipe.utils.log.ColorFormatter", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter", "api/_autosummary/brain_pipe.utils.log.default_logging", "api/_autosummary/brain_pipe.utils.multiprocess", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn", "api/_autosummary/brain_pipe.utils.path", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper", "api/_autosummary/brain_pipe.utils.serialization", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper", "api/api", "api/full_tree", "cli", "configuration", "index", "pipeline"], "filenames": ["api/_autosummary/brain_pipe.rst", "api/_autosummary/brain_pipe.cli.rst", "api/_autosummary/brain_pipe.cli.base.rst", "api/_autosummary/brain_pipe.cli.base.CLI.rst", "api/_autosummary/brain_pipe.cli.cli_entrypoint.rst", "api/_autosummary/brain_pipe.cli.cli_factory.rst", "api/_autosummary/brain_pipe.cli.default.rst", "api/_autosummary/brain_pipe.cli.default.DefaultCLI.rst", "api/_autosummary/brain_pipe.dataloaders.rst", "api/_autosummary/brain_pipe.dataloaders.base.rst", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader.rst", "api/_autosummary/brain_pipe.dataloaders.path.rst", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader.rst", "api/_autosummary/brain_pipe.parser.rst", "api/_autosummary/brain_pipe.parser.base.rst", "api/_autosummary/brain_pipe.parser.base.Parser.rst", "api/_autosummary/brain_pipe.parser.file.rst", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin.rst", "api/_autosummary/brain_pipe.parser.file.FileParser.rst", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.simple_dict.rst", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser.rst", "api/_autosummary/brain_pipe.parser.template_text.rst", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser.rst", "api/_autosummary/brain_pipe.parser.text.rst", "api/_autosummary/brain_pipe.parser.text.TextParser.rst", "api/_autosummary/brain_pipe.parser.yaml.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser.rst", "api/_autosummary/brain_pipe.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.rst", "api/_autosummary/brain_pipe.pipeline.base.Pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep.rst", "api/_autosummary/brain_pipe.pipeline.cache.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.rst", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper.rst", "api/_autosummary/brain_pipe.preprocessing.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction.rst", "api/_autosummary/brain_pipe.preprocessing.filter.rst", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt.rst", "api/_autosummary/brain_pipe.preprocessing.resample.rst", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose.rst", "api/_autosummary/brain_pipe.runner.rst", "api/_autosummary/brain_pipe.runner.base.rst", "api/_autosummary/brain_pipe.runner.base.Runner.rst", "api/_autosummary/brain_pipe.runner.default.rst", "api/_autosummary/brain_pipe.runner.default.DefaultRunner.rst", "api/_autosummary/brain_pipe.save.rst", "api/_autosummary/brain_pipe.save.base.rst", "api/_autosummary/brain_pipe.save.base.Save.rst", "api/_autosummary/brain_pipe.save.default.rst", "api/_autosummary/brain_pipe.save.default.DefaultSave.rst", "api/_autosummary/brain_pipe.save.default.default_filename_fn.rst", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn.rst", "api/_autosummary/brain_pipe.split.rst", "api/_autosummary/brain_pipe.split.base.rst", "api/_autosummary/brain_pipe.split.base.Splitter.rst", "api/_autosummary/brain_pipe.split.mid.rst", "api/_autosummary/brain_pipe.split.mid.MidSplit.rst", "api/_autosummary/brain_pipe.split.operations.rst", "api/_autosummary/brain_pipe.split.operations.base.rst", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation.rst", "api/_autosummary/brain_pipe.split.operations.normalize.rst", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize.rst", "api/_autosummary/brain_pipe.split.sequential.rst", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit.rst", "api/_autosummary/brain_pipe.utils.rst", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig.rst", "api/_autosummary/brain_pipe.utils.find.rst", "api/_autosummary/brain_pipe.utils.find.Finder.rst", "api/_autosummary/brain_pipe.utils.list.rst", "api/_autosummary/brain_pipe.utils.list.flatten.rst", "api/_autosummary/brain_pipe.utils.log.rst", "api/_autosummary/brain_pipe.utils.log.ColorFormatter.rst", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter.rst", "api/_autosummary/brain_pipe.utils.log.default_logging.rst", "api/_autosummary/brain_pipe.utils.multiprocess.rst", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton.rst", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn.rst", "api/_autosummary/brain_pipe.utils.path.rst", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator.rst", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper.rst", "api/_autosummary/brain_pipe.utils.serialization.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper.rst", "api/api.rst", "api/full_tree.rst", "cli.rst", "configuration.rst", "index.rst", "pipeline.rst"], "titles": ["brain_pipe", "brain_pipe.cli", "brain_pipe.cli.base", "brain_pipe.cli.base.CLI", "brain_pipe.cli.cli_entrypoint", "brain_pipe.cli.cli_factory", "brain_pipe.cli.default", "brain_pipe.cli.default.DefaultCLI", "brain_pipe.dataloaders", "brain_pipe.dataloaders.base", "brain_pipe.dataloaders.base.DataLoader", "brain_pipe.dataloaders.path", "brain_pipe.dataloaders.path.GlobLoader", "brain_pipe.parser", "brain_pipe.parser.base", "brain_pipe.parser.base.Parser", "brain_pipe.parser.file", "brain_pipe.parser.file.FileLoadMixin", "brain_pipe.parser.file.FileParser", "brain_pipe.parser.file.TemplateFileParser", "brain_pipe.parser.simple_dict", "brain_pipe.parser.simple_dict.SimpleDictParser", "brain_pipe.parser.template_text", "brain_pipe.parser.template_text.TemplateTextParser", "brain_pipe.parser.text", "brain_pipe.parser.text.TextParser", "brain_pipe.parser.yaml", "brain_pipe.parser.yaml.YAMLFileParser", "brain_pipe.parser.yaml.YAMLMixin", "brain_pipe.parser.yaml.YAMLTemplateFileParser", "brain_pipe.parser.yaml.YAMLTextParser", "brain_pipe.pipeline", "brain_pipe.pipeline.base", "brain_pipe.pipeline.base.Pipeline", "brain_pipe.pipeline.base.PipelineStep", "brain_pipe.pipeline.cache", "brain_pipe.pipeline.cache.base", "brain_pipe.pipeline.cache.base.PipelineCache", "brain_pipe.pipeline.cache.default", "brain_pipe.pipeline.cache.default.DefaultPipelineCache", "brain_pipe.pipeline.cache.pipeline", "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "brain_pipe.pipeline.default", "brain_pipe.pipeline.default.DefaultPipeline", "brain_pipe.pipeline.default.default_error_handler_fn", "brain_pipe.pipeline.wrapper", "brain_pipe.pipeline.wrapper.Wrapper", "brain_pipe.preprocessing", "brain_pipe.preprocessing.brain", "brain_pipe.preprocessing.brain.artifact", "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "brain_pipe.preprocessing.brain.eeg", "brain_pipe.preprocessing.brain.eeg.biosemi", "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "brain_pipe.preprocessing.brain.eeg.load", "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "brain_pipe.preprocessing.brain.epochs", "brain_pipe.preprocessing.brain.epochs.SplitEpochs", "brain_pipe.preprocessing.brain.link", "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "brain_pipe.preprocessing.brain.load", "brain_pipe.preprocessing.brain.load.MNELoader", "brain_pipe.preprocessing.brain.rereference", "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "brain_pipe.preprocessing.brain.trigger", "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "brain_pipe.preprocessing.brain.trigger.default_drift_correction", "brain_pipe.preprocessing.filter", "brain_pipe.preprocessing.filter.SosFiltFilt", "brain_pipe.preprocessing.resample", "brain_pipe.preprocessing.resample.ResamplePoly", "brain_pipe.preprocessing.stimulus", "brain_pipe.preprocessing.stimulus.audio", "brain_pipe.preprocessing.stimulus.audio.envelope", "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "brain_pipe.preprocessing.stimulus.load", "brain_pipe.preprocessing.stimulus.load.LoadStimuli", "brain_pipe.preprocessing.transpose", "brain_pipe.preprocessing.transpose.Transpose", "brain_pipe.runner", "brain_pipe.runner.base", "brain_pipe.runner.base.Runner", "brain_pipe.runner.default", "brain_pipe.runner.default.DefaultRunner", "brain_pipe.save", "brain_pipe.save.base", "brain_pipe.save.base.Save", "brain_pipe.save.default", "brain_pipe.save.default.DefaultSave", "brain_pipe.save.default.default_filename_fn", "brain_pipe.save.default.default_metadata_key_fn", "brain_pipe.split", "brain_pipe.split.base", "brain_pipe.split.base.Splitter", "brain_pipe.split.mid", "brain_pipe.split.mid.MidSplit", "brain_pipe.split.operations", "brain_pipe.split.operations.base", "brain_pipe.split.operations.base.SplitterOperation", "brain_pipe.split.operations.normalize", "brain_pipe.split.operations.normalize.Standardize", "brain_pipe.split.sequential", "brain_pipe.split.sequential.SequentialSplit", "brain_pipe.utils", "brain_pipe.utils.ObjectsWithConfig", "brain_pipe.utils.find", "brain_pipe.utils.find.Finder", "brain_pipe.utils.list", "brain_pipe.utils.list.flatten", "brain_pipe.utils.log", "brain_pipe.utils.log.ColorFormatter", "brain_pipe.utils.log.DefaultFormatter", "brain_pipe.utils.log.default_logging", "brain_pipe.utils.multiprocess", "brain_pipe.utils.multiprocess.MultiprocessingSingleton", "brain_pipe.utils.multiprocess.SimpleCallbackFn", "brain_pipe.utils.path", "brain_pipe.utils.path.BIDSPathGenerator", "brain_pipe.utils.path.BIDSStimulusGrouper", "brain_pipe.utils.serialization", "brain_pipe.utils.serialization.pickle_dump_wrapper", "brain_pipe.utils.serialization.pickle_load_wrapper", "API Reference", "Full Tree", "Command Line Interface", "Defining and running Pipelines through configuration files", "Welcome to Brain Pipe\u2019s documentation!", "Overview"], "terms": {"numpi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "ndarrai": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "type": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126], "sequenc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "union": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "option": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 129, 130, 132], "callabl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 130], "tupl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 130], "list": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 130, 132], "dict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132], "set": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "collect": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "abc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "iter": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "ordereddict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "parser": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129], "base": [0, 1, 5, 6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 92, 93, 96, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132], "preprocess": [0, 7, 8, 32, 33, 34, 40, 41, 43, 45, 46, 129, 131, 132], "bid": [0, 60, 121, 122, 123, 131, 132], "data": [0, 7, 8, 9, 10, 11, 12, 33, 34, 37, 39, 41, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 81, 82, 83, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 115, 116, 129, 130, 132], "modul": [0, 1, 8, 13, 31, 35, 36, 42, 47, 48, 52, 75, 76, 84, 89, 96, 101, 108, 111, 130, 132], "defin": [1, 18, 21, 25, 27, 30, 31, 93, 129, 131, 132], "command": [1, 2, 3, 4, 5, 7, 130, 131], "line": [1, 2, 3, 4, 5, 7, 130, 131], "interfac": [1, 2, 3, 4, 7, 130, 131], "function": [1, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 35, 37, 39, 42, 43, 45, 46, 48, 52, 53, 59, 62, 68, 69, 70, 75, 76, 78, 81, 92, 93, 96, 111, 112, 114, 115, 116, 119, 120, 124, 132], "abstract": [2, 3, 18, 19, 23, 25, 37, 91, 98, 103, 109], "class": [2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 130], "__init__": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 86, 88, 91, 93, 98, 100, 103, 105, 107, 109, 111, 115, 116, 119, 120, 122, 123, 128], "method": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 86, 88, 91, 93, 98, 100, 103, 105, 107, 109, 111, 115, 116, 119, 120, 122, 123, 132], "get_pars": [3, 7, 128], "cli_info": [3, 7], "str": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 88, 91, 93, 94, 95, 98, 100, 107, 111, 115, 116, 117, 122, 123, 125, 126], "ani": [3, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 34, 37, 39, 41, 43, 44, 45, 46, 58, 60, 61, 62, 63, 65, 67, 72, 74, 81, 83, 86, 88, 91, 93, 94, 95, 98, 100, 107, 111, 115, 116, 117, 125, 126, 130, 132], "find": [3, 7, 8, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 78, 128, 132], "an": [3, 7, 10, 33, 34, 41, 43, 46, 50, 51, 56, 58, 60, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107, 115, 116, 131, 132], "appropri": [3, 7, 130], "inform": [3, 7, 14, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 60, 93, 111, 115, 116, 129, 131, 132], "paramet": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 86, 88, 91, 93, 94, 95, 98, 100, 105, 107, 109, 111, 113, 115, 116, 117, 119, 122, 123, 125, 126], "The": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 42, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 86, 88, 91, 93, 94, 95, 98, 100, 107, 109, 111, 115, 116, 117, 122, 123, 125, 126, 130, 131], "pars": [3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 130], "argument": [3, 5, 7, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 37, 46, 65, 72, 78, 81, 91, 100, 115, 116, 117, 129, 130], "return": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 86, 88, 91, 93, 94, 95, 98, 100, 107, 111, 113, 115, 116, 117, 119, 122, 126, 132], "A": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 86, 88, 91, 93, 98, 100, 107, 111, 113, 122, 123, 130, 132], "can": [3, 5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 89, 91, 93, 98, 100, 102, 103, 107, 109, 115, 116, 129, 130, 131, 132], "us": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 86, 91, 93, 94, 98, 100, 107, 115, 116, 119, 120, 129, 130, 131, 132], "creat": [3, 5, 7, 19, 23, 29, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 67, 69, 72, 74, 78, 81, 83, 88, 91, 93, 98, 100, 105, 107, 111, 115, 116, 119, 120, 122, 123, 131, 132], "pipelin": [3, 5, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 62, 68, 85, 86, 88, 91, 93, 128, 129, 131, 132], "runner": [3, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 128, 130, 132], "get_run_opt": [3, 7, 128], "extract": [3, 7, 39, 60, 100], "dataload": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 85, 86, 88, 128, 130, 132], "contain": [3, 7, 15, 17, 18, 19, 20, 21, 23, 25, 27, 29, 30, 37, 39, 41, 42, 44, 60, 62, 74, 86, 88, 91, 93, 94, 95, 111, 129, 131], "its": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 78, 86, 88, 103, 130, 132], "parse_cli_argu": [3, 7, 128], "arg": [3, 7, 15, 18, 21, 25, 27, 30, 33, 43, 50, 51, 58, 62, 67, 91, 100, 115, 116], "none": [3, 5, 7, 37, 39, 41, 43, 46, 56, 61, 62, 67, 78, 81, 86, 88, 93, 94, 98, 107, 111, 115, 116, 119, 122, 129], "receiv": [3, 7, 132], "from": [3, 7, 9, 10, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 54, 55, 56, 60, 63, 80, 81, 83, 93, 98, 100, 107, 111, 115, 116, 123, 126, 129, 132], "If": [3, 5, 7, 33, 34, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 94, 98, 100, 107, 111, 115, 116, 119, 129, 130, 132], "should": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 51, 69, 78, 81, 93, 100, 111, 115, 116, 123, 130, 132], "sy": [3, 7], "argv": [3, 7], "directli": [3, 7], "dictionari": [3, 7, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 81, 88, 109, 111, 115, 116, 123, 130], "parse_cli_arguments_for_pars": [3, 7, 128], "run": [3, 4, 7, 41, 43, 44, 85, 86, 88, 122, 123, 128, 129, 132], "data_dict": [3, 7, 12, 34, 37, 39, 41, 43, 44, 46, 50, 51, 58, 63, 91, 93, 94, 95], "result": [3, 7, 36, 86, 88, 115, 116, 132], "cli_nam": 5, "object": [5, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 43, 50, 51, 60, 61, 62, 78, 109, 111, 119, 120, 122, 123, 125, 126, 130, 132], "name": [5, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 94, 98, 100, 107, 111, 122, 123, 129, 130], "rais": [5, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107], "valueerror": 5, "i": [5, 10, 12, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 61, 62, 63, 65, 67, 68, 69, 70, 72, 74, 78, 79, 81, 83, 91, 93, 94, 98, 100, 107, 115, 116, 120, 122, 129, 130, 131, 132], "found": [5, 50, 56, 111, 129, 130], "attribut": [7, 17, 18, 19, 21, 23, 25, 27, 29, 30, 41, 43, 62, 78, 81, 93, 115, 116, 119], "add_arguments_to_argpars": [7, 128], "argpars": 7, "argumentpars": 7, "add": [7, 43, 56, 132], "ad": [7, 10, 12, 39], "get_argpars": [7, 128], "descript": [7, 111], "brain": [7, 128, 129, 132], "imag": [7, 64, 65, 129, 131, 132], "load": [7, 9, 10, 11, 12, 17, 18, 19, 27, 29, 37, 39, 62, 111, 126, 128, 130, 132], "code": [8, 47, 50, 57, 64, 68, 77, 80, 97, 130, 131, 132], "sourc": [9, 10, 78, 128, 132], "has_length": [10, 12], "true": [10, 12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107], "ar": [10, 33, 34, 50, 56, 62, 65, 70, 78, 93, 111, 115, 116, 122, 123, 129, 130, 131, 132], "e": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 70, 78, 129, 131, 132], "g": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 78, 129, 132], "file": [10, 12, 26, 27, 29, 37, 39, 41, 55, 60, 65, 81, 93, 123, 128, 129, 131, 132], "over": [10, 41, 43], "therefor": 10, "thei": [10, 43, 78], "have": [10, 37, 72, 78, 130, 132], "__iter__": [10, 132], "implement": [10, 38, 39, 40, 41, 43, 50, 115, 116, 132], "subclass": [10, 111, 130, 132], "initi": [10, 12, 18, 21, 25, 27, 30, 33, 34, 78, 79, 86, 103, 131, 132], "compute_length": [10, 12, 128], "comput": [10, 12, 50, 78, 115, 116], "length": [10, 12, 70, 78, 98, 100, 107], "int": [10, 12, 18, 19, 23, 25, 37, 39, 41, 43, 50, 51, 56, 67, 69, 70, 74, 79, 88, 98, 100, 105, 107, 119], "note": [10, 12, 18, 21, 25, 27, 30, 72, 74, 78], "thi": [10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 43, 44, 50, 56, 62, 63, 68, 70, 78, 91, 93, 100, 115, 116, 129, 130, 131, 132], "__len__": [10, 12], "you": [10, 12, 34, 78, 115, 116, 129, 130, 131, 132], "overrid": [10, 12, 39], "func": [10, 12, 78], "simpl": [11, 12, 18, 19, 23, 25, 120, 132], "glob": [11, 12], "pattern": [11, 12], "glob_pattern": 12, "filter_fn": [12, 111, 128], "glob_fn": 12, "iglob": 12, "kei": [12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 95, 98, 100, 107, 111, 130], "chain": 12, "built": 12, "all": [12, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 49, 56, 67, 90, 91, 111, 115, 116, 119, 122, 129, 130, 132], "bool": [12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 111], "includ": [12, 94, 111], "filter": [12, 50, 74, 78, 111, 128, 132], "path_to_data_dict": [12, 128], "convert": [12, 14, 15, 78, 115, 116, 128, 130], "loader": [14, 15, 18, 19, 21, 23, 25, 27, 29, 30], "get_additional_kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 128], "input_": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30], "info": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 56], "addit": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 81, 91, 115, 116, 117, 130], "pass": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 46, 65, 72, 78, 81, 100, 115, 116, 117, 130, 132], "identifi": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30], "cli": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 128, 130], "input": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107, 115, 116, 129, 130, 132], "avail": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 56, 119], "determin": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 51, 115, 116, 129], "kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 43, 50, 51, 58, 62, 67, 79, 81, 83, 91, 100, 115, 116, 117], "valu": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 41, 43, 65, 78, 81, 115, 116, 123, 130], "link_loader_to_pipelin": [15, 18, 19, 21, 23, 25, 27, 29, 30, 128], "pair": [15, 18, 19, 21, 23, 25, 27, 29, 30, 81], "correspond": [15, 18, 19, 21, 23, 25, 27, 29, 30, 62, 72, 86, 88, 93, 111], "map": [15, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 119, 123], "between": [15, 18, 19, 21, 23, 25, 27, 29, 30, 70, 81, 93, 94, 132], "set_additional_kwarg": [15, 18, 19, 21, 23, 25, 27, 29, 30, 128], "textdictpars": 16, "instead": [16, 18, 19, 25, 115, 116, 130], "mixin": [17, 28], "textpars": [17, 18, 23, 28, 30, 128, 130], "befor": [17, 34, 115, 116, 132], "string": [17, 18, 19, 23, 27, 29, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 115, 116, 122, 130], "when": [17, 18, 19, 23, 27, 29, 43, 70, 91, 93, 101, 102, 103, 115, 116, 122, 129, 130, 132], "call": [17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 46, 78, 115, 116, 132], "load_fil": [17, 18, 19, 27, 29, 128], "path": [17, 18, 19, 27, 29, 37, 39, 56, 60, 61, 62, 65, 80, 81, 111, 125, 126, 128, 129, 130], "text": [17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 115, 116, 128, 130], "wa": [17, 18, 19, 27, 29, 50, 91], "fileloadmixin": [18, 19, 128], "apply_config": [18, 19, 21, 23, 25, 27, 29, 30, 109, 128], "config": [18, 19, 21, 23, 25, 27, 29, 30, 88, 109, 130], "appli": [18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 50, 56, 102, 103, 109], "configur": [18, 19, 21, 23, 25, 27, 29, 30, 88, 109, 115, 116, 117, 129, 131, 132], "get_runner_from_parsed_config": [18, 19, 21, 23, 25, 27, 29, 30, 128], "parsed_config": [18, 19, 21, 23, 25, 27, 29, 30], "construct": [18, 19, 21, 23, 25, 27, 29, 30, 132], "alreadi": [18, 19, 21, 23, 25, 27, 29, 30, 91, 93, 132], "parse_al": [18, 19, 21, 23, 25, 27, 29, 30, 128], "all_info": [18, 19, 21, 23, 25, 27, 29, 30], "parse_text_to_dict": [18, 19, 23, 25, 27, 28, 29, 30, 128], "builtin": [18, 19, 23, 25], "recursive_pars": [18, 19, 21, 23, 25, 27, 29, 30, 128], "text_dict": [18, 19, 21, 23, 25, 27, 29, 30], "intern": [18, 21, 25, 27, 30, 68], "so": [18, 21, 25, 27, 30, 61, 132], "also": [18, 21, 25, 27, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107, 129, 130, 131, 132], "specifi": [18, 21, 25, 27, 30, 78, 115, 116, 129], "itself": [18, 21, 25, 27, 30], "under": [18, 21, 25, 27, 30, 130], "templatetextpars": [19, 29, 128, 130], "new": [19, 23, 29, 39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 74, 91, 115, 116, 120, 122, 123, 132], "onli": [20, 21, 62, 93, 111, 122, 129, 130, 131, 132], "objectswithconfig": [21, 128], "templat": [22, 23, 29, 33, 130], "sting": [22, 23], "jinja2": [23, 130], "fill": [23, 130], "render": 23, "simpledictpars": [25, 128], "yamlmixin": [27, 29, 30, 128], "filepars": [27, 128, 130], "templatefilepars": [29, 128, 130], "packag": [31, 68, 87, 88, 110, 111, 115, 116, 129, 131, 132], "pipelinestep": [31, 33, 37, 39, 41, 43, 46, 50, 51, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 98, 128], "step": [32, 33, 34, 37, 39, 41, 43, 45, 46, 56, 71, 81, 89, 90, 91, 93, 115, 116, 132], "repres": 33, "order": [33, 43, 58, 72, 78], "output": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107, 132], "one": [33, 60, 78, 132], "next": [33, 41, 98, 100, 107, 132], "overview": [33, 34, 43, 131], "default": [33, 40, 41, 50, 51, 61, 81, 115, 116, 117, 128, 129, 130, 132], "defaultpiplein": 33, "keyword": [33, 46, 65, 72, 81, 91, 100, 115, 116, 117, 130], "parse_dict_kei": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 128], "require_ordered_dict": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107], "fals": [33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 111], "error": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 91, 93, 98, 100, 107, 132], "messag": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107, 115, 116, 129], "must": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107], "ordinari": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107], "typeerror": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 91, 93, 98, 100, 107], "copy_data_dict": [34, 46, 56, 65, 72, 74], "preprocessingstep": [34, 37, 43, 81], "build": 34, "block": [34, 69, 131], "repositori": [34, 131], "In": [34, 37, 78, 130, 132], "essenc": 34, "functor": [34, 132], "like": [34, 115, 116, 130, 132], "take": [34, 62, 81, 93, 106, 107, 132], "perform": [34, 78, 98, 101, 107], "some": [34, 78, 132], "modifi": 34, "place": 34, "copi": [34, 58], "conveni": 34, "provid": [34, 72, 78, 115, 116, 129, 130, 132], "make": [34, 78, 115, 116, 132], "easier": [34, 132], "write": [34, 129, 130], "want": [34, 78, 93, 115, 116, 130, 132], "your": [34, 129, 130, 131], "own": [34, 129, 131], "inherit": [34, 130], "anoth": [34, 63, 78, 132], "exist": [34, 37, 39, 41, 93, 130], "For": [34, 78, 127, 131, 132], "more": [34, 111, 129, 131, 132], "about": [34, 78, 93, 132], "structur": [34, 132], "how": [34, 129, 132], "them": 34, "see": [34, 72, 78, 81, 100, 111, 127, 129, 130, 131, 132], "control": [34, 130], "whether": [34, 41, 50, 51, 61, 91, 93, 111], "oper": [34, 98, 107, 115, 116, 128, 132], "relat": [35, 48, 52, 53], "intermedi": [36, 37], "preprocessingpipelin": [36, 37, 42, 44], "cache_root": [37, 39], "cache_kei": [37, 39], "previous_cache_folder_kei": [37, 39], "previous_cach": [37, 39], "serializer_fn": [37, 39], "pickle_dump_wrapp": [37, 39, 128], "deserializer_fn": [37, 39], "pickle_load_wrapp": [37, 39, 128], "store": [37, 43, 60, 81, 93, 132], "folder": [37, 39], "locat": [37, 70, 123, 130], "previou": [37, 39, 78, 81, 132], "serial": [37, 39, 128], "certain": 37, "first": [37, 72, 78, 100, 129, 132], "second": [37, 72, 78, 115, 116, 132], "deseri": [37, 39], "find_existing_cache_from_data_dict": [37, 39, 128], "step_index": [37, 39, 41, 43], "being": [37, 39, 63, 130], "index": [37, 39, 41, 43, 56, 98, 100, 107], "part": [37, 39, 41, 94], "possibli": [37, 39, 131], "find_existing_cache_from_previous_filenam": [37, 39, 128], "previous_filenam": [37, 39], "get_cache_dict": [37, 39, 128], "get_existing_cache_path": [37, 39, 128], "get": [37, 39, 41, 43, 69], "get_filenam": [37, 39, 128], "filenam": [37, 39, 93, 94], "get_foldernam": [37, 39, 128], "foldernam": 37, "get_path": [37, 39, 128], "load_from_data_dict": [37, 39, 128], "predict_filenames_from_data_dict": [37, 39, 128], "predict": [37, 39], "possibl": [37, 39, 93, 132], "innermost": 37, "been": [37, 93, 132], "same": [37, 70, 115, 116, 130, 132], "time": [37, 49, 50, 78, 115, 116, 132], "predict_filenames_from_previous_filenam": [37, 39, 128], "predict_paths_from_data_dict": [37, 39, 128], "predict_paths_from_previous_filenam": [37, 39, 128], "save": [37, 39, 128, 132], "cache_folder_overrid": 39, "previous_caches_kei": 39, "filename_kei": 39, "eeg_path": 39, "stimulus_path": [39, 61, 62, 81, 123], "stimuli": [39, 58, 62, 75, 76, 80, 81, 123], "trigger_path": [39, 81], "separ": [39, 81, 93, 94], "_": [39, 81, 94], "pipelinecach": [39, 41, 62, 128], "instanc": [39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 72, 74, 91, 115, 116, 120], "root": [39, 93, 122, 123], "pipeline_cach": [41, 62], "overwrit": [41, 93, 128, 132], "defaultpipelin": [41, 128, 132], "iterate_over_step": [41, 43, 128], "properti": [41, 43, 78, 93], "on_error": [41, 43, 128], "One": [41, 43], "run_step": [41, 43, 128], "singl": [41, 43, 132], "previous_steps_kei": 43, "previous_step": 43, "error_handler_fn": 43, "default_error_handler_fn": [43, 128], "stop": 43, "fo": 43, "logic": 43, "thread": 43, "multiprocess": [43, 63, 128, 132], "safe": 43, "manner": [43, 132], "It": [43, 78, 132], "handl": [43, 44, 57, 75, 76], "occur": [43, 44], "dure": [43, 44, 63], "keep": [43, 93, 132], "histori": 43, "specif": [43, 115, 116, 132], "metadata": [43, 93, 95, 132], "except": [43, 44, 115, 116], "handler": 44, "log": [44, 128, 130], "traceback": [44, 115, 116], "function_": 46, "extra_arg": 46, "extra_kwarg": 46, "lambdapreprocessingstep": 46, "extra": [46, 65, 130], "remov": [49, 50, 51, 115, 116, 132], "techniqu": 49, "respons": [49, 50, 57, 59, 70], "assum": 49, "mne": [49, 56, 65], "layout": 49, "channel": [49, 50, 56, 67, 78], "data_kei": [50, 51, 58, 67, 69, 72, 74], "fs_kei": 50, "data_f": [50, 56, 74], "reference_channel": 50, "0": [50, 56, 67, 69, 78, 79, 98, 105, 107, 119, 132], "1": [50, 56, 69, 88, 119, 132], "2": [50, 78, 132], "32": [50, 78], "33": 50, "34": 50, "35": 50, "36": 50, "delai": 50, "3": [50, 131, 132], "eyeblink": 50, "mwf": 50, "excel": 50, "librari": [50, 132], "somer": 50, "et": 50, "al": 50, "matlab": [50, 68, 72], "here": [50, 132], "refer": [50, 67, 130], "b": 50, "francart": 50, "t": [50, 132], "bertrand": 50, "2018": 50, "gener": [50, 93, 94, 95, 108, 122, 132], "eeg": [50, 51, 58, 62, 67, 68, 69, 122, 128, 131], "algorithm": 50, "multi": 50, "wiener": 50, "j": 50, "neural": 50, "eng": 50, "15": 50, "036007": 50, "sampl": [50, 70, 74, 78, 79], "frequenc": [50, 70, 73, 74, 79], "indic": [50, 56, 69, 70], "By": [50, 115, 116, 130], "frontal": 50, "biosemi64": 50, "system": [50, 54, 70, 132], "ha": [50, 78, 93], "taken": 50, "account": 50, "apply_mwf": [50, 128], "mwf_weight": 50, "np": [50, 54, 56, 69, 70, 72, 100, 107], "shape": [50, 56, 70, 72, 78], "weight": 50, "check_symmetr": [50, 128], "rtol": 50, "1e": 50, "05": 50, "atol": 50, "08": 50, "check": [50, 63, 91, 93, 115, 116], "matrix": 50, "symmetr": 50, "float": [50, 51, 56, 74, 78, 79, 98, 100, 107], "rel": 50, "toler": 50, "absolut": 50, "otherwis": [50, 91, 115, 116], "compute_mwf": [50, 128], "mask": 50, "segment": [50, 78], "dimens": 50, "fix_symmetr": [50, 128], "fix": 50, "get_artifact_seg": [50, 128], "f": [50, 129], "select": [50, 56, 122], "where": [50, 70, 81, 93, 131], "sort_evd": [50, 128], "eig_valu": 50, "eig_vector": 50, "sort": 50, "eigenvalu": 50, "eigenvector": 50, "column": [50, 72, 123], "stack_delai": [50, 128], "stack": [50, 115, 116], "version": [50, 93], "number": [50, 69, 78, 119], "threshold": 51, "500": 51, "blank": 51, "larg": [51, 78, 132], "spike": 51, "blankeegartifact": 51, "access": 51, "obtain": 51, "eeg_data": 51, "microvolt": 51, "seem": 51, "work": [51, 68, 78, 121, 132], "well": 51, "trigger": [54, 56, 81, 128], "process": [54, 61, 63, 68, 78, 93, 115, 116, 119, 128, 129, 132], "expect": [54, 70], "1d": [54, 69, 70], "arrai": [54, 69, 70, 72, 78], "integ": [54, 56, 70], "bdf": [55, 122], "eeg_path_kei": 56, "data_path": [56, 60, 65], "raw": [56, 65, 69], "eeg_data_kei": 56, "eeg_trigger_data_kei": 56, "trigger_data": [56, 69], "info_prefix": 56, "eeg_": 56, "channels_to_select": 56, "trigger_channel": 56, "statu": 56, "unit_multipli": 56, "additional_map": 56, "eeg_sfreq": [56, 69], "mne_arg": [56, 65], "mne_kwarg": [56, 65], "mneload": [56, 128], "loadeeg": 56, "prefix": [56, 81], "given": [56, 78, 83, 93, 94, 122, 130], "multipli": 56, "volt": 56, "get_channel": [56, 128], "channel_nam": 56, "selected_channel": 56, "n_channel": [56, 70], "n_sampl": [56, 70], "n_selected_channel": 56, "keyerror": [56, 78], "indexerror": 56, "out": [56, 115, 116], "rang": [56, 132], "stimulus_kei": 58, "keys_to_index": 58, "event_info": [58, 60], "split": [58, 69, 128], "individu": 58, "stimulu": [58, 59, 60, 61, 62, 63, 70, 123, 128], "data_dict_copi": [58, 128], "to_exclud": 58, "brain_path_kei": 60, "event_info_kei": 60, "compliant": 60, "event": [60, 115, 116, 123], "tsv": [60, 123], "read_ev": [60, 128], "events_path": 60, "read": [60, 130, 132], "each": [60, 72, 78, 79, 130, 132], "row": [60, 72], "stim_path_kei": 61, "ignore_extens": 61, "compar": 61, "basenam": 61, "ignor": 61, "extens": [61, 81, 93, 115, 116, 122, 129, 130, 132], "process_path": [61, 128], "valid": 61, "stimulus_data": [62, 79], "extract_stimuli_information_fn": 62, "bidsstimulusinfoextractor": [62, 128], "comparison_fn": 62, "basenamecomparisonfn": [62, 128], "stimulus_path_kei": 62, "stimuli_kei": 62, "grouper": 62, "util": [62, 68, 128, 132], "bidsstimulusgroup": [62, 128], "key_fn_for_multiprocess": 62, "default_multiprocessing_key_fn": [62, 128], "linkstimulustoeeg": 62, "stimulus_data_dict": 62, "find_stimulus_fn": 62, "record": [62, 70, 115, 116], "cach": [62, 128], "necessari": [62, 129, 131, 132], "current": [63, 98, 100, 107, 115, 116, 130, 131], "": [65, 72, 115, 116, 130, 132], "read_raw": 65, "axi": [67, 78, 98, 105, 107], "re": 67, "multivari": 67, "common": [67, 130], "averag": 67, "most": [68, 130, 131, 132], "our": [68, 132], "eegorl": 68, "brain_trigger_processing_fn": 69, "lambda": [69, 132], "postprocessing_fn": 69, "default_drift_correct": [69, 128], "data_trigger_kei": 69, "data_sampling_rate_kei": 69, "stimulus_trigger_data_kei": 69, "stimulus_trigger_sampling_rate_kei": 69, "trigger_sr": 69, "align": 69, "puls": 69, "form": 69, "period": 69, "matchtriggerstostimulu": 69, "get_trigger_indic": [69, 128], "split_epoch": [69, 128], "brain_trigger_indic": [69, 70], "brain_f": [69, 70], "nb_epoch": 69, "epoch": [69, 115, 116, 128], "brain_data": 70, "stimulus_trigger_indic": 70, "stimulus_f": 70, "correct": [70, 132], "drift": 70, "clock": 70, "mai": [70, 78, 132], "caus": [70, 78, 132], "misalign": 70, "tri": 70, "interpol": 70, "2d": 70, "filter_": 72, "emulate_matlab": 72, "sosfiltfilt_arg": 72, "sosfiltfilt_kwarg": 72, "section": 72, "wrapper": [72, 128], "scipi": [72, 74], "signal": [72, 74], "coeffici": 72, "n_section": 72, "6": [72, 79], "three": 72, "numer": 72, "last": [72, 91, 93, 115, 116], "denomin": 72, "document": [72, 132], "get_matlab_argu": [72, 128], "mimick": 72, "target": [73, 74, 79], "target_frequ": 74, "sampling_frequency_kei": 74, "resample_arg": 74, "resample_kwarg": 74, "polyphas": 74, "resample_poli": 74, "calcul": [77, 79], "speech": 77, "power_factor": [78, 79], "filterbank": 78, "gammatonefilterbank": 78, "transform": 78, "gammaton": [78, 79], "power": [78, 79], "factor": [78, 79], "durat": [78, 128], "user": [78, 115, 116, 132], "maximum": [78, 119], "buffers": 78, "two": 78, "buffer": 78, "nchannel": 78, "applic": 78, "case": 78, "final": [78, 132], "exampl": [78, 115, 116], "below": 78, "mani": 78, "too": 78, "fit": 78, "memori": [78, 132], "which": [78, 93, 115, 116, 123, 130, 131, 132], "onlin": 78, "do": [78, 119, 132], "size": 78, "fetch": 78, "typic": 78, "give": 78, "reason": 78, "good": 78, "rm": 78, "would": [78, 130], "def": [78, 132], "sum_of_squar": 78, "running_sum_of_squar": 78, "sum": [78, 132], "sqrt": 78, "fb": 78, "nsampl": 78, "sound": 78, "chang": [78, 115, 116], "after": [78, 91, 93, 132], "although": 78, "problem": [78, 132], "assumpt": 78, "were": 78, "insert": 78, "dummi": 78, "donothingfilterbank": 78, "guarante": 78, "stimulus_data_kei": 79, "stimulus_sr_kei": 79, "stimulus_sr": 79, "output_kei": 79, "envelope_data": 79, "min_freq": 79, "50": 79, "max_freq": 79, "5000": 79, "band": 79, "28": 79, "featureextractor": 79, "target_f": 79, "load_from": 81, "load_fn": 81, "noqa": [81, 93], "e501": [81, 93], "point": [81, 115, 116, 130], "default_load_fn": 81, "constructor": 81, "map_fn": 86, "pipelines_with_load": [86, 88], "nb_process": [88, 119], "logging_config": 88, "clear_output": [91, 93], "clear": [91, 93], "space": [91, 93, 132], "posit": [91, 115, 116, 129], "is_already_don": [91, 93, 128], "done": 91, "is_reload": [91, 93, 128], "reload": [91, 93, 128], "root_dir": [93, 122], "to_sav": 93, "filename_fn": 93, "default_filename_fn": [93, 128], "save_fn": 93, "reload_fn": 93, "metadata_filenam": 93, "save_metadata": 93, "json": [93, 130], "metadata_key_fn": 93, "default_metadata_key_fn": [93, 128], "disk": [93, 132], "unprocess": 93, "multipl": [93, 129, 132], "directori": [93, 122, 123, 130], "entir": 93, "featur": [93, 94], "filepath": 93, "self": [93, 132], "default_save_funct": 93, "default_reload_funct": 93, "we": [93, 132], "continu": 93, "feature_nam": 94, "set_nam": 94, "differ": [94, 98, 107, 132], "feature_map": [98, 107], "split_fract": [98, 100, 107], "split_nam": [98, 107], "extra_oper": [98, 107], "splitteroper": [98, 105, 107, 128], "fraction": [98, 100, 107], "shortest_length": [98, 100, 107], "start_index": [98, 100, 107], "shortest": [98, 100, 107], "start": [98, 100, 107, 132], "middl": [99, 100], "splitter": [100, 106, 107, 128], "largest": 100, "front": 100, "back": 100, "encount": 100, "sort_split_names_fract": 100, "other": [100, 130, 131, 132], "sequenti": [100, 128, 132], "reset": [103, 105, 128], "state": 103, "x_standard": 105, "frac": 105, "x": [105, 132], "mu": 105, "sigma": 105, "slice": [106, 107], "previously_found": 111, "obj": [111, 125], "previous": 111, "member": 111, "to_find": 111, "load_from_path": [111, 128], "attach_to_main": 111, "attach": 111, "main": [111, 131], "__call__": [111, 132], "predicate_fn": [111, 128], "predic": 111, "lst": 113, "fmt": [115, 116], "asctim": [115, 116], "3d": [115, 116], "levelnam": [115, 116], "8": [115, 116], "defaultformatt": [115, 128], "color": 115, "formatt": [115, 116], "format": [115, 116, 128, 132], "localtim": [115, 116], "tm_year": [115, 116], "tm_mon": [115, 116], "tm_mdai": [115, 116], "tm_hour": [115, 116], "tm_min": [115, 116], "tm_sec": [115, 116], "tm_wdai": [115, 116], "tm_ydai": [115, 116], "tm_isdst": [115, 116], "sinc": [115, 116], "express": [115, 116], "local": [115, 116], "operand": [115, 116], "yield": [115, 116, 132], "coupl": [115, 116], "preparatori": [115, 116], "carri": [115, 116], "logrecord": [115, 116], "getmessag": [115, 116], "usestim": [115, 116, 128], "formattim": [115, 116, 128], "formatexcept": [115, 116, 128], "append": [115, 116, 132], "ei": [115, 116], "just": [115, 116, 130, 132], "print_except": [115, 116], "formatstack": [115, 116, 128], "stack_info": [115, 116], "special": [115, 116, 130], "print_stack": [115, 116], "trail": [115, 116], "newlin": [115, 116], "datefmt": [115, 116], "creation": [115, 116], "overridden": [115, 116], "requir": [115, 116, 130, 132], "basic": [115, 116, 130], "behaviour": [115, 116], "follow": [115, 116, 130, 132], "strftime": [115, 116], "iso8601": [115, 116], "rfc": [115, 116], "3339": [115, 116], "particular": [115, 116], "signatur": [115, 116], "gmtime": [115, 116], "To": [115, 116, 132], "shown": [115, 116, 132], "gmt": [115, 116], "basicconfig": 117, "singleton": 119, "classmethod": 119, "clean": [119, 128], "up": [119, 132], "pool": 119, "get_map_fn": [119, 128], "callback": [119, 120], "simplecallbackfn": [119, 128], "maxtasksperchild": 119, "core": 119, "track": [119, 120], "progress": [119, 120], "task": [119, 122, 123], "per": 119, "child": 119, "dataset": [122, 123, 131, 132], "select_path": [122, 128], "subject": [122, 123], "session": [122, 123], "suffix": 122, "match": 122, "bids_root": 123, "stim_fil": 123, "subfold": 123, "na_valu": 123, "n": 123, "group": 123, "interpret": 123, "miss": [123, 130], "wrap": [125, 126], "around": [125, 126], "pickl": [125, 126, 132], "dump": 125, "full": 127, "tree": 127, "brain_pip": [128, 129, 130, 131, 132], "cli_entrypoint": 128, "cli_factori": 128, "defaultcli": 128, "globload": 128, "simple_dict": 128, "template_text": 128, "yaml": [128, 129, 130, 132], "yamlfilepars": 128, "yamltemplatefilepars": [128, 130], "yamltextpars": 128, "defaultpipelinecach": 128, "cachingpreprocessingpipelin": 128, "artifact": 128, "artifactremovalmwf": 128, "interpolateartifact": 128, "biosemi": 128, "biosemi_trigger_processing_fn": 128, "loadeegnumpi": 128, "splitepoch": 128, "link": [128, 130], "linkstimulustobrainrespons": 128, "rerefer": 128, "commonaveragererefer": 128, "alignperiodicblocktrigg": 128, "sosfiltfilt": 128, "resampl": 128, "resamplepoli": 128, "audio": 128, "envelop": 128, "envelopefromgammaton": 128, "gammatoneenvelop": 128, "loadstimuli": 128, "transpos": 128, "defaultrunn": 128, "defaultsav": 128, "mid": 128, "midsplit": 128, "normal": 128, "standard": 128, "sequentialsplit": 128, "finder": [128, 130], "flatten": 128, "default_log": 128, "colorformatt": 128, "multiprocessingsingleton": 128, "bidspathgener": 128, "With": 129, "linea": 129, "config_fil": [129, 130], "typical_process": 129, "through": [129, 131, 132], "usag": [129, 132], "h": 129, "parser_fil": 129, "input_fil": 129, "definit": 129, "help": 129, "show": [129, 132], "exit": 129, "extern": 129, "search": [129, 130], "programmat": 130, "script": [130, 131, 132], "allow": [130, 132], "wai": [130, 132], "without": [130, 132], "import": [130, 132], "variabl": 130, "runtim": 130, "__file__": 130, "__filedir__": 130, "respect": 130, "ask": 130, "data_load": [130, 132], "data_from": 130, "helper": [130, 132], "treat": 130, "extra_path": 130, "is_point": 130, "try": [130, 132], "support": [130, 131], "effici": [131, 132], "extensibli": 131, "python3": 131, "goal": [131, 132], "public": 131, "icassp": 131, "2023": 131, "auditori": 131, "challeng": 131, "sparrkule": [131, 132], "further": 131, "extend": 131, "reli": 131, "explain": 131, "detail": 131, "pip": 131, "bash": 131, "python": [131, 132], "7": 131, "pleas": [131, 132], "open": 131, "issu": 131, "pull": 131, "request": 131, "md": 131, "organ": 132, "customiz": 132, "fig": 132, "fly": 132, "complet": 132, "relev": 132, "accomplish": 132, "mean": 132, "easi": 132, "preform": 132, "bandpass": 132, "motion": 132, "etc": 132, "saver": 132, "free": 132, "complex": 132, "elabor": 132, "abl": 132, "both": 132, "commonli": 132, "practic": 132, "came": 132, "wast": 132, "lot": 132, "larger": 132, "delet": 132, "need": 132, "again": 132, "later": 132, "addition": 132, "easili": 132, "worri": 132, "datapoint": 132, "basi": 132, "possbil": 132, "parallel": 132, "modeul": 132, "bids_preprocess": 132, "picklabl": 132, "non": 132, "probabl": 132, "while": 132, "speed": 132, "immensli": 132, "come": 132, "cost": 132, "higher": 132, "ram": 132, "As": 132, "quit": 132, "bottleneck": 132, "exceed": 132, "limit": 132, "hard": 132, "drive": 132, "temporari": 132, "storag": 132, "swap": 132, "slow": 132, "down": 132, "reloc": 132, "recommend": 132, "modular": 132, "thing": 132, "independ": 132, "contribut": 132, "mind": 132, "maintain": 132, "futur": 132, "person": 132, "project": 132, "though": 132, "doe": 132, "everyth": 132, "fine": 132, "me": 132, "abov": 132, "strictli": 132, "speak": 132, "isn": 132, "theori": 132, "lieu": 132, "toi": 132, "bit": 132, "let": 132, "now": 132, "rangedataload": 132, "9": 132, "adddata": 132, "removemean": 132, "len": 132, "alright": 132, "manual": 132, "4": 132, "5": 132, "Or": 132, "look": 132}, "objects": {"": [[0, 0, 0, "-", "brain_pipe"]], "brain_pipe": [[1, 0, 0, "-", "cli"], [8, 0, 0, "-", "dataloaders"], [13, 0, 0, "-", "parser"], [31, 0, 0, "-", "pipeline"], [47, 0, 0, "-", "preprocessing"], [84, 0, 0, "-", "runner"], [89, 0, 0, "-", "save"], [96, 0, 0, "-", "split"], [108, 0, 0, "-", "utils"]], "brain_pipe.cli": [[2, 0, 0, "-", "base"], [4, 3, 1, "", "cli_entrypoint"], [5, 3, 1, "", "cli_factory"], [6, 0, 0, "-", "default"]], "brain_pipe.cli.base": [[3, 1, 1, "", "CLI"]], "brain_pipe.cli.base.CLI": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_parser"], [3, 2, 1, "", "get_run_options"], [3, 2, 1, "", "parse_cli_arguments"], [3, 2, 1, "", "parse_cli_arguments_for_parser"], [3, 2, 1, "", "run"]], "brain_pipe.cli.default": [[7, 1, 1, "", "DefaultCLI"]], "brain_pipe.cli.default.DefaultCLI": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "add_arguments_to_argparser"], [7, 2, 1, "", "get_argparser"], [7, 2, 1, "", "get_parser"], [7, 2, 1, "", "get_run_options"], [7, 2, 1, "", "parse_cli_arguments"], [7, 2, 1, "", "parse_cli_arguments_for_parser"], [7, 2, 1, "", "run"]], "brain_pipe.dataloaders": [[9, 0, 0, "-", "base"], [11, 0, 0, "-", "path"]], "brain_pipe.dataloaders.base": [[10, 1, 1, "", "DataLoader"]], "brain_pipe.dataloaders.base.DataLoader": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "compute_length"]], "brain_pipe.dataloaders.path": [[12, 1, 1, "", "GlobLoader"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "compute_length"], [12, 2, 1, "", "path_to_data_dict"]], "brain_pipe.parser": [[14, 0, 0, "-", "base"], [16, 0, 0, "-", "file"], [20, 0, 0, "-", "simple_dict"], [22, 0, 0, "-", "template_text"], [24, 0, 0, "-", "text"], [26, 0, 0, "-", "yaml"]], "brain_pipe.parser.base": [[15, 1, 1, "", "Parser"]], "brain_pipe.parser.base.Parser": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "get_additional_kwargs"], [15, 2, 1, "", "link_loader_to_pipeline"], [15, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file": [[17, 1, 1, "", "FileLoadMixin"], [18, 1, 1, "", "FileParser"], [19, 1, 1, "", "TemplateFileParser"]], "brain_pipe.parser.file.FileLoadMixin": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_additional_kwargs"], [17, 2, 1, "", "load_file"]], "brain_pipe.parser.file.FileParser": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "apply_config"], [18, 2, 1, "", "get_additional_kwargs"], [18, 2, 1, "", "get_runner_from_parsed_config"], [18, 2, 1, "", "link_loader_to_pipeline"], [18, 2, 1, "", "load_file"], [18, 2, 1, "", "parse_all"], [18, 2, 1, "", "parse_text_to_dict"], [18, 2, 1, "", "recursive_parse"], [18, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file.TemplateFileParser": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "apply_config"], [19, 2, 1, "", "get_additional_kwargs"], [19, 2, 1, "", "get_runner_from_parsed_config"], [19, 2, 1, "", "link_loader_to_pipeline"], [19, 2, 1, "", "load_file"], [19, 2, 1, "", "parse_all"], [19, 2, 1, "", "parse_text_to_dict"], [19, 2, 1, "", "recursive_parse"], [19, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[21, 1, 1, "", "SimpleDictParser"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "apply_config"], [21, 2, 1, "", "get_additional_kwargs"], [21, 2, 1, "", "get_runner_from_parsed_config"], [21, 2, 1, "", "link_loader_to_pipeline"], [21, 2, 1, "", "parse_all"], [21, 2, 1, "", "recursive_parse"], [21, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.template_text": [[23, 1, 1, "", "TemplateTextParser"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_config"], [23, 2, 1, "", "get_additional_kwargs"], [23, 2, 1, "", "get_runner_from_parsed_config"], [23, 2, 1, "", "link_loader_to_pipeline"], [23, 2, 1, "", "parse_all"], [23, 2, 1, "", "parse_text_to_dict"], [23, 2, 1, "", "recursive_parse"], [23, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.text": [[25, 1, 1, "", "TextParser"]], "brain_pipe.parser.text.TextParser": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "apply_config"], [25, 2, 1, "", "get_additional_kwargs"], [25, 2, 1, "", "get_runner_from_parsed_config"], [25, 2, 1, "", "link_loader_to_pipeline"], [25, 2, 1, "", "parse_all"], [25, 2, 1, "", "parse_text_to_dict"], [25, 2, 1, "", "recursive_parse"], [25, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml": [[27, 1, 1, "", "YAMLFileParser"], [28, 1, 1, "", "YAMLMixin"], [29, 1, 1, "", "YAMLTemplateFileParser"], [30, 1, 1, "", "YAMLTextParser"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "apply_config"], [27, 2, 1, "", "get_additional_kwargs"], [27, 2, 1, "", "get_runner_from_parsed_config"], [27, 2, 1, "", "link_loader_to_pipeline"], [27, 2, 1, "", "load_file"], [27, 2, 1, "", "parse_all"], [27, 2, 1, "", "parse_text_to_dict"], [27, 2, 1, "", "recursive_parse"], [27, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "parse_text_to_dict"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "apply_config"], [29, 2, 1, "", "get_additional_kwargs"], [29, 2, 1, "", "get_runner_from_parsed_config"], [29, 2, 1, "", "link_loader_to_pipeline"], [29, 2, 1, "", "load_file"], [29, 2, 1, "", "parse_all"], [29, 2, 1, "", "parse_text_to_dict"], [29, 2, 1, "", "recursive_parse"], [29, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "apply_config"], [30, 2, 1, "", "get_additional_kwargs"], [30, 2, 1, "", "get_runner_from_parsed_config"], [30, 2, 1, "", "link_loader_to_pipeline"], [30, 2, 1, "", "parse_all"], [30, 2, 1, "", "parse_text_to_dict"], [30, 2, 1, "", "recursive_parse"], [30, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.pipeline": [[32, 0, 0, "-", "base"], [35, 0, 0, "-", "cache"], [42, 0, 0, "-", "default"], [45, 0, 0, "-", "wrapper"]], "brain_pipe.pipeline.base": [[33, 1, 1, "", "Pipeline"], [34, 1, 1, "", "PipelineStep"]], "brain_pipe.pipeline.base.Pipeline": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.base.PipelineStep": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.cache": [[36, 0, 0, "-", "base"], [38, 0, 0, "-", "default"], [40, 0, 0, "-", "pipeline"]], "brain_pipe.pipeline.cache.base": [[37, 1, 1, "", "PipelineCache"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "find_existing_cache_from_data_dict"], [37, 2, 1, "", "find_existing_cache_from_previous_filename"], [37, 2, 1, "", "get_cache_dict"], [37, 2, 1, "", "get_existing_cache_paths"], [37, 2, 1, "", "get_filename"], [37, 2, 1, "", "get_foldername"], [37, 2, 1, "", "get_path"], [37, 2, 1, "", "load"], [37, 2, 1, "", "load_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_previous_filename"], [37, 2, 1, "", "predict_paths_from_data_dict"], [37, 2, 1, "", "predict_paths_from_previous_filename"], [37, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.default": [[39, 1, 1, "", "DefaultPipelineCache"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "find_existing_cache_from_data_dict"], [39, 2, 1, "", "find_existing_cache_from_previous_filename"], [39, 2, 1, "", "get_cache_dict"], [39, 2, 1, "", "get_existing_cache_paths"], [39, 2, 1, "", "get_filename"], [39, 2, 1, "", "get_foldername"], [39, 2, 1, "", "get_path"], [39, 2, 1, "", "load"], [39, 2, 1, "", "load_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_previous_filename"], [39, 2, 1, "", "predict_paths_from_data_dict"], [39, 2, 1, "", "predict_paths_from_previous_filename"], [39, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.pipeline": [[41, 1, 1, "", "CachingPreprocessingPipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "iterate_over_steps"], [41, 4, 1, "", "on_error"], [41, 2, 1, "", "parse_dict_keys"], [41, 2, 1, "", "run_step"]], "brain_pipe.pipeline.default": [[43, 1, 1, "", "DefaultPipeline"], [44, 3, 1, "", "default_error_handler_fn"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "iterate_over_steps"], [43, 4, 1, "", "on_error"], [43, 2, 1, "", "parse_dict_keys"], [43, 2, 1, "", "run_step"]], "brain_pipe.pipeline.wrapper": [[46, 1, 1, "", "Wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing": [[48, 0, 0, "-", "brain"], [71, 0, 0, "-", "filter"], [73, 0, 0, "-", "resample"], [75, 0, 0, "-", "stimulus"], [82, 0, 0, "-", "transpose"]], "brain_pipe.preprocessing.brain": [[49, 0, 0, "-", "artifact"], [52, 0, 0, "-", "eeg"], [57, 0, 0, "-", "epochs"], [59, 0, 0, "-", "link"], [64, 0, 0, "-", "load"], [66, 0, 0, "-", "rereference"], [68, 0, 0, "-", "trigger"]], "brain_pipe.preprocessing.brain.artifact": [[50, 1, 1, "", "ArtifactRemovalMWF"], [51, 1, 1, "", "InterpolateArtifacts"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "apply_mwf"], [50, 2, 1, "", "check_symmetric"], [50, 2, 1, "", "compute_mwf"], [50, 2, 1, "", "fix_symmetric"], [50, 2, 1, "", "get_artifact_segments"], [50, 2, 1, "", "parse_dict_keys"], [50, 2, 1, "", "sort_evd"], [50, 2, 1, "", "stack_delayed"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[53, 0, 0, "-", "biosemi"], [55, 0, 0, "-", "load"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[54, 3, 1, "", "biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[56, 1, 1, "", "LoadEEGNumpy"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "get_channels"], [56, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[58, 1, 1, "", "SplitEpochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "data_dict_copy"], [58, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[60, 1, 1, "", "BIDSStimulusInfoExtractor"], [61, 1, 1, "", "BasenameComparisonFn"], [62, 1, 1, "", "LinkStimulusToBrainResponse"], [63, 3, 1, "", "default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "read_events"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "process_path"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.load": [[65, 1, 1, "", "MNELoader"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[67, 1, 1, "", "CommonAverageRereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[69, 1, 1, "", "AlignPeriodicBlockTriggers"], [70, 3, 1, "", "default_drift_correction"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "get_trigger_indices"], [69, 2, 1, "", "parse_dict_keys"], [69, 2, 1, "", "split_epochs"]], "brain_pipe.preprocessing.filter": [[72, 1, 1, "", "SosFiltFilt"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "get_matlab_arguments"], [72, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[74, 1, 1, "", "ResamplePoly"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[76, 0, 0, "-", "audio"], [80, 0, 0, "-", "load"]], "brain_pipe.preprocessing.stimulus.audio": [[77, 0, 0, "-", "envelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[78, 1, 1, "", "EnvelopeFromGammatone"], [79, 1, 1, "", "GammatoneEnvelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, 2, 1, "", "__init__"], [78, 4, 1, "", "duration"], [78, 2, 1, "", "process"], [78, 4, 1, "", "source"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.load": [[81, 1, 1, "", "LoadStimuli"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[83, 1, 1, "", "Transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "parse_dict_keys"]], "brain_pipe.runner": [[85, 0, 0, "-", "base"], [87, 0, 0, "-", "default"]], "brain_pipe.runner.base": [[86, 1, 1, "", "Runner"]], "brain_pipe.runner.base.Runner": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "run"]], "brain_pipe.runner.default": [[88, 1, 1, "", "DefaultRunner"]], "brain_pipe.runner.default.DefaultRunner": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "run"]], "brain_pipe.save": [[90, 0, 0, "-", "base"], [92, 0, 0, "-", "default"]], "brain_pipe.save.base": [[91, 1, 1, "", "Save"]], "brain_pipe.save.base.Save": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "is_already_done"], [91, 2, 1, "", "is_reloadable"], [91, 2, 1, "", "parse_dict_keys"], [91, 2, 1, "", "reload"]], "brain_pipe.save.default": [[93, 1, 1, "", "DefaultSave"], [94, 3, 1, "", "default_filename_fn"], [95, 3, 1, "", "default_metadata_key_fn"]], "brain_pipe.save.default.DefaultSave": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "is_already_done"], [93, 2, 1, "", "is_reloadable"], [93, 4, 1, "", "overwrite"], [93, 2, 1, "", "parse_dict_keys"], [93, 2, 1, "", "reload"]], "brain_pipe.split": [[97, 0, 0, "-", "base"], [99, 0, 0, "-", "mid"], [101, 0, 0, "-", "operations"], [106, 0, 0, "-", "sequential"]], "brain_pipe.split.base": [[98, 1, 1, "", "Splitter"]], "brain_pipe.split.base.Splitter": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "parse_dict_keys"], [98, 2, 1, "", "split"]], "brain_pipe.split.mid": [[100, 1, 1, "", "MidSplit"]], "brain_pipe.split.mid.MidSplit": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "parse_dict_keys"], [100, 2, 1, "", "split"]], "brain_pipe.split.operations": [[102, 0, 0, "-", "base"], [104, 0, 0, "-", "normalize"]], "brain_pipe.split.operations.base": [[103, 1, 1, "", "SplitterOperation"]], "brain_pipe.split.operations.base.SplitterOperation": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "reset"]], "brain_pipe.split.operations.normalize": [[105, 1, 1, "", "Standardize"]], "brain_pipe.split.operations.normalize.Standardize": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "reset"]], "brain_pipe.split.sequential": [[107, 1, 1, "", "SequentialSplit"]], "brain_pipe.split.sequential.SequentialSplit": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "parse_dict_keys"], [107, 2, 1, "", "split"]], "brain_pipe.utils": [[109, 1, 1, "", "ObjectsWithConfig"], [110, 0, 0, "-", "find"], [112, 0, 0, "-", "list"], [114, 0, 0, "-", "log"], [118, 0, 0, "-", "multiprocess"], [121, 0, 0, "-", "path"], [124, 0, 0, "-", "serialization"]], "brain_pipe.utils.ObjectsWithConfig": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "apply_config"]], "brain_pipe.utils.find": [[111, 1, 1, "", "Finder"]], "brain_pipe.utils.find.Finder": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "filter"], [111, 2, 1, "", "filter_fn"], [111, 2, 1, "", "load_from_path"], [111, 2, 1, "", "predicate_fn"]], "brain_pipe.utils.list": [[113, 3, 1, "", "flatten"]], "brain_pipe.utils.log": [[115, 1, 1, "", "ColorFormatter"], [116, 1, 1, "", "DefaultFormatter"], [117, 3, 1, "", "default_logging"]], "brain_pipe.utils.log.ColorFormatter": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "converter"], [115, 2, 1, "", "format"], [115, 2, 1, "", "formatException"], [115, 2, 1, "", "formatStack"], [115, 2, 1, "", "formatTime"], [115, 2, 1, "", "usesTime"]], "brain_pipe.utils.log.DefaultFormatter": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "converter"], [116, 2, 1, "", "format"], [116, 2, 1, "", "formatException"], [116, 2, 1, "", "formatStack"], [116, 2, 1, "", "formatTime"], [116, 2, 1, "", "usesTime"]], "brain_pipe.utils.multiprocess": [[119, 1, 1, "", "MultiprocessingSingleton"], [120, 1, 1, "", "SimpleCallbackFn"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "clean"], [119, 2, 1, "", "get_map_fn"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[120, 2, 1, "", "__init__"]], "brain_pipe.utils.path": [[122, 1, 1, "", "BIDSPathGenerator"], [123, 1, 1, "", "BIDSStimulusGrouper"]], "brain_pipe.utils.path.BIDSPathGenerator": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "select_paths"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[123, 2, 1, "", "__init__"]], "brain_pipe.utils.serialization": [[125, 3, 1, "", "pickle_dump_wrapper"], [126, 3, 1, "", "pickle_load_wrapper"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"brain_pip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "cli": [1, 2, 3, 4, 5, 6, 7], "base": [2, 3, 9, 10, 14, 15, 32, 33, 34, 36, 37, 85, 86, 90, 91, 97, 98, 102, 103], "cli_entrypoint": 4, "cli_factori": 5, "default": [6, 7, 38, 39, 42, 43, 44, 87, 88, 92, 93, 94, 95], "defaultcli": 7, "dataload": [8, 9, 10, 11, 12], "path": [11, 12, 121, 122, 123], "globload": 12, "parser": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 130], "file": [16, 17, 18, 19, 130], "fileloadmixin": 17, "filepars": 18, "templatefilepars": 19, "simple_dict": [20, 21], "simpledictpars": [21, 130], "template_text": [22, 23], "templatetextpars": 23, "text": [24, 25], "textpars": 25, "yaml": [26, 27, 28, 29, 30], "yamlfilepars": 27, "yamlmixin": 28, "yamltemplatefilepars": 29, "yamltextpars": 30, "pipelin": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 130], "pipelinestep": [34, 132], "cach": [35, 36, 37, 38, 39, 40, 41], "pipelinecach": 37, "defaultpipelinecach": 39, "cachingpreprocessingpipelin": 41, "defaultpipelin": 43, "default_error_handler_fn": 44, "wrapper": [45, 46], "preprocess": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 128], "brain": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 131], "artifact": [49, 50, 51], "artifactremovalmwf": 50, "interpolateartifact": 51, "eeg": [52, 53, 54, 55, 56], "biosemi": [53, 54], "biosemi_trigger_processing_fn": 54, "load": [55, 56, 64, 65, 80, 81], "loadeegnumpi": 56, "epoch": [57, 58], "splitepoch": 58, "link": [59, 60, 61, 62, 63], "bidsstimulusinfoextractor": 60, "basenamecomparisonfn": 61, "linkstimulustobrainrespons": 62, "default_multiprocessing_key_fn": 63, "mneload": 65, "rerefer": [66, 67], "commonaveragererefer": 67, "trigger": [68, 69, 70], "alignperiodicblocktrigg": 69, "default_drift_correct": 70, "filter": [71, 72], "sosfiltfilt": 72, "resampl": [73, 74], "resamplepoli": 74, "stimulu": [75, 76, 77, 78, 79, 80, 81], "audio": [76, 77, 78, 79], "envelop": [77, 78, 79], "envelopefromgammaton": 78, "gammatoneenvelop": 79, "loadstimuli": 81, "transpos": [82, 83], "runner": [84, 85, 86, 87, 88], "defaultrunn": 88, "save": [89, 90, 91, 92, 93, 94, 95], "defaultsav": 93, "default_filename_fn": 94, "default_metadata_key_fn": 95, "split": [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "splitter": 98, "mid": [99, 100], "midsplit": 100, "oper": [101, 102, 103, 104, 105], "splitteroper": 103, "normal": [104, 105], "standard": 105, "sequenti": [106, 107], "sequentialsplit": 107, "util": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "objectswithconfig": 109, "find": [110, 111], "finder": 111, "list": [112, 113], "flatten": 113, "log": [114, 115, 116, 117], "colorformatt": 115, "defaultformatt": 116, "default_log": 117, "multiprocess": [118, 119, 120], "multiprocessingsingleton": 119, "simplecallbackfn": 120, "bidspathgener": 122, "bidsstimulusgroup": 123, "serial": [124, 125, 126], "pickle_dump_wrapp": 125, "pickle_load_wrapp": 126, "api": [127, 129, 131], "refer": [127, 131], "full": 128, "tree": 128, "bid": 128, "command": 129, "line": 129, "interfac": 129, "defin": 130, "run": [130, 131], "through": 130, "configur": 130, "from": 130, "background": 130, "typic": 130, "structur": [130, 131], "specifi": 130, "welcom": 131, "pipe": 131, "": 131, "document": 131, "motiv": 131, "intern": 131, "instal": 131, "requir": 131, "contribut": 131, "go": 131, "overview": 132, "concept": 132, "The": 132, "data_dict": 132, "conveni": 132, "class": 132, "addit": 132, "consider": 132, "write": 132, "your": 132, "own": 132, "small": 132, "exampl": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"brain_pipe": [[0, "module-brain_pipe"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "brain_pipe.cli.base.CLI": [[3, "brain-pipe-cli-base-cli"]], "brain_pipe.cli.cli_entrypoint": [[4, "brain-pipe-cli-cli-entrypoint"]], "brain_pipe.cli.cli_factory": [[5, "brain-pipe-cli-cli-factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "brain_pipe.cli.default.DefaultCLI": [[7, "brain-pipe-cli-default-defaultcli"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "brain_pipe.dataloaders.base.DataLoader": [[10, "brain-pipe-dataloaders-base-dataloader"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, "brain-pipe-dataloaders-path-globloader"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "brain_pipe.parser.base.Parser": [[15, "brain-pipe-parser-base-parser"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "brain_pipe.parser.file.FileLoadMixin": [[17, "brain-pipe-parser-file-fileloadmixin"]], "brain_pipe.parser.file.FileParser": [[18, "brain-pipe-parser-file-fileparser"]], "brain_pipe.parser.file.TemplateFileParser": [[19, "brain-pipe-parser-file-templatefileparser"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, "brain-pipe-parser-simple-dict-simpledictparser"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, "brain-pipe-parser-template-text-templatetextparser"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "brain_pipe.parser.text.TextParser": [[25, "brain-pipe-parser-text-textparser"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, "brain-pipe-parser-yaml-yamlfileparser"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, "brain-pipe-parser-yaml-yamlmixin"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, "brain-pipe-parser-yaml-yamltemplatefileparser"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, "brain-pipe-parser-yaml-yamltextparser"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "brain_pipe.pipeline.base.Pipeline": [[33, "brain-pipe-pipeline-base-pipeline"]], "brain_pipe.pipeline.base.PipelineStep": [[34, "brain-pipe-pipeline-base-pipelinestep"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, "brain-pipe-pipeline-cache-base-pipelinecache"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, "brain-pipe-pipeline-cache-default-defaultpipelinecache"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, "brain-pipe-pipeline-cache-pipeline-cachingpreprocessingpipeline"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, "brain-pipe-pipeline-default-defaultpipeline"]], "brain_pipe.pipeline.default.default_error_handler_fn": [[44, "brain-pipe-pipeline-default-default-error-handler-fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, "brain-pipe-pipeline-wrapper-wrapper"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, "brain-pipe-preprocessing-brain-artifact-artifactremovalmwf"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, "brain-pipe-preprocessing-brain-artifact-interpolateartifacts"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn": [[54, "brain-pipe-preprocessing-brain-eeg-biosemi-biosemi-trigger-processing-fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, "brain-pipe-preprocessing-brain-eeg-load-loadeegnumpy"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, "brain-pipe-preprocessing-brain-epochs-splitepochs"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, "brain-pipe-preprocessing-brain-link-bidsstimulusinfoextractor"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, "brain-pipe-preprocessing-brain-link-basenamecomparisonfn"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, "brain-pipe-preprocessing-brain-link-linkstimulustobrainresponse"]], "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn": [[63, "brain-pipe-preprocessing-brain-link-default-multiprocessing-key-fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, "brain-pipe-preprocessing-brain-load-mneloader"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, "brain-pipe-preprocessing-brain-rereference-commonaveragerereference"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, "brain-pipe-preprocessing-brain-trigger-alignperiodicblocktriggers"]], "brain_pipe.preprocessing.brain.trigger.default_drift_correction": [[70, "brain-pipe-preprocessing-brain-trigger-default-drift-correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, "brain-pipe-preprocessing-filter-sosfiltfilt"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, "brain-pipe-preprocessing-resample-resamplepoly"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, "brain-pipe-preprocessing-stimulus-audio-envelope-envelopefromgammatone"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, "brain-pipe-preprocessing-stimulus-audio-envelope-gammatoneenvelope"]], "brain_pipe.preprocessing.stimulus.load": [[80, "module-brain_pipe.preprocessing.stimulus.load"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[81, "brain-pipe-preprocessing-stimulus-load-loadstimuli"]], "brain_pipe.preprocessing.transpose": [[82, "module-brain_pipe.preprocessing.transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[83, "brain-pipe-preprocessing-transpose-transpose"]], "brain_pipe.runner": [[84, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[85, "module-brain_pipe.runner.base"]], "brain_pipe.runner.base.Runner": [[86, "brain-pipe-runner-base-runner"]], "brain_pipe.runner.default": [[87, "module-brain_pipe.runner.default"]], "brain_pipe.runner.default.DefaultRunner": [[88, "brain-pipe-runner-default-defaultrunner"]], "brain_pipe.save": [[89, "module-brain_pipe.save"]], "brain_pipe.save.base": [[90, "module-brain_pipe.save.base"]], "brain_pipe.save.base.Save": [[91, "brain-pipe-save-base-save"]], "brain_pipe.save.default": [[92, "module-brain_pipe.save.default"]], "brain_pipe.save.default.DefaultSave": [[93, "brain-pipe-save-default-defaultsave"]], "brain_pipe.save.default.default_filename_fn": [[94, "brain-pipe-save-default-default-filename-fn"]], "brain_pipe.save.default.default_metadata_key_fn": [[95, "brain-pipe-save-default-default-metadata-key-fn"]], "brain_pipe.split": [[96, "module-brain_pipe.split"]], "brain_pipe.split.base": [[97, "module-brain_pipe.split.base"]], "brain_pipe.split.base.Splitter": [[98, "brain-pipe-split-base-splitter"]], "brain_pipe.split.mid": [[99, "module-brain_pipe.split.mid"]], "brain_pipe.split.mid.MidSplit": [[100, "brain-pipe-split-mid-midsplit"]], "brain_pipe.split.operations": [[101, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[102, "module-brain_pipe.split.operations.base"]], "brain_pipe.split.operations.base.SplitterOperation": [[103, "brain-pipe-split-operations-base-splitteroperation"]], "brain_pipe.split.operations.normalize": [[104, "module-brain_pipe.split.operations.normalize"]], "brain_pipe.split.operations.normalize.Standardize": [[105, "brain-pipe-split-operations-normalize-standardize"]], "brain_pipe.split.sequential": [[106, "module-brain_pipe.split.sequential"]], "brain_pipe.split.sequential.SequentialSplit": [[107, "brain-pipe-split-sequential-sequentialsplit"]], "brain_pipe.utils": [[108, "module-brain_pipe.utils"]], "brain_pipe.utils.ObjectsWithConfig": [[109, "brain-pipe-utils-objectswithconfig"]], "brain_pipe.utils.find": [[110, "module-brain_pipe.utils.find"]], "brain_pipe.utils.find.Finder": [[111, "brain-pipe-utils-find-finder"]], "brain_pipe.utils.list": [[112, "module-brain_pipe.utils.list"]], "brain_pipe.utils.list.flatten": [[113, "brain-pipe-utils-list-flatten"]], "brain_pipe.utils.log": [[114, "module-brain_pipe.utils.log"]], "brain_pipe.utils.log.ColorFormatter": [[115, "brain-pipe-utils-log-colorformatter"]], "brain_pipe.utils.log.DefaultFormatter": [[116, "brain-pipe-utils-log-defaultformatter"]], "brain_pipe.utils.log.default_logging": [[117, "brain-pipe-utils-log-default-logging"]], "brain_pipe.utils.multiprocess": [[118, "module-brain_pipe.utils.multiprocess"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[119, "brain-pipe-utils-multiprocess-multiprocessingsingleton"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[120, "brain-pipe-utils-multiprocess-simplecallbackfn"]], "brain_pipe.utils.path": [[121, "module-brain_pipe.utils.path"]], "brain_pipe.utils.path.BIDSPathGenerator": [[122, "brain-pipe-utils-path-bidspathgenerator"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[123, "brain-pipe-utils-path-bidsstimulusgrouper"]], "brain_pipe.utils.serialization": [[124, "module-brain_pipe.utils.serialization"]], "brain_pipe.utils.serialization.pickle_dump_wrapper": [[125, "brain-pipe-utils-serialization-pickle-dump-wrapper"]], "brain_pipe.utils.serialization.pickle_load_wrapper": [[126, "brain-pipe-utils-serialization-pickle-load-wrapper"]], "API Reference": [[127, "api-reference"]], "Full Tree": [[128, "full-tree"]], "BIDS preprocessing": [[128, null]], "Command Line Interface": [[129, "command-line-interface"]], "API": [[129, "api"]], "Defining and running Pipelines through configuration files": [[130, "defining-and-running-pipelines-through-configuration-files"]], "Running pipelines from configuration files": [[130, "running-pipelines-from-configuration-files"]], "Background": [[130, "background"]], "Typical structure for SimpleDictParsers": [[130, "typical-structure-for-simpledictparsers"]], "Specifying the parser": [[130, "specifying-the-parser"]], "Welcome to Brain Pipe\u2019s documentation!": [[131, "welcome-to-brain-pipe-s-documentation"]], "Motivation": [[131, "motivation"]], "Internal structure": [[131, "internal-structure"]], "Installation": [[131, "installation"]], "Running": [[131, "running"]], "Requirements": [[131, "requirements"]], "Contributing": [[131, "contributing"]], "API reference": [[131, "api-reference"]], "Go to": [[131, "go-to"]], "Overview": [[132, "overview"]], "Concept": [[132, "concept"]], "The data_dict": [[132, "the-data-dict"]], "Convenient classes": [[132, "convenient-classes"]], "Additional considerations": [[132, "additional-considerations"]], "Writing your own PipelineStep": [[132, "writing-your-own-pipelinestep"]], "Small Example": [[132, "small-example"]]}, "indexentries": {"brain_pipe": [[0, "module-brain_pipe"]], "module": [[0, "module-brain_pipe"], [1, "module-brain_pipe.cli"], [2, "module-brain_pipe.cli.base"], [6, "module-brain_pipe.cli.default"], [8, "module-brain_pipe.dataloaders"], [9, "module-brain_pipe.dataloaders.base"], [11, "module-brain_pipe.dataloaders.path"], [13, "module-brain_pipe.parser"], [14, "module-brain_pipe.parser.base"], [16, "module-brain_pipe.parser.file"], [20, "module-brain_pipe.parser.simple_dict"], [22, "module-brain_pipe.parser.template_text"], [24, "module-brain_pipe.parser.text"], [26, "module-brain_pipe.parser.yaml"], [31, "module-brain_pipe.pipeline"], [32, "module-brain_pipe.pipeline.base"], [35, "module-brain_pipe.pipeline.cache"], [36, "module-brain_pipe.pipeline.cache.base"], [38, "module-brain_pipe.pipeline.cache.default"], [40, "module-brain_pipe.pipeline.cache.pipeline"], [42, "module-brain_pipe.pipeline.default"], [45, "module-brain_pipe.pipeline.wrapper"], [47, "module-brain_pipe.preprocessing"], [48, "module-brain_pipe.preprocessing.brain"], [49, "module-brain_pipe.preprocessing.brain.artifact"], [52, "module-brain_pipe.preprocessing.brain.eeg"], [53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"], [55, "module-brain_pipe.preprocessing.brain.eeg.load"], [57, "module-brain_pipe.preprocessing.brain.epochs"], [59, "module-brain_pipe.preprocessing.brain.link"], [64, "module-brain_pipe.preprocessing.brain.load"], [66, "module-brain_pipe.preprocessing.brain.rereference"], [68, "module-brain_pipe.preprocessing.brain.trigger"], [71, "module-brain_pipe.preprocessing.filter"], [73, "module-brain_pipe.preprocessing.resample"], [75, "module-brain_pipe.preprocessing.stimulus"], [76, "module-brain_pipe.preprocessing.stimulus.audio"], [77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"], [80, "module-brain_pipe.preprocessing.stimulus.load"], [82, "module-brain_pipe.preprocessing.transpose"], [84, "module-brain_pipe.runner"], [85, "module-brain_pipe.runner.base"], [87, "module-brain_pipe.runner.default"], [89, "module-brain_pipe.save"], [90, "module-brain_pipe.save.base"], [92, "module-brain_pipe.save.default"], [96, "module-brain_pipe.split"], [97, "module-brain_pipe.split.base"], [99, "module-brain_pipe.split.mid"], [101, "module-brain_pipe.split.operations"], [102, "module-brain_pipe.split.operations.base"], [104, "module-brain_pipe.split.operations.normalize"], [106, "module-brain_pipe.split.sequential"], [108, "module-brain_pipe.utils"], [110, "module-brain_pipe.utils.find"], [112, "module-brain_pipe.utils.list"], [114, "module-brain_pipe.utils.log"], [118, "module-brain_pipe.utils.multiprocess"], [121, "module-brain_pipe.utils.path"], [124, "module-brain_pipe.utils.serialization"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "cli (class in brain_pipe.cli.base)": [[3, "brain_pipe.cli.base.CLI"]], "__init__() (cli method)": [[3, "brain_pipe.cli.base.CLI.__init__"]], "get_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_parser"]], "get_run_options() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_run_options"]], "parse_cli_arguments() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments_for_parser"]], "run() (cli method)": [[3, "brain_pipe.cli.base.CLI.run"]], "cli_entrypoint() (in module brain_pipe.cli)": [[4, "brain_pipe.cli.cli_entrypoint"]], "cli_factory() (in module brain_pipe.cli)": [[5, "brain_pipe.cli.cli_factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "defaultcli (class in brain_pipe.cli.default)": [[7, "brain_pipe.cli.default.DefaultCLI"]], "__init__() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.__init__"]], "add_arguments_to_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.add_arguments_to_argparser"]], "get_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_argparser"]], "get_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_parser"]], "get_run_options() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_run_options"]], "parse_cli_arguments() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments_for_parser"]], "run() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.run"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "dataloader (class in brain_pipe.dataloaders.base)": [[10, "brain_pipe.dataloaders.base.DataLoader"]], "__init__() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.__init__"]], "compute_length() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.compute_length"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "globloader (class in brain_pipe.dataloaders.path)": [[12, "brain_pipe.dataloaders.path.GlobLoader"]], "__init__() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.__init__"]], "compute_length() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.compute_length"]], "path_to_data_dict() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.path_to_data_dict"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "parser (class in brain_pipe.parser.base)": [[15, "brain_pipe.parser.base.Parser"]], "__init__() (parser method)": [[15, "brain_pipe.parser.base.Parser.__init__"]], "get_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.get_additional_kwargs"]], "link_loader_to_pipeline() (parser method)": [[15, "brain_pipe.parser.base.Parser.link_loader_to_pipeline"]], "set_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.set_additional_kwargs"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "fileloadmixin (class in brain_pipe.parser.file)": [[17, "brain_pipe.parser.file.FileLoadMixin"]], "__init__() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.__init__"]], "get_additional_kwargs() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.get_additional_kwargs"]], "load_file() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.load_file"]], "fileparser (class in brain_pipe.parser.file)": [[18, "brain_pipe.parser.file.FileParser"]], "__init__() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.__init__"]], "apply_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.apply_config"]], "get_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.link_loader_to_pipeline"]], "load_file() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.load_file"]], "parse_all() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_all"]], "parse_text_to_dict() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_text_to_dict"]], "recursive_parse() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.recursive_parse"]], "set_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.set_additional_kwargs"]], "templatefileparser (class in brain_pipe.parser.file)": [[19, "brain_pipe.parser.file.TemplateFileParser"]], "__init__() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.__init__"]], "apply_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.apply_config"]], "get_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.link_loader_to_pipeline"]], "load_file() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.load_file"]], "parse_all() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_all"]], "parse_text_to_dict() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_text_to_dict"]], "recursive_parse() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.recursive_parse"]], "set_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "simpledictparser (class in brain_pipe.parser.simple_dict)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser"]], "__init__() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.__init__"]], "apply_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.apply_config"]], "get_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.link_loader_to_pipeline"]], "parse_all() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.parse_all"]], "recursive_parse() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.recursive_parse"]], "set_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.set_additional_kwargs"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "templatetextparser (class in brain_pipe.parser.template_text)": [[23, "brain_pipe.parser.template_text.TemplateTextParser"]], "__init__() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.__init__"]], "apply_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.apply_config"]], "get_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.link_loader_to_pipeline"]], "parse_all() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_all"]], "parse_text_to_dict() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_text_to_dict"]], "recursive_parse() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.recursive_parse"]], "set_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.set_additional_kwargs"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "textparser (class in brain_pipe.parser.text)": [[25, "brain_pipe.parser.text.TextParser"]], "__init__() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.__init__"]], "apply_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.apply_config"]], "get_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.link_loader_to_pipeline"]], "parse_all() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_all"]], "parse_text_to_dict() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_text_to_dict"]], "recursive_parse() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.recursive_parse"]], "set_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.set_additional_kwargs"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "yamlfileparser (class in brain_pipe.parser.yaml)": [[27, "brain_pipe.parser.yaml.YAMLFileParser"]], "__init__() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.__init__"]], "apply_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.apply_config"]], "get_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.link_loader_to_pipeline"]], "load_file() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.load_file"]], "parse_all() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_all"]], "parse_text_to_dict() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_text_to_dict"]], "recursive_parse() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.recursive_parse"]], "set_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.set_additional_kwargs"]], "yamlmixin (class in brain_pipe.parser.yaml)": [[28, "brain_pipe.parser.yaml.YAMLMixin"]], "__init__() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.__init__"]], "parse_text_to_dict() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.parse_text_to_dict"]], "yamltemplatefileparser (class in brain_pipe.parser.yaml)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser"]], "__init__() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.__init__"]], "apply_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.apply_config"]], "get_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.link_loader_to_pipeline"]], "load_file() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.load_file"]], "parse_all() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_all"]], "parse_text_to_dict() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_text_to_dict"]], "recursive_parse() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.recursive_parse"]], "set_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.set_additional_kwargs"]], "yamltextparser (class in brain_pipe.parser.yaml)": [[30, "brain_pipe.parser.yaml.YAMLTextParser"]], "__init__() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.__init__"]], "apply_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.apply_config"]], "get_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.link_loader_to_pipeline"]], "parse_all() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_all"]], "parse_text_to_dict() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_text_to_dict"]], "recursive_parse() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.recursive_parse"]], "set_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.set_additional_kwargs"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "pipeline (class in brain_pipe.pipeline.base)": [[33, "brain_pipe.pipeline.base.Pipeline"]], "__init__() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.__init__"]], "parse_dict_keys() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.parse_dict_keys"]], "pipelinestep (class in brain_pipe.pipeline.base)": [[34, "brain_pipe.pipeline.base.PipelineStep"]], "__init__() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.__init__"]], "parse_dict_keys() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.parse_dict_keys"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "pipelinecache (class in brain_pipe.pipeline.cache.base)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache"]], "__init__() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.__init__"]], "find_existing_cache_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_cache_dict"]], "get_existing_cache_paths() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_existing_cache_paths"]], "get_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_filename"]], "get_foldername() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_foldername"]], "get_path() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_path"]], "load() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load"]], "load_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_previous_filename"]], "save() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.save"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "defaultpipelinecache (class in brain_pipe.pipeline.cache.default)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache"]], "__init__() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.__init__"]], "find_existing_cache_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_cache_dict"]], "get_existing_cache_paths() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_existing_cache_paths"]], "get_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_filename"]], "get_foldername() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_foldername"]], "get_path() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_path"]], "load() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load"]], "load_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_previous_filename"]], "save() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.save"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "cachingpreprocessingpipeline (class in brain_pipe.pipeline.cache.pipeline)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline"]], "__init__() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.__init__"]], "iterate_over_steps() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.iterate_over_steps"]], "on_error (cachingpreprocessingpipeline property)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.on_error"]], "parse_dict_keys() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.parse_dict_keys"]], "run_step() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.run_step"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "defaultpipeline (class in brain_pipe.pipeline.default)": [[43, "brain_pipe.pipeline.default.DefaultPipeline"]], "__init__() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.__init__"]], "iterate_over_steps() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.iterate_over_steps"]], "on_error (defaultpipeline property)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.on_error"]], "parse_dict_keys() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.parse_dict_keys"]], "run_step() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.run_step"]], "default_error_handler_fn() (in module brain_pipe.pipeline.default)": [[44, "brain_pipe.pipeline.default.default_error_handler_fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "wrapper (class in brain_pipe.pipeline.wrapper)": [[46, "brain_pipe.pipeline.wrapper.Wrapper"]], "__init__() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.__init__"]], "parse_dict_keys() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.parse_dict_keys"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "artifactremovalmwf (class in brain_pipe.preprocessing.brain.artifact)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF"]], "__init__() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.__init__"]], "apply_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.apply_mwf"]], "check_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.check_symmetric"]], "compute_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.compute_mwf"]], "fix_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.fix_symmetric"]], "get_artifact_segments() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.get_artifact_segments"]], "parse_dict_keys() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.parse_dict_keys"]], "sort_evd() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.sort_evd"]], "stack_delayed() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.stack_delayed"]], "interpolateartifacts (class in brain_pipe.preprocessing.brain.artifact)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts"]], "__init__() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.__init__"]], "parse_dict_keys() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "biosemi_trigger_processing_fn() (in module brain_pipe.preprocessing.brain.eeg.biosemi)": [[54, "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "loadeegnumpy (class in brain_pipe.preprocessing.brain.eeg.load)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy"]], "__init__() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.__init__"]], "get_channels() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.get_channels"]], "parse_dict_keys() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "splitepochs (class in brain_pipe.preprocessing.brain.epochs)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs"]], "__init__() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.__init__"]], "data_dict_copy() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.data_dict_copy"]], "parse_dict_keys() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "bidsstimulusinfoextractor (class in brain_pipe.preprocessing.brain.link)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor"]], "__init__() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.__init__"]], "read_events() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.read_events"]], "basenamecomparisonfn (class in brain_pipe.preprocessing.brain.link)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn"]], "__init__() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.__init__"]], "process_path() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.process_path"]], "linkstimulustobrainresponse (class in brain_pipe.preprocessing.brain.link)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse"]], "__init__() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.__init__"]], "parse_dict_keys() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.parse_dict_keys"]], "default_multiprocessing_key_fn() (in module brain_pipe.preprocessing.brain.link)": [[63, "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "mneloader (class in brain_pipe.preprocessing.brain.load)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader"]], "__init__() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.__init__"]], "parse_dict_keys() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "commonaveragerereference (class in brain_pipe.preprocessing.brain.rereference)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference"]], "__init__() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.__init__"]], "parse_dict_keys() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "alignperiodicblocktriggers (class in brain_pipe.preprocessing.brain.trigger)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers"]], "__init__() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.__init__"]], "get_trigger_indices() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.get_trigger_indices"]], "parse_dict_keys() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.parse_dict_keys"]], "split_epochs() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.split_epochs"]], "default_drift_correction() (in module brain_pipe.preprocessing.brain.trigger)": [[70, "brain_pipe.preprocessing.brain.trigger.default_drift_correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "sosfiltfilt (class in brain_pipe.preprocessing.filter)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt"]], "__init__() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.__init__"]], "get_matlab_arguments() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.get_matlab_arguments"]], "parse_dict_keys() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "resamplepoly (class in brain_pipe.preprocessing.resample)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly"]], "__init__() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.__init__"]], "parse_dict_keys() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "envelopefromgammatone (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone"]], "__init__() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.__init__"]], "duration (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.duration"]], "process() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.process"]], "source (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.source"]], "gammatoneenvelope (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope"]], "__init__() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.__init__"]], "parse_dict_keys() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.load": [[80, "module-brain_pipe.preprocessing.stimulus.load"]], "loadstimuli (class in brain_pipe.preprocessing.stimulus.load)": [[81, "brain_pipe.preprocessing.stimulus.load.LoadStimuli"]], "__init__() (loadstimuli method)": [[81, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.__init__"]], "parse_dict_keys() (loadstimuli method)": [[81, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[82, "module-brain_pipe.preprocessing.transpose"]], "transpose (class in brain_pipe.preprocessing.transpose)": [[83, "brain_pipe.preprocessing.transpose.Transpose"]], "__init__() (transpose method)": [[83, "brain_pipe.preprocessing.transpose.Transpose.__init__"]], "parse_dict_keys() (transpose method)": [[83, "brain_pipe.preprocessing.transpose.Transpose.parse_dict_keys"]], "brain_pipe.runner": [[84, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[85, "module-brain_pipe.runner.base"]], "runner (class in brain_pipe.runner.base)": [[86, "brain_pipe.runner.base.Runner"]], "__init__() (runner method)": [[86, "brain_pipe.runner.base.Runner.__init__"]], "run() (runner method)": [[86, "brain_pipe.runner.base.Runner.run"]], "brain_pipe.runner.default": [[87, "module-brain_pipe.runner.default"]], "defaultrunner (class in brain_pipe.runner.default)": [[88, "brain_pipe.runner.default.DefaultRunner"]], "__init__() (defaultrunner method)": [[88, "brain_pipe.runner.default.DefaultRunner.__init__"]], "run() (defaultrunner method)": [[88, "brain_pipe.runner.default.DefaultRunner.run"]], "brain_pipe.save": [[89, "module-brain_pipe.save"]], "brain_pipe.save.base": [[90, "module-brain_pipe.save.base"]], "save (class in brain_pipe.save.base)": [[91, "brain_pipe.save.base.Save"]], "__init__() (save method)": [[91, "brain_pipe.save.base.Save.__init__"]], "is_already_done() (save method)": [[91, "brain_pipe.save.base.Save.is_already_done"]], "is_reloadable() (save method)": [[91, "brain_pipe.save.base.Save.is_reloadable"]], "parse_dict_keys() (save method)": [[91, "brain_pipe.save.base.Save.parse_dict_keys"]], "reload() (save method)": [[91, "brain_pipe.save.base.Save.reload"]], "brain_pipe.save.default": [[92, "module-brain_pipe.save.default"]], "defaultsave (class in brain_pipe.save.default)": [[93, "brain_pipe.save.default.DefaultSave"]], "__init__() (defaultsave method)": [[93, "brain_pipe.save.default.DefaultSave.__init__"]], "is_already_done() (defaultsave method)": [[93, "brain_pipe.save.default.DefaultSave.is_already_done"]], "is_reloadable() (defaultsave method)": [[93, "brain_pipe.save.default.DefaultSave.is_reloadable"]], "overwrite (defaultsave property)": [[93, "brain_pipe.save.default.DefaultSave.overwrite"]], "parse_dict_keys() (defaultsave method)": [[93, "brain_pipe.save.default.DefaultSave.parse_dict_keys"]], "reload() (defaultsave method)": [[93, "brain_pipe.save.default.DefaultSave.reload"]], "default_filename_fn() (in module brain_pipe.save.default)": [[94, "brain_pipe.save.default.default_filename_fn"]], "default_metadata_key_fn() (in module brain_pipe.save.default)": [[95, "brain_pipe.save.default.default_metadata_key_fn"]], "brain_pipe.split": [[96, "module-brain_pipe.split"]], "brain_pipe.split.base": [[97, "module-brain_pipe.split.base"]], "splitter (class in brain_pipe.split.base)": [[98, "brain_pipe.split.base.Splitter"]], "__init__() (splitter method)": [[98, "brain_pipe.split.base.Splitter.__init__"]], "parse_dict_keys() (splitter method)": [[98, "brain_pipe.split.base.Splitter.parse_dict_keys"]], "split() (splitter method)": [[98, "brain_pipe.split.base.Splitter.split"]], "brain_pipe.split.mid": [[99, "module-brain_pipe.split.mid"]], "midsplit (class in brain_pipe.split.mid)": [[100, "brain_pipe.split.mid.MidSplit"]], "__init__() (midsplit method)": [[100, "brain_pipe.split.mid.MidSplit.__init__"]], "parse_dict_keys() (midsplit method)": [[100, "brain_pipe.split.mid.MidSplit.parse_dict_keys"]], "split() (midsplit method)": [[100, "brain_pipe.split.mid.MidSplit.split"]], "brain_pipe.split.operations": [[101, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[102, "module-brain_pipe.split.operations.base"]], "splitteroperation (class in brain_pipe.split.operations.base)": [[103, "brain_pipe.split.operations.base.SplitterOperation"]], "__init__() (splitteroperation method)": [[103, "brain_pipe.split.operations.base.SplitterOperation.__init__"]], "reset() (splitteroperation method)": [[103, "brain_pipe.split.operations.base.SplitterOperation.reset"]], "brain_pipe.split.operations.normalize": [[104, "module-brain_pipe.split.operations.normalize"]], "standardize (class in brain_pipe.split.operations.normalize)": [[105, "brain_pipe.split.operations.normalize.Standardize"]], "__init__() (standardize method)": [[105, "brain_pipe.split.operations.normalize.Standardize.__init__"]], "reset() (standardize method)": [[105, "brain_pipe.split.operations.normalize.Standardize.reset"]], "brain_pipe.split.sequential": [[106, "module-brain_pipe.split.sequential"]], "sequentialsplit (class in brain_pipe.split.sequential)": [[107, "brain_pipe.split.sequential.SequentialSplit"]], "__init__() (sequentialsplit method)": [[107, "brain_pipe.split.sequential.SequentialSplit.__init__"]], "parse_dict_keys() (sequentialsplit method)": [[107, "brain_pipe.split.sequential.SequentialSplit.parse_dict_keys"]], "split() (sequentialsplit method)": [[107, "brain_pipe.split.sequential.SequentialSplit.split"]], "brain_pipe.utils": [[108, "module-brain_pipe.utils"]], "objectswithconfig (class in brain_pipe.utils)": [[109, "brain_pipe.utils.ObjectsWithConfig"]], "__init__() (objectswithconfig method)": [[109, "brain_pipe.utils.ObjectsWithConfig.__init__"]], "apply_config() (objectswithconfig method)": [[109, "brain_pipe.utils.ObjectsWithConfig.apply_config"]], "brain_pipe.utils.find": [[110, "module-brain_pipe.utils.find"]], "finder (class in brain_pipe.utils.find)": [[111, "brain_pipe.utils.find.Finder"]], "__init__() (finder method)": [[111, "brain_pipe.utils.find.Finder.__init__"]], "filter() (finder method)": [[111, "brain_pipe.utils.find.Finder.filter"]], "filter_fn() (finder method)": [[111, "brain_pipe.utils.find.Finder.filter_fn"]], "load_from_path() (finder method)": [[111, "brain_pipe.utils.find.Finder.load_from_path"]], "predicate_fn() (finder method)": [[111, "brain_pipe.utils.find.Finder.predicate_fn"]], "brain_pipe.utils.list": [[112, "module-brain_pipe.utils.list"]], "flatten() (in module brain_pipe.utils.list)": [[113, "brain_pipe.utils.list.flatten"]], "brain_pipe.utils.log": [[114, "module-brain_pipe.utils.log"]], "colorformatter (class in brain_pipe.utils.log)": [[115, "brain_pipe.utils.log.ColorFormatter"]], "__init__() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.__init__"]], "converter() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.converter"]], "format() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.format"]], "formatexception() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.formatException"]], "formatstack() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.formatStack"]], "formattime() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.formatTime"]], "usestime() (colorformatter method)": [[115, "brain_pipe.utils.log.ColorFormatter.usesTime"]], "defaultformatter (class in brain_pipe.utils.log)": [[116, "brain_pipe.utils.log.DefaultFormatter"]], "__init__() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.__init__"]], "converter() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.converter"]], "format() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.format"]], "formatexception() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.formatException"]], "formatstack() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.formatStack"]], "formattime() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.formatTime"]], "usestime() (defaultformatter method)": [[116, "brain_pipe.utils.log.DefaultFormatter.usesTime"]], "default_logging() (in module brain_pipe.utils.log)": [[117, "brain_pipe.utils.log.default_logging"]], "brain_pipe.utils.multiprocess": [[118, "module-brain_pipe.utils.multiprocess"]], "multiprocessingsingleton (class in brain_pipe.utils.multiprocess)": [[119, "brain_pipe.utils.multiprocess.MultiprocessingSingleton"]], "__init__() (multiprocessingsingleton method)": [[119, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.__init__"]], "clean() (multiprocessingsingleton class method)": [[119, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.clean"]], "get_map_fn() (multiprocessingsingleton class method)": [[119, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.get_map_fn"]], "simplecallbackfn (class in brain_pipe.utils.multiprocess)": [[120, "brain_pipe.utils.multiprocess.SimpleCallbackFn"]], "__init__() (simplecallbackfn method)": [[120, "brain_pipe.utils.multiprocess.SimpleCallbackFn.__init__"]], "brain_pipe.utils.path": [[121, "module-brain_pipe.utils.path"]], "bidspathgenerator (class in brain_pipe.utils.path)": [[122, "brain_pipe.utils.path.BIDSPathGenerator"]], "__init__() (bidspathgenerator method)": [[122, "brain_pipe.utils.path.BIDSPathGenerator.__init__"]], "select_paths() (bidspathgenerator method)": [[122, "brain_pipe.utils.path.BIDSPathGenerator.select_paths"]], "bidsstimulusgrouper (class in brain_pipe.utils.path)": [[123, "brain_pipe.utils.path.BIDSStimulusGrouper"]], "__init__() (bidsstimulusgrouper method)": [[123, "brain_pipe.utils.path.BIDSStimulusGrouper.__init__"]], "brain_pipe.utils.serialization": [[124, "module-brain_pipe.utils.serialization"]], "pickle_dump_wrapper() (in module brain_pipe.utils.serialization)": [[125, "brain_pipe.utils.serialization.pickle_dump_wrapper"]], "pickle_load_wrapper() (in module brain_pipe.utils.serialization)": [[126, "brain_pipe.utils.serialization.pickle_load_wrapper"]]}})