Search.setIndex({"docnames": ["api/_autosummary/brain_pipe", "api/_autosummary/brain_pipe.cli", "api/_autosummary/brain_pipe.cli.base", "api/_autosummary/brain_pipe.cli.base.CLI", "api/_autosummary/brain_pipe.cli.cli_entrypoint", "api/_autosummary/brain_pipe.cli.cli_factory", "api/_autosummary/brain_pipe.cli.default", "api/_autosummary/brain_pipe.cli.default.DefaultCLI", "api/_autosummary/brain_pipe.dataloaders", "api/_autosummary/brain_pipe.dataloaders.base", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader", "api/_autosummary/brain_pipe.dataloaders.path", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader", "api/_autosummary/brain_pipe.parser", "api/_autosummary/brain_pipe.parser.base", "api/_autosummary/brain_pipe.parser.base.Parser", "api/_autosummary/brain_pipe.parser.file", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin", "api/_autosummary/brain_pipe.parser.file.FileParser", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser", "api/_autosummary/brain_pipe.parser.simple_dict", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser", "api/_autosummary/brain_pipe.parser.template_text", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser", "api/_autosummary/brain_pipe.parser.text", "api/_autosummary/brain_pipe.parser.text.TextParser", "api/_autosummary/brain_pipe.parser.yaml", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser", "api/_autosummary/brain_pipe.pipeline", "api/_autosummary/brain_pipe.pipeline.base", "api/_autosummary/brain_pipe.pipeline.base.Pipeline", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep", "api/_autosummary/brain_pipe.pipeline.cache", "api/_autosummary/brain_pipe.pipeline.cache.base", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.default", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.pipeline", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "api/_autosummary/brain_pipe.pipeline.default", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn", "api/_autosummary/brain_pipe.pipeline.wrapper", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper", "api/_autosummary/brain_pipe.preprocessing", "api/_autosummary/brain_pipe.preprocessing.brain", "api/_autosummary/brain_pipe.preprocessing.brain.artifact", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "api/_autosummary/brain_pipe.preprocessing.brain.eeg", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "api/_autosummary/brain_pipe.preprocessing.brain.epochs", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs", "api/_autosummary/brain_pipe.preprocessing.brain.link", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "api/_autosummary/brain_pipe.preprocessing.brain.load", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader", "api/_autosummary/brain_pipe.preprocessing.brain.rereference", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "api/_autosummary/brain_pipe.preprocessing.brain.trigger", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction", "api/_autosummary/brain_pipe.preprocessing.filter", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt", "api/_autosummary/brain_pipe.preprocessing.resample", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly", "api/_autosummary/brain_pipe.preprocessing.stimulus", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram", "api/_autosummary/brain_pipe.preprocessing.stimulus.load", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli", "api/_autosummary/brain_pipe.preprocessing.transpose", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose", "api/_autosummary/brain_pipe.runner", "api/_autosummary/brain_pipe.runner.base", "api/_autosummary/brain_pipe.runner.base.Runner", "api/_autosummary/brain_pipe.runner.default", "api/_autosummary/brain_pipe.runner.default.DefaultRunner", "api/_autosummary/brain_pipe.save", "api/_autosummary/brain_pipe.save.base", "api/_autosummary/brain_pipe.save.base.Save", "api/_autosummary/brain_pipe.save.default", "api/_autosummary/brain_pipe.save.default.CheckFunctor", "api/_autosummary/brain_pipe.save.default.DefaultSave", "api/_autosummary/brain_pipe.save.default.IsDoneCheck", "api/_autosummary/brain_pipe.save.default.IsReloadableCheck", "api/_autosummary/brain_pipe.save.default.default_filename_fn", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn", "api/_autosummary/brain_pipe.split", "api/_autosummary/brain_pipe.split.base", "api/_autosummary/brain_pipe.split.base.Splitter", "api/_autosummary/brain_pipe.split.mid", "api/_autosummary/brain_pipe.split.mid.MidSplit", "api/_autosummary/brain_pipe.split.operations", "api/_autosummary/brain_pipe.split.operations.base", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation", "api/_autosummary/brain_pipe.split.operations.normalize", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize", "api/_autosummary/brain_pipe.split.sequential", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit", "api/_autosummary/brain_pipe.utils", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig", "api/_autosummary/brain_pipe.utils.find", "api/_autosummary/brain_pipe.utils.find.Finder", "api/_autosummary/brain_pipe.utils.list", "api/_autosummary/brain_pipe.utils.list.flatten", "api/_autosummary/brain_pipe.utils.log", "api/_autosummary/brain_pipe.utils.log.ColorFormatter", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter", "api/_autosummary/brain_pipe.utils.log.default_logging", "api/_autosummary/brain_pipe.utils.multiprocess", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn", "api/_autosummary/brain_pipe.utils.path", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper", "api/_autosummary/brain_pipe.utils.serialization", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper", "api/api", "api/full_tree", "cli", "configuration", "index", "pipeline"], "filenames": ["api/_autosummary/brain_pipe.rst", "api/_autosummary/brain_pipe.cli.rst", "api/_autosummary/brain_pipe.cli.base.rst", "api/_autosummary/brain_pipe.cli.base.CLI.rst", "api/_autosummary/brain_pipe.cli.cli_entrypoint.rst", "api/_autosummary/brain_pipe.cli.cli_factory.rst", "api/_autosummary/brain_pipe.cli.default.rst", "api/_autosummary/brain_pipe.cli.default.DefaultCLI.rst", "api/_autosummary/brain_pipe.dataloaders.rst", "api/_autosummary/brain_pipe.dataloaders.base.rst", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader.rst", "api/_autosummary/brain_pipe.dataloaders.path.rst", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader.rst", "api/_autosummary/brain_pipe.parser.rst", "api/_autosummary/brain_pipe.parser.base.rst", "api/_autosummary/brain_pipe.parser.base.Parser.rst", "api/_autosummary/brain_pipe.parser.file.rst", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin.rst", "api/_autosummary/brain_pipe.parser.file.FileParser.rst", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.simple_dict.rst", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser.rst", "api/_autosummary/brain_pipe.parser.template_text.rst", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser.rst", "api/_autosummary/brain_pipe.parser.text.rst", "api/_autosummary/brain_pipe.parser.text.TextParser.rst", "api/_autosummary/brain_pipe.parser.yaml.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser.rst", "api/_autosummary/brain_pipe.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.rst", "api/_autosummary/brain_pipe.pipeline.base.Pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep.rst", "api/_autosummary/brain_pipe.pipeline.cache.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.rst", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper.rst", "api/_autosummary/brain_pipe.preprocessing.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction.rst", "api/_autosummary/brain_pipe.preprocessing.filter.rst", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt.rst", "api/_autosummary/brain_pipe.preprocessing.resample.rst", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose.rst", "api/_autosummary/brain_pipe.runner.rst", "api/_autosummary/brain_pipe.runner.base.rst", "api/_autosummary/brain_pipe.runner.base.Runner.rst", "api/_autosummary/brain_pipe.runner.default.rst", "api/_autosummary/brain_pipe.runner.default.DefaultRunner.rst", "api/_autosummary/brain_pipe.save.rst", "api/_autosummary/brain_pipe.save.base.rst", "api/_autosummary/brain_pipe.save.base.Save.rst", "api/_autosummary/brain_pipe.save.default.rst", "api/_autosummary/brain_pipe.save.default.CheckFunctor.rst", "api/_autosummary/brain_pipe.save.default.DefaultSave.rst", "api/_autosummary/brain_pipe.save.default.IsDoneCheck.rst", "api/_autosummary/brain_pipe.save.default.IsReloadableCheck.rst", "api/_autosummary/brain_pipe.save.default.default_filename_fn.rst", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn.rst", "api/_autosummary/brain_pipe.split.rst", "api/_autosummary/brain_pipe.split.base.rst", "api/_autosummary/brain_pipe.split.base.Splitter.rst", "api/_autosummary/brain_pipe.split.mid.rst", "api/_autosummary/brain_pipe.split.mid.MidSplit.rst", "api/_autosummary/brain_pipe.split.operations.rst", "api/_autosummary/brain_pipe.split.operations.base.rst", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation.rst", "api/_autosummary/brain_pipe.split.operations.normalize.rst", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize.rst", "api/_autosummary/brain_pipe.split.sequential.rst", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit.rst", "api/_autosummary/brain_pipe.utils.rst", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig.rst", "api/_autosummary/brain_pipe.utils.find.rst", "api/_autosummary/brain_pipe.utils.find.Finder.rst", "api/_autosummary/brain_pipe.utils.list.rst", "api/_autosummary/brain_pipe.utils.list.flatten.rst", "api/_autosummary/brain_pipe.utils.log.rst", "api/_autosummary/brain_pipe.utils.log.ColorFormatter.rst", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter.rst", "api/_autosummary/brain_pipe.utils.log.default_logging.rst", "api/_autosummary/brain_pipe.utils.multiprocess.rst", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton.rst", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn.rst", "api/_autosummary/brain_pipe.utils.path.rst", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator.rst", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper.rst", "api/_autosummary/brain_pipe.utils.serialization.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper.rst", "api/api.rst", "api/full_tree.rst", "cli.rst", "configuration.rst", "index.rst", "pipeline.rst"], "titles": ["brain_pipe", "brain_pipe.cli", "brain_pipe.cli.base", "brain_pipe.cli.base.CLI", "brain_pipe.cli.cli_entrypoint", "brain_pipe.cli.cli_factory", "brain_pipe.cli.default", "brain_pipe.cli.default.DefaultCLI", "brain_pipe.dataloaders", "brain_pipe.dataloaders.base", "brain_pipe.dataloaders.base.DataLoader", "brain_pipe.dataloaders.path", "brain_pipe.dataloaders.path.GlobLoader", "brain_pipe.parser", "brain_pipe.parser.base", "brain_pipe.parser.base.Parser", "brain_pipe.parser.file", "brain_pipe.parser.file.FileLoadMixin", "brain_pipe.parser.file.FileParser", "brain_pipe.parser.file.TemplateFileParser", "brain_pipe.parser.simple_dict", "brain_pipe.parser.simple_dict.SimpleDictParser", "brain_pipe.parser.template_text", "brain_pipe.parser.template_text.TemplateTextParser", "brain_pipe.parser.text", "brain_pipe.parser.text.TextParser", "brain_pipe.parser.yaml", "brain_pipe.parser.yaml.YAMLFileParser", "brain_pipe.parser.yaml.YAMLMixin", "brain_pipe.parser.yaml.YAMLTemplateFileParser", "brain_pipe.parser.yaml.YAMLTextParser", "brain_pipe.pipeline", "brain_pipe.pipeline.base", "brain_pipe.pipeline.base.Pipeline", "brain_pipe.pipeline.base.PipelineStep", "brain_pipe.pipeline.cache", "brain_pipe.pipeline.cache.base", "brain_pipe.pipeline.cache.base.PipelineCache", "brain_pipe.pipeline.cache.default", "brain_pipe.pipeline.cache.default.DefaultPipelineCache", "brain_pipe.pipeline.cache.pipeline", "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "brain_pipe.pipeline.default", "brain_pipe.pipeline.default.DefaultPipeline", "brain_pipe.pipeline.default.default_error_handler_fn", "brain_pipe.pipeline.wrapper", "brain_pipe.pipeline.wrapper.Wrapper", "brain_pipe.preprocessing", "brain_pipe.preprocessing.brain", "brain_pipe.preprocessing.brain.artifact", "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "brain_pipe.preprocessing.brain.eeg", "brain_pipe.preprocessing.brain.eeg.biosemi", "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "brain_pipe.preprocessing.brain.eeg.load", "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "brain_pipe.preprocessing.brain.epochs", "brain_pipe.preprocessing.brain.epochs.SplitEpochs", "brain_pipe.preprocessing.brain.link", "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "brain_pipe.preprocessing.brain.load", "brain_pipe.preprocessing.brain.load.MNELoader", "brain_pipe.preprocessing.brain.rereference", "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "brain_pipe.preprocessing.brain.trigger", "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "brain_pipe.preprocessing.brain.trigger.default_drift_correction", "brain_pipe.preprocessing.filter", "brain_pipe.preprocessing.filter.SosFiltFilt", "brain_pipe.preprocessing.resample", "brain_pipe.preprocessing.resample.ResamplePoly", "brain_pipe.preprocessing.stimulus", "brain_pipe.preprocessing.stimulus.audio", "brain_pipe.preprocessing.stimulus.audio.envelope", "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "brain_pipe.preprocessing.stimulus.audio.spectrogram", "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram", "brain_pipe.preprocessing.stimulus.load", "brain_pipe.preprocessing.stimulus.load.LoadStimuli", "brain_pipe.preprocessing.transpose", "brain_pipe.preprocessing.transpose.Transpose", "brain_pipe.runner", "brain_pipe.runner.base", "brain_pipe.runner.base.Runner", "brain_pipe.runner.default", "brain_pipe.runner.default.DefaultRunner", "brain_pipe.save", "brain_pipe.save.base", "brain_pipe.save.base.Save", "brain_pipe.save.default", "brain_pipe.save.default.CheckFunctor", "brain_pipe.save.default.DefaultSave", "brain_pipe.save.default.IsDoneCheck", "brain_pipe.save.default.IsReloadableCheck", "brain_pipe.save.default.default_filename_fn", "brain_pipe.save.default.default_metadata_key_fn", "brain_pipe.split", "brain_pipe.split.base", "brain_pipe.split.base.Splitter", "brain_pipe.split.mid", "brain_pipe.split.mid.MidSplit", "brain_pipe.split.operations", "brain_pipe.split.operations.base", "brain_pipe.split.operations.base.SplitterOperation", "brain_pipe.split.operations.normalize", "brain_pipe.split.operations.normalize.Standardize", "brain_pipe.split.sequential", "brain_pipe.split.sequential.SequentialSplit", "brain_pipe.utils", "brain_pipe.utils.ObjectsWithConfig", "brain_pipe.utils.find", "brain_pipe.utils.find.Finder", "brain_pipe.utils.list", "brain_pipe.utils.list.flatten", "brain_pipe.utils.log", "brain_pipe.utils.log.ColorFormatter", "brain_pipe.utils.log.DefaultFormatter", "brain_pipe.utils.log.default_logging", "brain_pipe.utils.multiprocess", "brain_pipe.utils.multiprocess.MultiprocessingSingleton", "brain_pipe.utils.multiprocess.SimpleCallbackFn", "brain_pipe.utils.path", "brain_pipe.utils.path.BIDSPathGenerator", "brain_pipe.utils.path.BIDSStimulusGrouper", "brain_pipe.utils.serialization", "brain_pipe.utils.serialization.pickle_dump_wrapper", "brain_pipe.utils.serialization.pickle_load_wrapper", "API Reference", "Full Tree", "Command Line Interface", "Defining and running Pipelines through configuration files", "Welcome to Brain Pipe\u2019s documentation!", "Overview"], "terms": {"numpi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "ndarrai": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "type": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131], "sequenc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "union": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "option": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137], "callabl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 135], "tupl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 135], "list": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 135, 137], "dict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137], "set": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "collect": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "abc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "iter": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "ordereddict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129], "parser": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 134], "base": [0, 1, 5, 6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 101, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137], "preprocess": [0, 7, 8, 32, 33, 34, 40, 41, 43, 45, 46, 134, 136, 137], "bid": [0, 60, 126, 127, 128, 136, 137], "data": [0, 7, 8, 9, 10, 11, 12, 33, 34, 37, 39, 41, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 81, 83, 84, 85, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 120, 121, 134, 135, 137], "modul": [0, 1, 8, 13, 31, 35, 36, 42, 47, 48, 52, 75, 76, 86, 91, 101, 106, 113, 116, 135, 137], "defin": [1, 18, 21, 25, 27, 30, 31, 96, 134, 136, 137], "command": [1, 2, 3, 4, 5, 7, 135, 136], "line": [1, 2, 3, 4, 5, 7, 135, 136], "interfac": [1, 2, 3, 4, 7, 135, 136], "function": [1, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 35, 37, 39, 42, 43, 45, 46, 48, 52, 53, 59, 62, 68, 69, 70, 75, 76, 78, 81, 83, 94, 96, 101, 116, 117, 119, 120, 121, 124, 125, 129, 137], "abstract": [2, 3, 18, 19, 23, 25, 37, 93, 95, 103, 108, 114], "class": [2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 135], "__init__": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 103, 105, 108, 110, 112, 114, 116, 120, 121, 124, 125, 127, 128, 133], "method": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 103, 105, 108, 110, 112, 114, 116, 120, 121, 124, 125, 127, 128, 137], "get_pars": [3, 7, 133], "cli_info": [3, 7], "str": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 85, 90, 93, 95, 96, 97, 98, 99, 100, 103, 105, 112, 116, 120, 121, 122, 127, 128, 130, 131], "ani": [3, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 34, 37, 39, 41, 43, 44, 45, 46, 58, 60, 61, 62, 63, 65, 67, 72, 74, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 103, 105, 112, 116, 120, 121, 122, 130, 131, 135, 137], "find": [3, 7, 8, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 78, 133, 137], "an": [3, 7, 10, 33, 34, 41, 43, 46, 50, 51, 56, 58, 60, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112, 120, 121, 136, 137], "appropri": [3, 7, 135], "inform": [3, 7, 14, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 60, 96, 116, 120, 121, 134, 136, 137], "paramet": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 103, 105, 110, 112, 114, 116, 118, 120, 121, 122, 124, 127, 128, 130, 131], "The": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 42, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 96, 98, 99, 100, 103, 105, 112, 114, 116, 120, 121, 122, 127, 128, 130, 131, 135, 136], "pars": [3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 135], "argument": [3, 5, 7, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 37, 46, 65, 72, 78, 81, 83, 93, 95, 97, 98, 105, 120, 121, 122, 134, 135], "return": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 96, 99, 100, 103, 105, 112, 116, 118, 120, 121, 122, 124, 127, 131, 137], "A": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 88, 90, 93, 96, 103, 105, 112, 116, 118, 127, 128, 135, 137], "can": [3, 5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 91, 93, 96, 103, 105, 107, 108, 112, 114, 120, 121, 134, 135, 136, 137], "us": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 87, 88, 93, 95, 96, 99, 103, 105, 112, 120, 121, 124, 125, 134, 135, 136, 137], "creat": [3, 5, 7, 19, 23, 29, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 67, 69, 72, 74, 78, 83, 85, 90, 93, 95, 96, 97, 98, 103, 105, 110, 112, 116, 120, 121, 124, 125, 127, 128, 136, 137], "pipelin": [3, 5, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 62, 68, 87, 88, 90, 93, 96, 133, 134, 136, 137], "runner": [3, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 133, 135, 137], "get_run_opt": [3, 7, 133], "extract": [3, 7, 39, 60, 105], "dataload": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 87, 88, 90, 133, 135, 137], "contain": [3, 7, 15, 17, 18, 19, 20, 21, 23, 25, 27, 29, 30, 37, 39, 41, 42, 44, 60, 62, 74, 81, 88, 90, 93, 96, 99, 100, 116, 134, 136], "its": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 78, 88, 90, 108, 135, 137], "parse_cli_argu": [3, 7, 133], "arg": [3, 7, 15, 18, 21, 25, 27, 30, 33, 43, 50, 51, 58, 62, 67, 93, 95, 97, 98, 105, 120, 121], "none": [3, 5, 7, 37, 39, 41, 43, 46, 56, 61, 62, 67, 78, 81, 83, 88, 90, 96, 99, 103, 112, 116, 120, 121, 124, 127, 134], "receiv": [3, 7, 137], "from": [3, 7, 9, 10, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 41, 43, 54, 55, 56, 60, 63, 82, 83, 85, 96, 103, 105, 112, 116, 120, 121, 128, 131, 134, 137], "If": [3, 5, 7, 33, 34, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 99, 103, 105, 112, 116, 120, 121, 124, 134, 135, 137], "should": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 51, 69, 78, 83, 96, 105, 116, 120, 121, 128, 135, 137], "sy": [3, 7], "argv": [3, 7], "directli": [3, 7], "dictionari": [3, 7, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 81, 83, 90, 114, 116, 120, 121, 128, 135], "parse_cli_arguments_for_pars": [3, 7, 133], "run": [3, 4, 7, 41, 43, 44, 87, 88, 90, 127, 128, 133, 134, 137], "data_dict": [3, 7, 12, 34, 37, 39, 41, 43, 44, 46, 50, 51, 58, 63, 81, 93, 96, 99, 100], "result": [3, 7, 36, 88, 90, 120, 121, 137], "cli_nam": 5, "object": [5, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 43, 50, 51, 60, 61, 62, 78, 96, 114, 116, 124, 125, 127, 128, 130, 131, 135, 137], "name": [5, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 99, 103, 105, 112, 116, 127, 128, 134, 135], "rais": [5, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112], "valueerror": 5, "i": [5, 10, 12, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 61, 62, 63, 65, 67, 68, 69, 70, 72, 74, 78, 79, 81, 83, 85, 93, 96, 98, 99, 103, 105, 112, 120, 121, 125, 127, 134, 135, 136, 137], "found": [5, 50, 56, 116, 134, 135], "attribut": [7, 17, 18, 19, 21, 23, 25, 27, 29, 30, 41, 43, 62, 78, 83, 96, 120, 121, 124], "add_arguments_to_argpars": [7, 133], "argpars": 7, "argumentpars": 7, "add": [7, 43, 56, 137], "ad": [7, 10, 12, 39], "get_argpars": [7, 133], "descript": [7, 116], "brain": [7, 133, 134, 137], "imag": [7, 64, 65, 134, 136, 137], "load": [7, 9, 10, 11, 12, 17, 18, 19, 27, 29, 37, 39, 62, 116, 131, 133, 135, 137], "code": [8, 47, 50, 57, 64, 68, 77, 80, 81, 82, 102, 135, 136, 137], "sourc": [9, 10, 78, 133, 137], "has_length": [10, 12], "true": [10, 12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112], "ar": [10, 33, 34, 41, 43, 50, 56, 62, 65, 70, 78, 81, 96, 116, 120, 121, 127, 128, 134, 135, 136, 137], "e": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 70, 78, 134, 136, 137], "g": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 78, 134, 137], "file": [10, 12, 26, 27, 29, 37, 39, 41, 55, 60, 65, 81, 83, 96, 128, 133, 134, 136, 137], "over": [10, 41, 43], "therefor": 10, "thei": [10, 43, 78], "have": [10, 37, 72, 78, 135, 137], "__iter__": [10, 137], "implement": [10, 38, 39, 40, 41, 43, 50, 120, 121, 137], "subclass": [10, 116, 135, 137], "initi": [10, 12, 18, 21, 25, 27, 30, 33, 34, 78, 79, 88, 108, 136, 137], "compute_length": [10, 12, 133], "comput": [10, 12, 50, 78, 120, 121], "length": [10, 12, 70, 78, 103, 105, 112], "int": [10, 12, 18, 19, 23, 25, 37, 39, 41, 43, 50, 51, 56, 67, 69, 70, 74, 79, 90, 103, 105, 110, 112, 124], "note": [10, 12, 18, 21, 25, 27, 30, 41, 43, 72, 74, 78], "thi": [10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 41, 43, 44, 50, 56, 62, 63, 68, 70, 78, 81, 93, 96, 105, 120, 121, 134, 135, 136, 137], "__len__": [10, 12], "you": [10, 12, 34, 78, 120, 121, 134, 135, 136, 137], "overrid": [10, 12, 39], "func": [10, 12, 78], "simpl": [11, 12, 18, 19, 23, 25, 125, 137], "glob": [11, 12], "pattern": [11, 12], "glob_pattern": 12, "filter_fn": [12, 116, 133], "glob_fn": 12, "iglob": 12, "kei": [12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 100, 103, 105, 112, 116, 135], "chain": 12, "built": 12, "all": [12, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 49, 56, 67, 92, 93, 116, 120, 121, 124, 127, 134, 135, 137], "bool": [12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 116], "includ": [12, 99, 116], "filter": [12, 50, 74, 78, 116, 133, 137], "path_to_data_dict": [12, 133], "convert": [12, 14, 15, 78, 120, 121, 133, 135], "loader": [14, 15, 18, 19, 21, 23, 25, 27, 29, 30], "get_additional_kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 133], "input_": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30], "info": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 56], "addit": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 81, 83, 93, 95, 97, 98, 120, 121, 122, 135], "pass": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 41, 43, 46, 65, 72, 78, 81, 83, 105, 120, 121, 122, 135, 137], "identifi": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30], "cli": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 133, 135], "input": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112, 120, 121, 134, 135, 137], "avail": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 56, 124], "determin": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 51, 120, 121, 134], "kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 43, 50, 51, 58, 62, 67, 79, 81, 83, 85, 93, 95, 97, 98, 105, 120, 121, 122], "valu": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 41, 43, 65, 78, 83, 120, 121, 128, 135], "link_loader_to_pipelin": [15, 18, 19, 21, 23, 25, 27, 29, 30, 133], "pair": [15, 18, 19, 21, 23, 25, 27, 29, 30, 83], "correspond": [15, 18, 19, 21, 23, 25, 27, 29, 30, 62, 72, 88, 90, 96, 116], "map": [15, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 124, 128], "between": [15, 18, 19, 21, 23, 25, 27, 29, 30, 70, 83, 96, 99, 137], "set_additional_kwarg": [15, 18, 19, 21, 23, 25, 27, 29, 30, 133], "textdictpars": 16, "instead": [16, 18, 19, 25, 120, 121, 135], "mixin": [17, 28], "textpars": [17, 18, 23, 28, 30, 133, 135], "befor": [17, 34, 120, 121, 137], "string": [17, 18, 19, 23, 27, 29, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 120, 121, 127, 135], "when": [17, 18, 19, 23, 27, 29, 43, 70, 81, 93, 96, 106, 107, 108, 120, 121, 127, 134, 135, 137], "call": [17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 46, 78, 120, 121, 137], "load_fil": [17, 18, 19, 27, 29, 133], "path": [17, 18, 19, 27, 29, 37, 39, 56, 60, 61, 62, 65, 82, 83, 116, 130, 131, 133, 134, 135], "text": [17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 120, 121, 133, 135], "wa": [17, 18, 19, 27, 29, 41, 43, 50, 81, 93], "fileloadmixin": [18, 19, 133], "apply_config": [18, 19, 21, 23, 25, 27, 29, 30, 114, 133], "config": [18, 19, 21, 23, 25, 27, 29, 30, 90, 114, 135], "appli": [18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 50, 56, 107, 108, 114], "configur": [18, 19, 21, 23, 25, 27, 29, 30, 90, 114, 120, 121, 122, 134, 136, 137], "get_runner_from_parsed_config": [18, 19, 21, 23, 25, 27, 29, 30, 133], "parsed_config": [18, 19, 21, 23, 25, 27, 29, 30], "construct": [18, 19, 21, 23, 25, 27, 29, 30, 137], "alreadi": [18, 19, 21, 23, 25, 27, 29, 30, 93, 96, 97, 98, 137], "parse_al": [18, 19, 21, 23, 25, 27, 29, 30, 133], "all_info": [18, 19, 21, 23, 25, 27, 29, 30], "parse_text_to_dict": [18, 19, 23, 25, 27, 28, 29, 30, 133], "builtin": [18, 19, 23, 25], "recursive_pars": [18, 19, 21, 23, 25, 27, 29, 30, 133], "text_dict": [18, 19, 21, 23, 25, 27, 29, 30], "intern": [18, 21, 25, 27, 30, 68], "so": [18, 21, 25, 27, 30, 61, 137], "also": [18, 21, 25, 27, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112, 134, 135, 136, 137], "specifi": [18, 21, 25, 27, 30, 78, 120, 121, 134], "itself": [18, 21, 25, 27, 30], "under": [18, 21, 25, 27, 30, 135], "templatetextpars": [19, 29, 133, 135], "new": [19, 23, 29, 39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 74, 93, 95, 97, 98, 120, 121, 125, 127, 128, 137], "onli": [20, 21, 62, 96, 116, 127, 134, 135, 136, 137], "objectswithconfig": [21, 133], "templat": [22, 23, 29, 33, 135], "sting": [22, 23], "jinja2": [23, 135], "fill": [23, 135], "render": 23, "simpledictpars": [25, 133], "yamlmixin": [27, 29, 30, 133], "filepars": [27, 133, 135], "templatefilepars": [29, 133, 135], "packag": [31, 68, 89, 90, 115, 116, 120, 121, 134, 136, 137], "pipelinestep": [31, 33, 37, 39, 41, 43, 46, 50, 51, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 103, 133], "step": [32, 33, 34, 37, 39, 41, 43, 45, 46, 56, 71, 83, 91, 92, 93, 96, 120, 121, 137], "repres": 33, "order": [33, 43, 58, 72, 78], "output": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112, 137], "one": [33, 60, 78, 137], "next": [33, 41, 103, 105, 112, 137], "overview": [33, 34, 43, 136], "default": [33, 40, 41, 50, 51, 61, 83, 120, 121, 122, 133, 134, 135, 137], "defaultpiplein": 33, "keyword": [33, 46, 65, 72, 81, 83, 93, 95, 97, 98, 105, 120, 121, 122, 135], "parse_dict_kei": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 133], "require_ordered_dict": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112], "fals": [33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 116], "error": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 96, 103, 105, 112, 137], "messag": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112, 120, 121, 134], "must": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112], "ordinari": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112], "typeerror": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 103, 105, 112], "copy_data_dict": [34, 46, 56, 65, 72, 74], "preprocessingstep": [34, 37, 43, 83], "build": 34, "block": [34, 69, 136], "repositori": [34, 136], "In": [34, 37, 78, 135, 137], "essenc": 34, "functor": [34, 95, 96, 137], "like": [34, 120, 121, 135, 137], "take": [34, 62, 81, 83, 96, 111, 112, 137], "perform": [34, 78, 103, 106, 112], "some": [34, 78, 137], "modifi": 34, "place": 34, "copi": [34, 58], "conveni": 34, "provid": [34, 72, 78, 96, 120, 121, 134, 135, 137], "make": [34, 78, 120, 121, 137], "easier": [34, 137], "write": [34, 134, 135], "want": [34, 78, 96, 120, 121, 135, 137], "your": [34, 134, 135, 136], "own": [34, 134, 136], "inherit": [34, 135], "anoth": [34, 63, 78, 137], "exist": [34, 37, 39, 41, 96, 135], "For": [34, 78, 132, 136, 137], "more": [34, 116, 134, 136, 137], "about": [34, 78, 95, 96, 137], "structur": [34, 137], "how": [34, 134, 137], "them": 34, "see": [34, 72, 78, 83, 105, 116, 132, 134, 135, 136, 137], "control": [34, 135], "whether": [34, 41, 50, 51, 61, 93, 96, 116], "oper": [34, 103, 112, 120, 121, 133, 137], "relat": [35, 48, 52, 53], "intermedi": [36, 37], "preprocessingpipelin": [36, 37, 42, 44], "cache_root": [37, 39], "cache_kei": [37, 39], "previous_cache_folder_kei": [37, 39], "previous_cach": [37, 39], "serializer_fn": [37, 39], "pickle_dump_wrapp": [37, 39, 133], "deserializer_fn": [37, 39], "pickle_load_wrapp": [37, 39, 133], "store": [37, 43, 60, 81, 83, 96, 137], "folder": [37, 39], "locat": [37, 70, 128, 135], "previou": [37, 39, 78, 83, 137], "serial": [37, 39, 133], "certain": 37, "first": [37, 41, 43, 72, 78, 105, 134, 137], "second": [37, 72, 78, 120, 121, 137], "deseri": [37, 39], "find_existing_cache_from_data_dict": [37, 39, 133], "step_index": [37, 39, 41, 43], "being": [37, 39, 63, 135], "index": [37, 39, 41, 43, 56, 103, 105, 112], "part": [37, 39, 41, 99], "possibli": [37, 39, 136], "find_existing_cache_from_previous_filenam": [37, 39, 133], "previous_filenam": [37, 39], "get_cache_dict": [37, 39, 133], "get_existing_cache_path": [37, 39, 133], "get": [37, 39, 41, 43, 69], "get_filenam": [37, 39, 133], "filenam": [37, 39, 96, 98, 99], "get_foldernam": [37, 39, 133], "foldernam": 37, "get_path": [37, 39, 133], "load_from_data_dict": [37, 39, 133], "predict_filenames_from_data_dict": [37, 39, 133], "predict": [37, 39], "possibl": [37, 39, 96, 137], "innermost": 37, "been": [37, 96, 97, 98, 137], "same": [37, 70, 120, 121, 135, 137], "time": [37, 49, 50, 78, 120, 121, 137], "predict_filenames_from_previous_filenam": [37, 39, 133], "predict_paths_from_data_dict": [37, 39, 133], "predict_paths_from_previous_filenam": [37, 39, 133], "save": [37, 39, 133, 137], "cache_folder_overrid": 39, "previous_caches_kei": 39, "filename_kei": 39, "eeg_path": 39, "stimulus_path": [39, 61, 62, 83, 128], "stimuli": [39, 58, 62, 75, 76, 82, 83, 128], "trigger_path": [39, 83], "separ": [39, 83, 96, 99], "_": [39, 83, 99], "pipelinecach": [39, 41, 62, 133], "instanc": [39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 72, 74, 93, 120, 121, 125], "root": [39, 96, 127, 128], "pipeline_cach": [41, 62], "overwrit": [41, 96, 133, 137], "defaultpipelin": [41, 133, 137], "check_reload": [41, 43, 96, 133], "check": [41, 43, 50, 63, 93, 95, 96, 97, 98, 120, 121], "we": [41, 43, 96, 137], "reload": [41, 43, 93, 96, 98, 133], "through": [41, 43, 134, 136, 137], "truncat": [41, 43], "end": [41, 43], "begin": [41, 43], "iterate_over_step": [41, 43, 133], "properti": [41, 43, 78, 96], "on_error": [41, 43, 133], "One": [41, 43], "run_step": [41, 43, 133], "singl": [41, 43, 137], "previous_steps_kei": 43, "previous_step": 43, "error_handler_fn": 43, "default_error_handler_fn": [43, 133], "stop": 43, "fo": 43, "logic": 43, "thread": 43, "multiprocess": [43, 63, 133, 137], "safe": 43, "manner": [43, 137], "It": [43, 78, 137], "handl": [43, 44, 57, 75, 76], "occur": [43, 44], "dure": [43, 44, 63], "keep": [43, 96, 137], "histori": 43, "specif": [43, 120, 121, 137], "metadata": [43, 95, 96, 100, 137], "except": [43, 44, 120, 121], "handler": 44, "log": [44, 133, 135], "traceback": [44, 120, 121], "function_": 46, "extra_arg": 46, "extra_kwarg": 46, "lambdapreprocessingstep": 46, "extra": [46, 65, 135], "remov": [49, 50, 51, 120, 121, 137], "techniqu": 49, "respons": [49, 50, 57, 59, 70], "assum": 49, "mne": [49, 56, 65], "layout": 49, "channel": [49, 50, 56, 67, 78], "data_kei": [50, 51, 58, 67, 69, 72, 74], "fs_kei": 50, "data_f": [50, 56, 74], "reference_channel": 50, "0": [50, 56, 67, 69, 78, 79, 81, 103, 110, 112, 124, 137], "1": [50, 56, 69, 81, 90, 124, 137], "2": [50, 78, 137], "32": [50, 78], "33": 50, "34": 50, "35": 50, "36": 50, "delai": 50, "3": [50, 136, 137], "eyeblink": 50, "mwf": 50, "excel": 50, "librari": [50, 137], "somer": 50, "et": 50, "al": 50, "matlab": [50, 68, 72], "here": [50, 137], "refer": [50, 67, 135], "b": 50, "francart": 50, "t": [50, 137], "bertrand": 50, "2018": 50, "gener": [50, 96, 99, 100, 113, 127, 137], "eeg": [50, 51, 58, 62, 67, 68, 69, 81, 127, 133, 136], "algorithm": 50, "multi": 50, "wiener": 50, "j": 50, "neural": 50, "eng": 50, "15": 50, "036007": 50, "sampl": [50, 70, 74, 78, 79, 81], "frequenc": [50, 70, 73, 74, 79], "indic": [50, 56, 69, 70], "By": [50, 120, 121, 135], "frontal": 50, "biosemi64": 50, "system": [50, 54, 70, 137], "ha": [50, 78, 96, 97, 98], "taken": 50, "account": 50, "apply_mwf": [50, 133], "mwf_weight": 50, "np": [50, 54, 56, 69, 70, 72, 105, 112], "shape": [50, 56, 70, 72, 78], "weight": 50, "check_symmetr": [50, 133], "rtol": 50, "1e": 50, "05": 50, "atol": 50, "08": 50, "matrix": 50, "symmetr": 50, "float": [50, 51, 56, 74, 78, 79, 81, 103, 105, 112], "rel": 50, "toler": 50, "absolut": 50, "otherwis": [50, 93, 120, 121], "compute_mwf": [50, 133], "mask": 50, "segment": [50, 78], "dimens": 50, "fix_symmetr": [50, 133], "fix": 50, "get_artifact_seg": [50, 133], "f": [50, 134], "select": [50, 56, 127], "where": [50, 70, 83, 96, 136], "sort_evd": [50, 133], "eig_valu": 50, "eig_vector": 50, "sort": [50, 81], "eigenvalu": 50, "eigenvector": 50, "column": [50, 72, 128], "stack_delai": [50, 133], "stack": [50, 120, 121], "version": [50, 96], "number": [50, 69, 78, 124], "threshold": 51, "500": 51, "blank": 51, "larg": [51, 78, 137], "spike": 51, "blankeegartifact": 51, "access": 51, "obtain": 51, "eeg_data": 51, "microvolt": 51, "seem": 51, "work": [51, 68, 78, 126, 137], "well": 51, "trigger": [54, 56, 83, 133], "process": [54, 61, 63, 68, 78, 96, 120, 121, 124, 133, 134, 137], "expect": [54, 70, 98], "1d": [54, 69, 70], "arrai": [54, 69, 70, 72, 78], "integ": [54, 56, 70], "bdf": [55, 127], "eeg_path_kei": 56, "data_path": [56, 60, 65], "raw": [56, 65, 69, 81], "eeg_data_kei": 56, "eeg_trigger_data_kei": 56, "trigger_data": [56, 69], "info_prefix": 56, "eeg_": 56, "channels_to_select": 56, "trigger_channel": 56, "statu": 56, "unit_multipli": 56, "additional_map": 56, "eeg_sfreq": [56, 69], "mne_arg": [56, 65], "mne_kwarg": [56, 65], "mneload": [56, 133], "loadeeg": 56, "prefix": [56, 83], "given": [56, 78, 85, 96, 99, 127, 135], "multipli": 56, "volt": 56, "get_channel": [56, 133], "channel_nam": 56, "selected_channel": 56, "n_channel": [56, 70], "n_sampl": [56, 70], "n_selected_channel": 56, "keyerror": [56, 78], "indexerror": 56, "out": [56, 120, 121], "rang": [56, 137], "stimulus_kei": 58, "keys_to_index": 58, "event_info": [58, 60], "split": [58, 69, 133], "individu": 58, "stimulu": [58, 59, 60, 61, 62, 63, 70, 128, 133], "data_dict_copi": [58, 133], "to_exclud": 58, "brain_path_kei": 60, "event_info_kei": 60, "compliant": 60, "event": [60, 120, 121, 128], "tsv": [60, 128], "read_ev": [60, 133], "events_path": 60, "read": [60, 135, 137], "each": [60, 72, 78, 79, 81, 135, 137], "row": [60, 72], "stim_path_kei": 61, "ignore_extens": 61, "compar": 61, "basenam": 61, "ignor": 61, "extens": [61, 83, 96, 120, 121, 127, 134, 135, 137], "process_path": [61, 133], "valid": 61, "stimulus_data": [62, 79, 81], "extract_stimuli_information_fn": 62, "bidsstimulusinfoextractor": [62, 133], "comparison_fn": 62, "basenamecomparisonfn": [62, 133], "stimulus_path_kei": 62, "stimuli_kei": 62, "grouper": 62, "util": [62, 68, 81, 133, 137], "bidsstimulusgroup": [62, 133], "key_fn_for_multiprocess": 62, "default_multiprocessing_key_fn": [62, 133], "linkstimulustoeeg": 62, "stimulus_data_dict": 62, "find_stimulus_fn": 62, "record": [62, 70, 120, 121], "cach": [62, 133], "necessari": [62, 134, 136, 137], "current": [63, 103, 105, 112, 120, 121, 135, 136], "": [65, 72, 81, 120, 121, 135, 137], "read_raw": 65, "axi": [67, 78, 103, 110, 112], "re": 67, "multivari": 67, "common": [67, 135], "averag": 67, "most": [68, 135, 136, 137], "our": [68, 137], "eegorl": 68, "brain_trigger_processing_fn": 69, "lambda": [69, 137], "postprocessing_fn": 69, "default_drift_correct": [69, 133], "data_trigger_kei": 69, "data_sampling_rate_kei": 69, "stimulus_trigger_data_kei": 69, "stimulus_trigger_sampling_rate_kei": 69, "trigger_sr": 69, "align": 69, "puls": 69, "form": 69, "period": 69, "matchtriggerstostimulu": 69, "get_trigger_indic": [69, 133], "split_epoch": [69, 133], "brain_trigger_indic": [69, 70], "brain_f": [69, 70], "nb_epoch": 69, "epoch": [69, 120, 121, 133], "brain_data": 70, "stimulus_trigger_indic": 70, "stimulus_f": 70, "correct": [70, 137], "drift": 70, "clock": 70, "mai": [70, 78, 137], "caus": [70, 78, 137], "misalign": 70, "tri": 70, "interpol": 70, "2d": 70, "filter_": 72, "emulate_matlab": 72, "sosfiltfilt_arg": 72, "sosfiltfilt_kwarg": 72, "section": 72, "wrapper": [72, 133], "scipi": [72, 74], "signal": [72, 74], "coeffici": 72, "n_section": 72, "6": [72, 79], "three": 72, "numer": 72, "last": [72, 93, 96, 120, 121], "denomin": 72, "document": [72, 137], "get_matlab_argu": [72, 133], "mimick": 72, "target": [73, 74, 79], "target_frequ": 74, "sampling_frequency_kei": 74, "resample_arg": 74, "resample_kwarg": 74, "polyphas": 74, "resample_poli": 74, "calcul": [77, 79, 80, 81], "speech": [77, 81], "power_factor": [78, 79, 81], "filterbank": 78, "gammatonefilterbank": 78, "transform": 78, "gammaton": [78, 79], "power": [78, 79, 81], "factor": [78, 79, 81], "durat": [78, 133], "user": [78, 120, 121, 137], "maximum": [78, 124], "buffers": 78, "two": 78, "buffer": 78, "nchannel": 78, "applic": 78, "case": 78, "final": [78, 137], "exampl": [78, 120, 121], "below": 78, "mani": 78, "too": 78, "fit": 78, "memori": [78, 137], "which": [78, 96, 120, 121, 128, 135, 136, 137], "onlin": 78, "do": [78, 124, 137], "size": 78, "fetch": 78, "typic": 78, "give": 78, "reason": 78, "good": 78, "rm": 78, "would": [78, 135], "def": [78, 137], "sum_of_squar": 78, "running_sum_of_squar": 78, "sum": [78, 137], "sqrt": 78, "fb": 78, "nsampl": 78, "sound": 78, "chang": [78, 120, 121], "after": [78, 93, 96, 137], "although": 78, "problem": [78, 137], "assumpt": 78, "were": 78, "insert": 78, "dummi": 78, "donothingfilterbank": 78, "guarante": 78, "stimulus_data_kei": [79, 81], "stimulus_sr_kei": [79, 81], "stimulus_sr": [79, 81], "output_kei": [79, 81], "envelope_data": 79, "min_freq": 79, "50": 79, "max_freq": 79, "5000": 79, "band": 79, "28": 79, "featureextractor": 79, "target_f": 79, "spectrogram_data": 81, "output_sr_kei": 81, "spectrogram_sr": 81, "sort_fn": 81, "librosa_kwarg": 81, "mel": 81, "librosa": 81, "icassp": [81, 136], "2023": [81, 136], "auditori": [81, 136], "challeng": [81, 136], "http": 81, "github": 81, "com": 81, "exporl": 81, "blob": 81, "main": [81, 116, 136], "task1_match_mismatch": 81, "mel_spectrogram": 81, "py": 81, "rate": 81, "featur": [81, 96, 99], "melspectrogram": 81, "depend": 81, "other": [81, 105, 135, 136, 137], "parse_librosa_kwarg": [81, 133], "load_from": 83, "load_fn": 83, "noqa": [83, 96], "e501": [83, 96], "point": [83, 120, 121, 135], "default_load_fn": 83, "constructor": 83, "map_fn": 88, "pipelines_with_load": [88, 90], "nb_process": [90, 124], "logging_config": 90, "clear_output": [93, 96], "clear": [93, 95, 96, 97, 98, 133], "space": [93, 96, 137], "posit": [93, 95, 97, 98, 120, 121, 134], "is_already_don": [93, 96, 133], "done": 93, "is_reload": [93, 96, 133], "defaultsav": [95, 133], "someth": 95, "item": 95, "state": [95, 97, 98, 108], "root_dir": [96, 127], "to_sav": 96, "filename_fn": 96, "default_filename_fn": [96, 133], "save_fn": 96, "reload_fn": 96, "metadata_filenam": 96, "save_metadata": 96, "json": [96, 135], "metadata_key_fn": 96, "default_metadata_key_fn": [96, 133], "check_don": 96, "isdonecheck": [96, 133], "isreloadablecheck": [96, 133], "disk": [96, 137], "unprocess": 96, "multipl": [96, 134, 137], "directori": [96, 127, 128, 135], "entir": 96, "filepath": 96, "self": [96, 137], "default_save_funct": 96, "default_reload_funct": 96, "continu": 96, "checkfunctor": [97, 98, 133], "reloadablecheck": 98, "expected_filenam": 98, "feature_nam": 99, "set_nam": 99, "differ": [99, 103, 112, 137], "feature_map": [103, 112], "split_fract": [103, 105, 112], "split_nam": [103, 112], "extra_oper": [103, 112], "splitteroper": [103, 110, 112, 133], "fraction": [103, 105, 112], "shortest_length": [103, 105, 112], "start_index": [103, 105, 112], "shortest": [103, 105, 112], "start": [103, 105, 112, 137], "middl": [104, 105], "splitter": [105, 111, 112, 133], "largest": 105, "front": 105, "back": 105, "encount": 105, "sort_split_names_fract": 105, "sequenti": [105, 133, 137], "reset": [108, 110, 133], "x_standard": 110, "frac": 110, "x": [110, 137], "mu": 110, "sigma": 110, "slice": [111, 112], "previously_found": 116, "obj": [116, 130], "previous": 116, "member": 116, "to_find": 116, "load_from_path": [116, 133], "attach_to_main": 116, "attach": 116, "__call__": [116, 137], "predicate_fn": [116, 133], "predic": 116, "lst": 118, "fmt": [120, 121], "asctim": [120, 121], "3d": [120, 121], "levelnam": [120, 121], "8": [120, 121], "defaultformatt": [120, 133], "color": 120, "formatt": [120, 121], "format": [120, 121, 133, 137], "localtim": [120, 121], "tm_year": [120, 121], "tm_mon": [120, 121], "tm_mdai": [120, 121], "tm_hour": [120, 121], "tm_min": [120, 121], "tm_sec": [120, 121], "tm_wdai": [120, 121], "tm_ydai": [120, 121], "tm_isdst": [120, 121], "sinc": [120, 121], "express": [120, 121], "local": [120, 121], "operand": [120, 121], "yield": [120, 121, 137], "coupl": [120, 121], "preparatori": [120, 121], "carri": [120, 121], "logrecord": [120, 121], "getmessag": [120, 121], "usestim": [120, 121, 133], "formattim": [120, 121, 133], "formatexcept": [120, 121, 133], "append": [120, 121, 137], "ei": [120, 121], "just": [120, 121, 135, 137], "print_except": [120, 121], "formatstack": [120, 121, 133], "stack_info": [120, 121], "special": [120, 121, 135], "print_stack": [120, 121], "trail": [120, 121], "newlin": [120, 121], "datefmt": [120, 121], "creation": [120, 121], "overridden": [120, 121], "requir": [120, 121, 135, 137], "basic": [120, 121, 135], "behaviour": [120, 121], "follow": [120, 121, 135, 137], "strftime": [120, 121], "iso8601": [120, 121], "rfc": [120, 121], "3339": [120, 121], "particular": [120, 121], "signatur": [120, 121], "gmtime": [120, 121], "To": [120, 121, 137], "shown": [120, 121, 137], "gmt": [120, 121], "basicconfig": 122, "singleton": 124, "classmethod": 124, "clean": [124, 133], "up": [124, 137], "pool": 124, "get_map_fn": [124, 133], "callback": [124, 125], "simplecallbackfn": [124, 133], "maxtasksperchild": 124, "core": 124, "track": [124, 125], "progress": [124, 125], "task": [124, 127, 128], "per": 124, "child": 124, "dataset": [127, 128, 136, 137], "select_path": [127, 133], "subject": [127, 128], "session": [127, 128], "suffix": 127, "match": 127, "bids_root": 128, "stim_fil": 128, "subfold": 128, "na_valu": 128, "n": 128, "group": 128, "interpret": 128, "miss": [128, 135], "wrap": [130, 131], "around": [130, 131], "pickl": [130, 131, 137], "dump": 130, "full": 132, "tree": 132, "brain_pip": [133, 134, 135, 136, 137], "cli_entrypoint": 133, "cli_factori": 133, "defaultcli": 133, "globload": 133, "simple_dict": 133, "template_text": 133, "yaml": [133, 134, 135, 137], "yamlfilepars": 133, "yamltemplatefilepars": [133, 135], "yamltextpars": 133, "defaultpipelinecach": 133, "cachingpreprocessingpipelin": 133, "artifact": 133, "artifactremovalmwf": 133, "interpolateartifact": 133, "biosemi": 133, "biosemi_trigger_processing_fn": 133, "loadeegnumpi": 133, "splitepoch": 133, "link": [133, 135], "linkstimulustobrainrespons": 133, "rerefer": 133, "commonaveragererefer": 133, "alignperiodicblocktrigg": 133, "sosfiltfilt": 133, "resampl": 133, "resamplepoli": 133, "audio": 133, "envelop": 133, "envelopefromgammaton": 133, "gammatoneenvelop": 133, "spectrogram": 133, "librosamelspectrogram": 133, "loadstimuli": 133, "transpos": 133, "defaultrunn": 133, "mid": 133, "midsplit": 133, "normal": 133, "standard": 133, "sequentialsplit": 133, "finder": [133, 135], "flatten": 133, "default_log": 133, "colorformatt": 133, "multiprocessingsingleton": 133, "bidspathgener": 133, "With": 134, "linea": 134, "config_fil": [134, 135], "typical_process": 134, "usag": [134, 137], "h": 134, "parser_fil": 134, "input_fil": 134, "definit": 134, "help": 134, "show": [134, 137], "exit": 134, "extern": 134, "search": [134, 135], "programmat": 135, "script": [135, 136, 137], "allow": [135, 137], "wai": [135, 137], "without": [135, 137], "import": [135, 137], "variabl": 135, "runtim": 135, "__file__": 135, "__filedir__": 135, "respect": 135, "ask": 135, "data_load": [135, 137], "data_from": 135, "helper": [135, 137], "treat": 135, "extra_path": 135, "is_point": 135, "try": [135, 137], "support": [135, 136], "effici": [136, 137], "extensibli": 136, "python3": 136, "goal": [136, 137], "public": 136, "sparrkule": [136, 137], "further": 136, "extend": 136, "reli": 136, "explain": 136, "detail": 136, "pip": 136, "bash": 136, "python": [136, 137], "7": 136, "pleas": [136, 137], "open": 136, "issu": 136, "pull": 136, "request": 136, "md": 136, "organ": 137, "customiz": 137, "fig": 137, "fly": 137, "complet": 137, "relev": 137, "accomplish": 137, "mean": 137, "easi": 137, "preform": 137, "bandpass": 137, "motion": 137, "etc": 137, "saver": 137, "free": 137, "complex": 137, "elabor": 137, "abl": 137, "both": 137, "commonli": 137, "practic": 137, "came": 137, "wast": 137, "lot": 137, "larger": 137, "delet": 137, "need": 137, "again": 137, "later": 137, "addition": 137, "easili": 137, "worri": 137, "datapoint": 137, "basi": 137, "possbil": 137, "parallel": 137, "modeul": 137, "bids_preprocess": 137, "picklabl": 137, "non": 137, "probabl": 137, "while": 137, "speed": 137, "immensli": 137, "come": 137, "cost": 137, "higher": 137, "ram": 137, "As": 137, "quit": 137, "bottleneck": 137, "exceed": 137, "limit": 137, "hard": 137, "drive": 137, "temporari": 137, "storag": 137, "swap": 137, "slow": 137, "down": 137, "reloc": 137, "recommend": 137, "modular": 137, "thing": 137, "independ": 137, "contribut": 137, "mind": 137, "maintain": 137, "futur": 137, "person": 137, "project": 137, "though": 137, "doe": 137, "everyth": 137, "fine": 137, "me": 137, "abov": 137, "strictli": 137, "speak": 137, "isn": 137, "theori": 137, "lieu": 137, "toi": 137, "bit": 137, "let": 137, "now": 137, "rangedataload": 137, "9": 137, "adddata": 137, "removemean": 137, "len": 137, "alright": 137, "manual": 137, "4": 137, "5": 137, "Or": 137, "look": 137}, "objects": {"": [[0, 0, 0, "-", "brain_pipe"]], "brain_pipe": [[1, 0, 0, "-", "cli"], [8, 0, 0, "-", "dataloaders"], [13, 0, 0, "-", "parser"], [31, 0, 0, "-", "pipeline"], [47, 0, 0, "-", "preprocessing"], [86, 0, 0, "-", "runner"], [91, 0, 0, "-", "save"], [101, 0, 0, "-", "split"], [113, 0, 0, "-", "utils"]], "brain_pipe.cli": [[2, 0, 0, "-", "base"], [4, 3, 1, "", "cli_entrypoint"], [5, 3, 1, "", "cli_factory"], [6, 0, 0, "-", "default"]], "brain_pipe.cli.base": [[3, 1, 1, "", "CLI"]], "brain_pipe.cli.base.CLI": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_parser"], [3, 2, 1, "", "get_run_options"], [3, 2, 1, "", "parse_cli_arguments"], [3, 2, 1, "", "parse_cli_arguments_for_parser"], [3, 2, 1, "", "run"]], "brain_pipe.cli.default": [[7, 1, 1, "", "DefaultCLI"]], "brain_pipe.cli.default.DefaultCLI": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "add_arguments_to_argparser"], [7, 2, 1, "", "get_argparser"], [7, 2, 1, "", "get_parser"], [7, 2, 1, "", "get_run_options"], [7, 2, 1, "", "parse_cli_arguments"], [7, 2, 1, "", "parse_cli_arguments_for_parser"], [7, 2, 1, "", "run"]], "brain_pipe.dataloaders": [[9, 0, 0, "-", "base"], [11, 0, 0, "-", "path"]], "brain_pipe.dataloaders.base": [[10, 1, 1, "", "DataLoader"]], "brain_pipe.dataloaders.base.DataLoader": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "compute_length"]], "brain_pipe.dataloaders.path": [[12, 1, 1, "", "GlobLoader"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "compute_length"], [12, 2, 1, "", "path_to_data_dict"]], "brain_pipe.parser": [[14, 0, 0, "-", "base"], [16, 0, 0, "-", "file"], [20, 0, 0, "-", "simple_dict"], [22, 0, 0, "-", "template_text"], [24, 0, 0, "-", "text"], [26, 0, 0, "-", "yaml"]], "brain_pipe.parser.base": [[15, 1, 1, "", "Parser"]], "brain_pipe.parser.base.Parser": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "get_additional_kwargs"], [15, 2, 1, "", "link_loader_to_pipeline"], [15, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file": [[17, 1, 1, "", "FileLoadMixin"], [18, 1, 1, "", "FileParser"], [19, 1, 1, "", "TemplateFileParser"]], "brain_pipe.parser.file.FileLoadMixin": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_additional_kwargs"], [17, 2, 1, "", "load_file"]], "brain_pipe.parser.file.FileParser": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "apply_config"], [18, 2, 1, "", "get_additional_kwargs"], [18, 2, 1, "", "get_runner_from_parsed_config"], [18, 2, 1, "", "link_loader_to_pipeline"], [18, 2, 1, "", "load_file"], [18, 2, 1, "", "parse_all"], [18, 2, 1, "", "parse_text_to_dict"], [18, 2, 1, "", "recursive_parse"], [18, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file.TemplateFileParser": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "apply_config"], [19, 2, 1, "", "get_additional_kwargs"], [19, 2, 1, "", "get_runner_from_parsed_config"], [19, 2, 1, "", "link_loader_to_pipeline"], [19, 2, 1, "", "load_file"], [19, 2, 1, "", "parse_all"], [19, 2, 1, "", "parse_text_to_dict"], [19, 2, 1, "", "recursive_parse"], [19, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[21, 1, 1, "", "SimpleDictParser"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "apply_config"], [21, 2, 1, "", "get_additional_kwargs"], [21, 2, 1, "", "get_runner_from_parsed_config"], [21, 2, 1, "", "link_loader_to_pipeline"], [21, 2, 1, "", "parse_all"], [21, 2, 1, "", "recursive_parse"], [21, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.template_text": [[23, 1, 1, "", "TemplateTextParser"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_config"], [23, 2, 1, "", "get_additional_kwargs"], [23, 2, 1, "", "get_runner_from_parsed_config"], [23, 2, 1, "", "link_loader_to_pipeline"], [23, 2, 1, "", "parse_all"], [23, 2, 1, "", "parse_text_to_dict"], [23, 2, 1, "", "recursive_parse"], [23, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.text": [[25, 1, 1, "", "TextParser"]], "brain_pipe.parser.text.TextParser": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "apply_config"], [25, 2, 1, "", "get_additional_kwargs"], [25, 2, 1, "", "get_runner_from_parsed_config"], [25, 2, 1, "", "link_loader_to_pipeline"], [25, 2, 1, "", "parse_all"], [25, 2, 1, "", "parse_text_to_dict"], [25, 2, 1, "", "recursive_parse"], [25, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml": [[27, 1, 1, "", "YAMLFileParser"], [28, 1, 1, "", "YAMLMixin"], [29, 1, 1, "", "YAMLTemplateFileParser"], [30, 1, 1, "", "YAMLTextParser"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "apply_config"], [27, 2, 1, "", "get_additional_kwargs"], [27, 2, 1, "", "get_runner_from_parsed_config"], [27, 2, 1, "", "link_loader_to_pipeline"], [27, 2, 1, "", "load_file"], [27, 2, 1, "", "parse_all"], [27, 2, 1, "", "parse_text_to_dict"], [27, 2, 1, "", "recursive_parse"], [27, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "parse_text_to_dict"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "apply_config"], [29, 2, 1, "", "get_additional_kwargs"], [29, 2, 1, "", "get_runner_from_parsed_config"], [29, 2, 1, "", "link_loader_to_pipeline"], [29, 2, 1, "", "load_file"], [29, 2, 1, "", "parse_all"], [29, 2, 1, "", "parse_text_to_dict"], [29, 2, 1, "", "recursive_parse"], [29, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "apply_config"], [30, 2, 1, "", "get_additional_kwargs"], [30, 2, 1, "", "get_runner_from_parsed_config"], [30, 2, 1, "", "link_loader_to_pipeline"], [30, 2, 1, "", "parse_all"], [30, 2, 1, "", "parse_text_to_dict"], [30, 2, 1, "", "recursive_parse"], [30, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.pipeline": [[32, 0, 0, "-", "base"], [35, 0, 0, "-", "cache"], [42, 0, 0, "-", "default"], [45, 0, 0, "-", "wrapper"]], "brain_pipe.pipeline.base": [[33, 1, 1, "", "Pipeline"], [34, 1, 1, "", "PipelineStep"]], "brain_pipe.pipeline.base.Pipeline": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.base.PipelineStep": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.cache": [[36, 0, 0, "-", "base"], [38, 0, 0, "-", "default"], [40, 0, 0, "-", "pipeline"]], "brain_pipe.pipeline.cache.base": [[37, 1, 1, "", "PipelineCache"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "find_existing_cache_from_data_dict"], [37, 2, 1, "", "find_existing_cache_from_previous_filename"], [37, 2, 1, "", "get_cache_dict"], [37, 2, 1, "", "get_existing_cache_paths"], [37, 2, 1, "", "get_filename"], [37, 2, 1, "", "get_foldername"], [37, 2, 1, "", "get_path"], [37, 2, 1, "", "load"], [37, 2, 1, "", "load_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_previous_filename"], [37, 2, 1, "", "predict_paths_from_data_dict"], [37, 2, 1, "", "predict_paths_from_previous_filename"], [37, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.default": [[39, 1, 1, "", "DefaultPipelineCache"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "find_existing_cache_from_data_dict"], [39, 2, 1, "", "find_existing_cache_from_previous_filename"], [39, 2, 1, "", "get_cache_dict"], [39, 2, 1, "", "get_existing_cache_paths"], [39, 2, 1, "", "get_filename"], [39, 2, 1, "", "get_foldername"], [39, 2, 1, "", "get_path"], [39, 2, 1, "", "load"], [39, 2, 1, "", "load_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_previous_filename"], [39, 2, 1, "", "predict_paths_from_data_dict"], [39, 2, 1, "", "predict_paths_from_previous_filename"], [39, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.pipeline": [[41, 1, 1, "", "CachingPreprocessingPipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "check_reload"], [41, 2, 1, "", "iterate_over_steps"], [41, 4, 1, "", "on_error"], [41, 2, 1, "", "parse_dict_keys"], [41, 2, 1, "", "run_step"]], "brain_pipe.pipeline.default": [[43, 1, 1, "", "DefaultPipeline"], [44, 3, 1, "", "default_error_handler_fn"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "check_reload"], [43, 2, 1, "", "iterate_over_steps"], [43, 4, 1, "", "on_error"], [43, 2, 1, "", "parse_dict_keys"], [43, 2, 1, "", "run_step"]], "brain_pipe.pipeline.wrapper": [[46, 1, 1, "", "Wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing": [[48, 0, 0, "-", "brain"], [71, 0, 0, "-", "filter"], [73, 0, 0, "-", "resample"], [75, 0, 0, "-", "stimulus"], [84, 0, 0, "-", "transpose"]], "brain_pipe.preprocessing.brain": [[49, 0, 0, "-", "artifact"], [52, 0, 0, "-", "eeg"], [57, 0, 0, "-", "epochs"], [59, 0, 0, "-", "link"], [64, 0, 0, "-", "load"], [66, 0, 0, "-", "rereference"], [68, 0, 0, "-", "trigger"]], "brain_pipe.preprocessing.brain.artifact": [[50, 1, 1, "", "ArtifactRemovalMWF"], [51, 1, 1, "", "InterpolateArtifacts"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "apply_mwf"], [50, 2, 1, "", "check_symmetric"], [50, 2, 1, "", "compute_mwf"], [50, 2, 1, "", "fix_symmetric"], [50, 2, 1, "", "get_artifact_segments"], [50, 2, 1, "", "parse_dict_keys"], [50, 2, 1, "", "sort_evd"], [50, 2, 1, "", "stack_delayed"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[53, 0, 0, "-", "biosemi"], [55, 0, 0, "-", "load"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[54, 3, 1, "", "biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[56, 1, 1, "", "LoadEEGNumpy"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "get_channels"], [56, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[58, 1, 1, "", "SplitEpochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "data_dict_copy"], [58, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[60, 1, 1, "", "BIDSStimulusInfoExtractor"], [61, 1, 1, "", "BasenameComparisonFn"], [62, 1, 1, "", "LinkStimulusToBrainResponse"], [63, 3, 1, "", "default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "read_events"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "process_path"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.load": [[65, 1, 1, "", "MNELoader"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[67, 1, 1, "", "CommonAverageRereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[69, 1, 1, "", "AlignPeriodicBlockTriggers"], [70, 3, 1, "", "default_drift_correction"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "get_trigger_indices"], [69, 2, 1, "", "parse_dict_keys"], [69, 2, 1, "", "split_epochs"]], "brain_pipe.preprocessing.filter": [[72, 1, 1, "", "SosFiltFilt"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "get_matlab_arguments"], [72, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[74, 1, 1, "", "ResamplePoly"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[76, 0, 0, "-", "audio"], [82, 0, 0, "-", "load"]], "brain_pipe.preprocessing.stimulus.audio": [[77, 0, 0, "-", "envelope"], [80, 0, 0, "-", "spectrogram"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[78, 1, 1, "", "EnvelopeFromGammatone"], [79, 1, 1, "", "GammatoneEnvelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, 2, 1, "", "__init__"], [78, 4, 1, "", "duration"], [78, 2, 1, "", "process"], [78, 4, 1, "", "source"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[81, 1, 1, "", "LibrosaMelSpectrogram"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "parse_dict_keys"], [81, 2, 1, "", "parse_librosa_kwargs"]], "brain_pipe.preprocessing.stimulus.load": [[83, 1, 1, "", "LoadStimuli"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[85, 1, 1, "", "Transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "parse_dict_keys"]], "brain_pipe.runner": [[87, 0, 0, "-", "base"], [89, 0, 0, "-", "default"]], "brain_pipe.runner.base": [[88, 1, 1, "", "Runner"]], "brain_pipe.runner.base.Runner": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "run"]], "brain_pipe.runner.default": [[90, 1, 1, "", "DefaultRunner"]], "brain_pipe.runner.default.DefaultRunner": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "run"]], "brain_pipe.save": [[92, 0, 0, "-", "base"], [94, 0, 0, "-", "default"]], "brain_pipe.save.base": [[93, 1, 1, "", "Save"]], "brain_pipe.save.base.Save": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "is_already_done"], [93, 2, 1, "", "is_reloadable"], [93, 2, 1, "", "parse_dict_keys"], [93, 2, 1, "", "reload"]], "brain_pipe.save.default": [[95, 1, 1, "", "CheckFunctor"], [96, 1, 1, "", "DefaultSave"], [97, 1, 1, "", "IsDoneCheck"], [98, 1, 1, "", "IsReloadableCheck"], [99, 3, 1, "", "default_filename_fn"], [100, 3, 1, "", "default_metadata_key_fn"]], "brain_pipe.save.default.CheckFunctor": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "clear"]], "brain_pipe.save.default.DefaultSave": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "is_already_done"], [96, 2, 1, "", "is_reloadable"], [96, 4, 1, "", "overwrite"], [96, 2, 1, "", "parse_dict_keys"], [96, 2, 1, "", "reload"]], "brain_pipe.save.default.IsDoneCheck": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "clear"]], "brain_pipe.save.default.IsReloadableCheck": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "clear"]], "brain_pipe.split": [[102, 0, 0, "-", "base"], [104, 0, 0, "-", "mid"], [106, 0, 0, "-", "operations"], [111, 0, 0, "-", "sequential"]], "brain_pipe.split.base": [[103, 1, 1, "", "Splitter"]], "brain_pipe.split.base.Splitter": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "parse_dict_keys"], [103, 2, 1, "", "split"]], "brain_pipe.split.mid": [[105, 1, 1, "", "MidSplit"]], "brain_pipe.split.mid.MidSplit": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "parse_dict_keys"], [105, 2, 1, "", "split"]], "brain_pipe.split.operations": [[107, 0, 0, "-", "base"], [109, 0, 0, "-", "normalize"]], "brain_pipe.split.operations.base": [[108, 1, 1, "", "SplitterOperation"]], "brain_pipe.split.operations.base.SplitterOperation": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "reset"]], "brain_pipe.split.operations.normalize": [[110, 1, 1, "", "Standardize"]], "brain_pipe.split.operations.normalize.Standardize": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "reset"]], "brain_pipe.split.sequential": [[112, 1, 1, "", "SequentialSplit"]], "brain_pipe.split.sequential.SequentialSplit": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "parse_dict_keys"], [112, 2, 1, "", "split"]], "brain_pipe.utils": [[114, 1, 1, "", "ObjectsWithConfig"], [115, 0, 0, "-", "find"], [117, 0, 0, "-", "list"], [119, 0, 0, "-", "log"], [123, 0, 0, "-", "multiprocess"], [126, 0, 0, "-", "path"], [129, 0, 0, "-", "serialization"]], "brain_pipe.utils.ObjectsWithConfig": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "apply_config"]], "brain_pipe.utils.find": [[116, 1, 1, "", "Finder"]], "brain_pipe.utils.find.Finder": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "filter"], [116, 2, 1, "", "filter_fn"], [116, 2, 1, "", "load_from_path"], [116, 2, 1, "", "predicate_fn"]], "brain_pipe.utils.list": [[118, 3, 1, "", "flatten"]], "brain_pipe.utils.log": [[120, 1, 1, "", "ColorFormatter"], [121, 1, 1, "", "DefaultFormatter"], [122, 3, 1, "", "default_logging"]], "brain_pipe.utils.log.ColorFormatter": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "converter"], [120, 2, 1, "", "format"], [120, 2, 1, "", "formatException"], [120, 2, 1, "", "formatStack"], [120, 2, 1, "", "formatTime"], [120, 2, 1, "", "usesTime"]], "brain_pipe.utils.log.DefaultFormatter": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "converter"], [121, 2, 1, "", "format"], [121, 2, 1, "", "formatException"], [121, 2, 1, "", "formatStack"], [121, 2, 1, "", "formatTime"], [121, 2, 1, "", "usesTime"]], "brain_pipe.utils.multiprocess": [[124, 1, 1, "", "MultiprocessingSingleton"], [125, 1, 1, "", "SimpleCallbackFn"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[124, 2, 1, "", "__init__"], [124, 2, 1, "", "clean"], [124, 2, 1, "", "get_map_fn"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[125, 2, 1, "", "__init__"]], "brain_pipe.utils.path": [[127, 1, 1, "", "BIDSPathGenerator"], [128, 1, 1, "", "BIDSStimulusGrouper"]], "brain_pipe.utils.path.BIDSPathGenerator": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "select_paths"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[128, 2, 1, "", "__init__"]], "brain_pipe.utils.serialization": [[130, 3, 1, "", "pickle_dump_wrapper"], [131, 3, 1, "", "pickle_load_wrapper"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"brain_pip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "cli": [1, 2, 3, 4, 5, 6, 7], "base": [2, 3, 9, 10, 14, 15, 32, 33, 34, 36, 37, 87, 88, 92, 93, 102, 103, 107, 108], "cli_entrypoint": 4, "cli_factori": 5, "default": [6, 7, 38, 39, 42, 43, 44, 89, 90, 94, 95, 96, 97, 98, 99, 100], "defaultcli": 7, "dataload": [8, 9, 10, 11, 12], "path": [11, 12, 126, 127, 128], "globload": 12, "parser": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 135], "file": [16, 17, 18, 19, 135], "fileloadmixin": 17, "filepars": 18, "templatefilepars": 19, "simple_dict": [20, 21], "simpledictpars": [21, 135], "template_text": [22, 23], "templatetextpars": 23, "text": [24, 25], "textpars": 25, "yaml": [26, 27, 28, 29, 30], "yamlfilepars": 27, "yamlmixin": 28, "yamltemplatefilepars": 29, "yamltextpars": 30, "pipelin": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 135], "pipelinestep": [34, 137], "cach": [35, 36, 37, 38, 39, 40, 41], "pipelinecach": 37, "defaultpipelinecach": 39, "cachingpreprocessingpipelin": 41, "defaultpipelin": 43, "default_error_handler_fn": 44, "wrapper": [45, 46], "preprocess": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 133], "brain": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 136], "artifact": [49, 50, 51], "artifactremovalmwf": 50, "interpolateartifact": 51, "eeg": [52, 53, 54, 55, 56], "biosemi": [53, 54], "biosemi_trigger_processing_fn": 54, "load": [55, 56, 64, 65, 82, 83], "loadeegnumpi": 56, "epoch": [57, 58], "splitepoch": 58, "link": [59, 60, 61, 62, 63], "bidsstimulusinfoextractor": 60, "basenamecomparisonfn": 61, "linkstimulustobrainrespons": 62, "default_multiprocessing_key_fn": 63, "mneload": 65, "rerefer": [66, 67], "commonaveragererefer": 67, "trigger": [68, 69, 70], "alignperiodicblocktrigg": 69, "default_drift_correct": 70, "filter": [71, 72], "sosfiltfilt": 72, "resampl": [73, 74], "resamplepoli": 74, "stimulu": [75, 76, 77, 78, 79, 80, 81, 82, 83], "audio": [76, 77, 78, 79, 80, 81], "envelop": [77, 78, 79], "envelopefromgammaton": 78, "gammatoneenvelop": 79, "spectrogram": [80, 81], "librosamelspectrogram": 81, "loadstimuli": 83, "transpos": [84, 85], "runner": [86, 87, 88, 89, 90], "defaultrunn": 90, "save": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "checkfunctor": 95, "defaultsav": 96, "isdonecheck": 97, "isreloadablecheck": 98, "default_filename_fn": 99, "default_metadata_key_fn": 100, "split": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "splitter": 103, "mid": [104, 105], "midsplit": 105, "oper": [106, 107, 108, 109, 110], "splitteroper": 108, "normal": [109, 110], "standard": 110, "sequenti": [111, 112], "sequentialsplit": 112, "util": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "objectswithconfig": 114, "find": [115, 116], "finder": 116, "list": [117, 118], "flatten": 118, "log": [119, 120, 121, 122], "colorformatt": 120, "defaultformatt": 121, "default_log": 122, "multiprocess": [123, 124, 125], "multiprocessingsingleton": 124, "simplecallbackfn": 125, "bidspathgener": 127, "bidsstimulusgroup": 128, "serial": [129, 130, 131], "pickle_dump_wrapp": 130, "pickle_load_wrapp": 131, "api": [132, 134, 136], "refer": [132, 136], "full": 133, "tree": 133, "bid": 133, "command": 134, "line": 134, "interfac": 134, "defin": 135, "run": [135, 136], "through": 135, "configur": 135, "from": 135, "background": 135, "typic": 135, "structur": [135, 136], "specifi": 135, "welcom": 136, "pipe": 136, "": 136, "document": 136, "motiv": 136, "intern": 136, "instal": 136, "requir": 136, "contribut": 136, "go": 136, "overview": 137, "concept": 137, "The": 137, "data_dict": 137, "conveni": 137, "class": 137, "addit": 137, "consider": 137, "write": 137, "your": 137, "own": 137, "small": 137, "exampl": 137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"brain_pipe": [[0, "module-brain_pipe"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "brain_pipe.cli.base.CLI": [[3, "brain-pipe-cli-base-cli"]], "brain_pipe.cli.cli_entrypoint": [[4, "brain-pipe-cli-cli-entrypoint"]], "brain_pipe.cli.cli_factory": [[5, "brain-pipe-cli-cli-factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "brain_pipe.cli.default.DefaultCLI": [[7, "brain-pipe-cli-default-defaultcli"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "brain_pipe.dataloaders.base.DataLoader": [[10, "brain-pipe-dataloaders-base-dataloader"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, "brain-pipe-dataloaders-path-globloader"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "brain_pipe.parser.base.Parser": [[15, "brain-pipe-parser-base-parser"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "brain_pipe.parser.file.FileLoadMixin": [[17, "brain-pipe-parser-file-fileloadmixin"]], "brain_pipe.parser.file.FileParser": [[18, "brain-pipe-parser-file-fileparser"]], "brain_pipe.parser.file.TemplateFileParser": [[19, "brain-pipe-parser-file-templatefileparser"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, "brain-pipe-parser-simple-dict-simpledictparser"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, "brain-pipe-parser-template-text-templatetextparser"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "brain_pipe.parser.text.TextParser": [[25, "brain-pipe-parser-text-textparser"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, "brain-pipe-parser-yaml-yamlfileparser"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, "brain-pipe-parser-yaml-yamlmixin"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, "brain-pipe-parser-yaml-yamltemplatefileparser"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, "brain-pipe-parser-yaml-yamltextparser"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "brain_pipe.pipeline.base.Pipeline": [[33, "brain-pipe-pipeline-base-pipeline"]], "brain_pipe.pipeline.base.PipelineStep": [[34, "brain-pipe-pipeline-base-pipelinestep"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, "brain-pipe-pipeline-cache-base-pipelinecache"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, "brain-pipe-pipeline-cache-default-defaultpipelinecache"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, "brain-pipe-pipeline-cache-pipeline-cachingpreprocessingpipeline"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, "brain-pipe-pipeline-default-defaultpipeline"]], "brain_pipe.pipeline.default.default_error_handler_fn": [[44, "brain-pipe-pipeline-default-default-error-handler-fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, "brain-pipe-pipeline-wrapper-wrapper"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, "brain-pipe-preprocessing-brain-artifact-artifactremovalmwf"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, "brain-pipe-preprocessing-brain-artifact-interpolateartifacts"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn": [[54, "brain-pipe-preprocessing-brain-eeg-biosemi-biosemi-trigger-processing-fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, "brain-pipe-preprocessing-brain-eeg-load-loadeegnumpy"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, "brain-pipe-preprocessing-brain-epochs-splitepochs"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, "brain-pipe-preprocessing-brain-link-bidsstimulusinfoextractor"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, "brain-pipe-preprocessing-brain-link-basenamecomparisonfn"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, "brain-pipe-preprocessing-brain-link-linkstimulustobrainresponse"]], "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn": [[63, "brain-pipe-preprocessing-brain-link-default-multiprocessing-key-fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, "brain-pipe-preprocessing-brain-load-mneloader"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, "brain-pipe-preprocessing-brain-rereference-commonaveragerereference"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, "brain-pipe-preprocessing-brain-trigger-alignperiodicblocktriggers"]], "brain_pipe.preprocessing.brain.trigger.default_drift_correction": [[70, "brain-pipe-preprocessing-brain-trigger-default-drift-correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, "brain-pipe-preprocessing-filter-sosfiltfilt"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, "brain-pipe-preprocessing-resample-resamplepoly"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, "brain-pipe-preprocessing-stimulus-audio-envelope-envelopefromgammatone"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, "brain-pipe-preprocessing-stimulus-audio-envelope-gammatoneenvelope"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram": [[81, "brain-pipe-preprocessing-stimulus-audio-spectrogram-librosamelspectrogram"]], "brain_pipe.preprocessing.stimulus.load": [[82, "module-brain_pipe.preprocessing.stimulus.load"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[83, "brain-pipe-preprocessing-stimulus-load-loadstimuli"]], "brain_pipe.preprocessing.transpose": [[84, "module-brain_pipe.preprocessing.transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[85, "brain-pipe-preprocessing-transpose-transpose"]], "brain_pipe.runner": [[86, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[87, "module-brain_pipe.runner.base"]], "brain_pipe.runner.base.Runner": [[88, "brain-pipe-runner-base-runner"]], "brain_pipe.runner.default": [[89, "module-brain_pipe.runner.default"]], "brain_pipe.runner.default.DefaultRunner": [[90, "brain-pipe-runner-default-defaultrunner"]], "brain_pipe.save": [[91, "module-brain_pipe.save"]], "brain_pipe.save.base": [[92, "module-brain_pipe.save.base"]], "brain_pipe.save.base.Save": [[93, "brain-pipe-save-base-save"]], "brain_pipe.save.default": [[94, "module-brain_pipe.save.default"]], "brain_pipe.save.default.CheckFunctor": [[95, "brain-pipe-save-default-checkfunctor"]], "brain_pipe.save.default.DefaultSave": [[96, "brain-pipe-save-default-defaultsave"]], "brain_pipe.save.default.IsDoneCheck": [[97, "brain-pipe-save-default-isdonecheck"]], "brain_pipe.save.default.IsReloadableCheck": [[98, "brain-pipe-save-default-isreloadablecheck"]], "brain_pipe.save.default.default_filename_fn": [[99, "brain-pipe-save-default-default-filename-fn"]], "brain_pipe.save.default.default_metadata_key_fn": [[100, "brain-pipe-save-default-default-metadata-key-fn"]], "brain_pipe.split": [[101, "module-brain_pipe.split"]], "brain_pipe.split.base": [[102, "module-brain_pipe.split.base"]], "brain_pipe.split.base.Splitter": [[103, "brain-pipe-split-base-splitter"]], "brain_pipe.split.mid": [[104, "module-brain_pipe.split.mid"]], "brain_pipe.split.mid.MidSplit": [[105, "brain-pipe-split-mid-midsplit"]], "brain_pipe.split.operations": [[106, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[107, "module-brain_pipe.split.operations.base"]], "brain_pipe.split.operations.base.SplitterOperation": [[108, "brain-pipe-split-operations-base-splitteroperation"]], "brain_pipe.split.operations.normalize": [[109, "module-brain_pipe.split.operations.normalize"]], "brain_pipe.split.operations.normalize.Standardize": [[110, "brain-pipe-split-operations-normalize-standardize"]], "brain_pipe.split.sequential": [[111, "module-brain_pipe.split.sequential"]], "brain_pipe.split.sequential.SequentialSplit": [[112, "brain-pipe-split-sequential-sequentialsplit"]], "brain_pipe.utils": [[113, "module-brain_pipe.utils"]], "brain_pipe.utils.ObjectsWithConfig": [[114, "brain-pipe-utils-objectswithconfig"]], "brain_pipe.utils.find": [[115, "module-brain_pipe.utils.find"]], "brain_pipe.utils.find.Finder": [[116, "brain-pipe-utils-find-finder"]], "brain_pipe.utils.list": [[117, "module-brain_pipe.utils.list"]], "brain_pipe.utils.list.flatten": [[118, "brain-pipe-utils-list-flatten"]], "brain_pipe.utils.log": [[119, "module-brain_pipe.utils.log"]], "brain_pipe.utils.log.ColorFormatter": [[120, "brain-pipe-utils-log-colorformatter"]], "brain_pipe.utils.log.DefaultFormatter": [[121, "brain-pipe-utils-log-defaultformatter"]], "brain_pipe.utils.log.default_logging": [[122, "brain-pipe-utils-log-default-logging"]], "brain_pipe.utils.multiprocess": [[123, "module-brain_pipe.utils.multiprocess"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[124, "brain-pipe-utils-multiprocess-multiprocessingsingleton"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[125, "brain-pipe-utils-multiprocess-simplecallbackfn"]], "brain_pipe.utils.path": [[126, "module-brain_pipe.utils.path"]], "brain_pipe.utils.path.BIDSPathGenerator": [[127, "brain-pipe-utils-path-bidspathgenerator"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[128, "brain-pipe-utils-path-bidsstimulusgrouper"]], "brain_pipe.utils.serialization": [[129, "module-brain_pipe.utils.serialization"]], "brain_pipe.utils.serialization.pickle_dump_wrapper": [[130, "brain-pipe-utils-serialization-pickle-dump-wrapper"]], "brain_pipe.utils.serialization.pickle_load_wrapper": [[131, "brain-pipe-utils-serialization-pickle-load-wrapper"]], "API Reference": [[132, "api-reference"]], "Full Tree": [[133, "full-tree"]], "BIDS preprocessing": [[133, null]], "Command Line Interface": [[134, "command-line-interface"]], "API": [[134, "api"]], "Defining and running Pipelines through configuration files": [[135, "defining-and-running-pipelines-through-configuration-files"]], "Running pipelines from configuration files": [[135, "running-pipelines-from-configuration-files"]], "Background": [[135, "background"]], "Typical structure for SimpleDictParsers": [[135, "typical-structure-for-simpledictparsers"]], "Specifying the parser": [[135, "specifying-the-parser"]], "Welcome to Brain Pipe\u2019s documentation!": [[136, "welcome-to-brain-pipe-s-documentation"]], "Motivation": [[136, "motivation"]], "Internal structure": [[136, "internal-structure"]], "Installation": [[136, "installation"]], "Running": [[136, "running"]], "Requirements": [[136, "requirements"]], "Contributing": [[136, "contributing"]], "API reference": [[136, "api-reference"]], "Go to": [[136, "go-to"]], "Overview": [[137, "overview"]], "Concept": [[137, "concept"]], "The data_dict": [[137, "the-data-dict"]], "Convenient classes": [[137, "convenient-classes"]], "Additional considerations": [[137, "additional-considerations"]], "Writing your own PipelineStep": [[137, "writing-your-own-pipelinestep"]], "Small Example": [[137, "small-example"]]}, "indexentries": {"brain_pipe": [[0, "module-brain_pipe"]], "module": [[0, "module-brain_pipe"], [1, "module-brain_pipe.cli"], [2, "module-brain_pipe.cli.base"], [6, "module-brain_pipe.cli.default"], [8, "module-brain_pipe.dataloaders"], [9, "module-brain_pipe.dataloaders.base"], [11, "module-brain_pipe.dataloaders.path"], [13, "module-brain_pipe.parser"], [14, "module-brain_pipe.parser.base"], [16, "module-brain_pipe.parser.file"], [20, "module-brain_pipe.parser.simple_dict"], [22, "module-brain_pipe.parser.template_text"], [24, "module-brain_pipe.parser.text"], [26, "module-brain_pipe.parser.yaml"], [31, "module-brain_pipe.pipeline"], [32, "module-brain_pipe.pipeline.base"], [35, "module-brain_pipe.pipeline.cache"], [36, "module-brain_pipe.pipeline.cache.base"], [38, "module-brain_pipe.pipeline.cache.default"], [40, "module-brain_pipe.pipeline.cache.pipeline"], [42, "module-brain_pipe.pipeline.default"], [45, "module-brain_pipe.pipeline.wrapper"], [47, "module-brain_pipe.preprocessing"], [48, "module-brain_pipe.preprocessing.brain"], [49, "module-brain_pipe.preprocessing.brain.artifact"], [52, "module-brain_pipe.preprocessing.brain.eeg"], [53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"], [55, "module-brain_pipe.preprocessing.brain.eeg.load"], [57, "module-brain_pipe.preprocessing.brain.epochs"], [59, "module-brain_pipe.preprocessing.brain.link"], [64, "module-brain_pipe.preprocessing.brain.load"], [66, "module-brain_pipe.preprocessing.brain.rereference"], [68, "module-brain_pipe.preprocessing.brain.trigger"], [71, "module-brain_pipe.preprocessing.filter"], [73, "module-brain_pipe.preprocessing.resample"], [75, "module-brain_pipe.preprocessing.stimulus"], [76, "module-brain_pipe.preprocessing.stimulus.audio"], [77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"], [80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"], [82, "module-brain_pipe.preprocessing.stimulus.load"], [84, "module-brain_pipe.preprocessing.transpose"], [86, "module-brain_pipe.runner"], [87, "module-brain_pipe.runner.base"], [89, "module-brain_pipe.runner.default"], [91, "module-brain_pipe.save"], [92, "module-brain_pipe.save.base"], [94, "module-brain_pipe.save.default"], [101, "module-brain_pipe.split"], [102, "module-brain_pipe.split.base"], [104, "module-brain_pipe.split.mid"], [106, "module-brain_pipe.split.operations"], [107, "module-brain_pipe.split.operations.base"], [109, "module-brain_pipe.split.operations.normalize"], [111, "module-brain_pipe.split.sequential"], [113, "module-brain_pipe.utils"], [115, "module-brain_pipe.utils.find"], [117, "module-brain_pipe.utils.list"], [119, "module-brain_pipe.utils.log"], [123, "module-brain_pipe.utils.multiprocess"], [126, "module-brain_pipe.utils.path"], [129, "module-brain_pipe.utils.serialization"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "cli (class in brain_pipe.cli.base)": [[3, "brain_pipe.cli.base.CLI"]], "__init__() (cli method)": [[3, "brain_pipe.cli.base.CLI.__init__"]], "get_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_parser"]], "get_run_options() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_run_options"]], "parse_cli_arguments() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments_for_parser"]], "run() (cli method)": [[3, "brain_pipe.cli.base.CLI.run"]], "cli_entrypoint() (in module brain_pipe.cli)": [[4, "brain_pipe.cli.cli_entrypoint"]], "cli_factory() (in module brain_pipe.cli)": [[5, "brain_pipe.cli.cli_factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "defaultcli (class in brain_pipe.cli.default)": [[7, "brain_pipe.cli.default.DefaultCLI"]], "__init__() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.__init__"]], "add_arguments_to_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.add_arguments_to_argparser"]], "get_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_argparser"]], "get_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_parser"]], "get_run_options() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_run_options"]], "parse_cli_arguments() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments_for_parser"]], "run() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.run"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "dataloader (class in brain_pipe.dataloaders.base)": [[10, "brain_pipe.dataloaders.base.DataLoader"]], "__init__() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.__init__"]], "compute_length() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.compute_length"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "globloader (class in brain_pipe.dataloaders.path)": [[12, "brain_pipe.dataloaders.path.GlobLoader"]], "__init__() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.__init__"]], "compute_length() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.compute_length"]], "path_to_data_dict() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.path_to_data_dict"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "parser (class in brain_pipe.parser.base)": [[15, "brain_pipe.parser.base.Parser"]], "__init__() (parser method)": [[15, "brain_pipe.parser.base.Parser.__init__"]], "get_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.get_additional_kwargs"]], "link_loader_to_pipeline() (parser method)": [[15, "brain_pipe.parser.base.Parser.link_loader_to_pipeline"]], "set_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.set_additional_kwargs"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "fileloadmixin (class in brain_pipe.parser.file)": [[17, "brain_pipe.parser.file.FileLoadMixin"]], "__init__() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.__init__"]], "get_additional_kwargs() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.get_additional_kwargs"]], "load_file() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.load_file"]], "fileparser (class in brain_pipe.parser.file)": [[18, "brain_pipe.parser.file.FileParser"]], "__init__() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.__init__"]], "apply_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.apply_config"]], "get_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.link_loader_to_pipeline"]], "load_file() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.load_file"]], "parse_all() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_all"]], "parse_text_to_dict() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_text_to_dict"]], "recursive_parse() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.recursive_parse"]], "set_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.set_additional_kwargs"]], "templatefileparser (class in brain_pipe.parser.file)": [[19, "brain_pipe.parser.file.TemplateFileParser"]], "__init__() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.__init__"]], "apply_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.apply_config"]], "get_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.link_loader_to_pipeline"]], "load_file() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.load_file"]], "parse_all() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_all"]], "parse_text_to_dict() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_text_to_dict"]], "recursive_parse() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.recursive_parse"]], "set_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "simpledictparser (class in brain_pipe.parser.simple_dict)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser"]], "__init__() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.__init__"]], "apply_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.apply_config"]], "get_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.link_loader_to_pipeline"]], "parse_all() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.parse_all"]], "recursive_parse() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.recursive_parse"]], "set_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.set_additional_kwargs"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "templatetextparser (class in brain_pipe.parser.template_text)": [[23, "brain_pipe.parser.template_text.TemplateTextParser"]], "__init__() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.__init__"]], "apply_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.apply_config"]], "get_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.link_loader_to_pipeline"]], "parse_all() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_all"]], "parse_text_to_dict() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_text_to_dict"]], "recursive_parse() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.recursive_parse"]], "set_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.set_additional_kwargs"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "textparser (class in brain_pipe.parser.text)": [[25, "brain_pipe.parser.text.TextParser"]], "__init__() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.__init__"]], "apply_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.apply_config"]], "get_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.link_loader_to_pipeline"]], "parse_all() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_all"]], "parse_text_to_dict() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_text_to_dict"]], "recursive_parse() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.recursive_parse"]], "set_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.set_additional_kwargs"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "yamlfileparser (class in brain_pipe.parser.yaml)": [[27, "brain_pipe.parser.yaml.YAMLFileParser"]], "__init__() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.__init__"]], "apply_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.apply_config"]], "get_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.link_loader_to_pipeline"]], "load_file() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.load_file"]], "parse_all() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_all"]], "parse_text_to_dict() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_text_to_dict"]], "recursive_parse() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.recursive_parse"]], "set_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.set_additional_kwargs"]], "yamlmixin (class in brain_pipe.parser.yaml)": [[28, "brain_pipe.parser.yaml.YAMLMixin"]], "__init__() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.__init__"]], "parse_text_to_dict() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.parse_text_to_dict"]], "yamltemplatefileparser (class in brain_pipe.parser.yaml)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser"]], "__init__() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.__init__"]], "apply_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.apply_config"]], "get_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.link_loader_to_pipeline"]], "load_file() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.load_file"]], "parse_all() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_all"]], "parse_text_to_dict() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_text_to_dict"]], "recursive_parse() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.recursive_parse"]], "set_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.set_additional_kwargs"]], "yamltextparser (class in brain_pipe.parser.yaml)": [[30, "brain_pipe.parser.yaml.YAMLTextParser"]], "__init__() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.__init__"]], "apply_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.apply_config"]], "get_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.link_loader_to_pipeline"]], "parse_all() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_all"]], "parse_text_to_dict() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_text_to_dict"]], "recursive_parse() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.recursive_parse"]], "set_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.set_additional_kwargs"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "pipeline (class in brain_pipe.pipeline.base)": [[33, "brain_pipe.pipeline.base.Pipeline"]], "__init__() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.__init__"]], "parse_dict_keys() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.parse_dict_keys"]], "pipelinestep (class in brain_pipe.pipeline.base)": [[34, "brain_pipe.pipeline.base.PipelineStep"]], "__init__() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.__init__"]], "parse_dict_keys() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.parse_dict_keys"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "pipelinecache (class in brain_pipe.pipeline.cache.base)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache"]], "__init__() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.__init__"]], "find_existing_cache_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_cache_dict"]], "get_existing_cache_paths() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_existing_cache_paths"]], "get_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_filename"]], "get_foldername() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_foldername"]], "get_path() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_path"]], "load() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load"]], "load_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_previous_filename"]], "save() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.save"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "defaultpipelinecache (class in brain_pipe.pipeline.cache.default)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache"]], "__init__() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.__init__"]], "find_existing_cache_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_cache_dict"]], "get_existing_cache_paths() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_existing_cache_paths"]], "get_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_filename"]], "get_foldername() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_foldername"]], "get_path() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_path"]], "load() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load"]], "load_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_previous_filename"]], "save() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.save"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "cachingpreprocessingpipeline (class in brain_pipe.pipeline.cache.pipeline)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline"]], "__init__() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.__init__"]], "check_reload() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.check_reload"]], "iterate_over_steps() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.iterate_over_steps"]], "on_error (cachingpreprocessingpipeline property)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.on_error"]], "parse_dict_keys() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.parse_dict_keys"]], "run_step() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.run_step"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "defaultpipeline (class in brain_pipe.pipeline.default)": [[43, "brain_pipe.pipeline.default.DefaultPipeline"]], "__init__() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.__init__"]], "check_reload() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.check_reload"]], "iterate_over_steps() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.iterate_over_steps"]], "on_error (defaultpipeline property)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.on_error"]], "parse_dict_keys() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.parse_dict_keys"]], "run_step() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.run_step"]], "default_error_handler_fn() (in module brain_pipe.pipeline.default)": [[44, "brain_pipe.pipeline.default.default_error_handler_fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "wrapper (class in brain_pipe.pipeline.wrapper)": [[46, "brain_pipe.pipeline.wrapper.Wrapper"]], "__init__() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.__init__"]], "parse_dict_keys() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.parse_dict_keys"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "artifactremovalmwf (class in brain_pipe.preprocessing.brain.artifact)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF"]], "__init__() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.__init__"]], "apply_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.apply_mwf"]], "check_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.check_symmetric"]], "compute_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.compute_mwf"]], "fix_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.fix_symmetric"]], "get_artifact_segments() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.get_artifact_segments"]], "parse_dict_keys() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.parse_dict_keys"]], "sort_evd() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.sort_evd"]], "stack_delayed() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.stack_delayed"]], "interpolateartifacts (class in brain_pipe.preprocessing.brain.artifact)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts"]], "__init__() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.__init__"]], "parse_dict_keys() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "biosemi_trigger_processing_fn() (in module brain_pipe.preprocessing.brain.eeg.biosemi)": [[54, "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "loadeegnumpy (class in brain_pipe.preprocessing.brain.eeg.load)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy"]], "__init__() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.__init__"]], "get_channels() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.get_channels"]], "parse_dict_keys() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "splitepochs (class in brain_pipe.preprocessing.brain.epochs)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs"]], "__init__() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.__init__"]], "data_dict_copy() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.data_dict_copy"]], "parse_dict_keys() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "bidsstimulusinfoextractor (class in brain_pipe.preprocessing.brain.link)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor"]], "__init__() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.__init__"]], "read_events() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.read_events"]], "basenamecomparisonfn (class in brain_pipe.preprocessing.brain.link)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn"]], "__init__() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.__init__"]], "process_path() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.process_path"]], "linkstimulustobrainresponse (class in brain_pipe.preprocessing.brain.link)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse"]], "__init__() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.__init__"]], "parse_dict_keys() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.parse_dict_keys"]], "default_multiprocessing_key_fn() (in module brain_pipe.preprocessing.brain.link)": [[63, "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "mneloader (class in brain_pipe.preprocessing.brain.load)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader"]], "__init__() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.__init__"]], "parse_dict_keys() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "commonaveragerereference (class in brain_pipe.preprocessing.brain.rereference)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference"]], "__init__() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.__init__"]], "parse_dict_keys() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "alignperiodicblocktriggers (class in brain_pipe.preprocessing.brain.trigger)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers"]], "__init__() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.__init__"]], "get_trigger_indices() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.get_trigger_indices"]], "parse_dict_keys() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.parse_dict_keys"]], "split_epochs() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.split_epochs"]], "default_drift_correction() (in module brain_pipe.preprocessing.brain.trigger)": [[70, "brain_pipe.preprocessing.brain.trigger.default_drift_correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "sosfiltfilt (class in brain_pipe.preprocessing.filter)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt"]], "__init__() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.__init__"]], "get_matlab_arguments() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.get_matlab_arguments"]], "parse_dict_keys() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "resamplepoly (class in brain_pipe.preprocessing.resample)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly"]], "__init__() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.__init__"]], "parse_dict_keys() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "envelopefromgammatone (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone"]], "__init__() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.__init__"]], "duration (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.duration"]], "process() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.process"]], "source (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.source"]], "gammatoneenvelope (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope"]], "__init__() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.__init__"]], "parse_dict_keys() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"]], "librosamelspectrogram (class in brain_pipe.preprocessing.stimulus.audio.spectrogram)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram"]], "__init__() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.__init__"]], "parse_dict_keys() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.parse_dict_keys"]], "parse_librosa_kwargs() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.parse_librosa_kwargs"]], "brain_pipe.preprocessing.stimulus.load": [[82, "module-brain_pipe.preprocessing.stimulus.load"]], "loadstimuli (class in brain_pipe.preprocessing.stimulus.load)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli"]], "__init__() (loadstimuli method)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.__init__"]], "parse_dict_keys() (loadstimuli method)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[84, "module-brain_pipe.preprocessing.transpose"]], "transpose (class in brain_pipe.preprocessing.transpose)": [[85, "brain_pipe.preprocessing.transpose.Transpose"]], "__init__() (transpose method)": [[85, "brain_pipe.preprocessing.transpose.Transpose.__init__"]], "parse_dict_keys() (transpose method)": [[85, "brain_pipe.preprocessing.transpose.Transpose.parse_dict_keys"]], "brain_pipe.runner": [[86, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[87, "module-brain_pipe.runner.base"]], "runner (class in brain_pipe.runner.base)": [[88, "brain_pipe.runner.base.Runner"]], "__init__() (runner method)": [[88, "brain_pipe.runner.base.Runner.__init__"]], "run() (runner method)": [[88, "brain_pipe.runner.base.Runner.run"]], "brain_pipe.runner.default": [[89, "module-brain_pipe.runner.default"]], "defaultrunner (class in brain_pipe.runner.default)": [[90, "brain_pipe.runner.default.DefaultRunner"]], "__init__() (defaultrunner method)": [[90, "brain_pipe.runner.default.DefaultRunner.__init__"]], "run() (defaultrunner method)": [[90, "brain_pipe.runner.default.DefaultRunner.run"]], "brain_pipe.save": [[91, "module-brain_pipe.save"]], "brain_pipe.save.base": [[92, "module-brain_pipe.save.base"]], "save (class in brain_pipe.save.base)": [[93, "brain_pipe.save.base.Save"]], "__init__() (save method)": [[93, "brain_pipe.save.base.Save.__init__"]], "is_already_done() (save method)": [[93, "brain_pipe.save.base.Save.is_already_done"]], "is_reloadable() (save method)": [[93, "brain_pipe.save.base.Save.is_reloadable"]], "parse_dict_keys() (save method)": [[93, "brain_pipe.save.base.Save.parse_dict_keys"]], "reload() (save method)": [[93, "brain_pipe.save.base.Save.reload"]], "brain_pipe.save.default": [[94, "module-brain_pipe.save.default"]], "checkfunctor (class in brain_pipe.save.default)": [[95, "brain_pipe.save.default.CheckFunctor"]], "__init__() (checkfunctor method)": [[95, "brain_pipe.save.default.CheckFunctor.__init__"]], "clear() (checkfunctor method)": [[95, "brain_pipe.save.default.CheckFunctor.clear"]], "defaultsave (class in brain_pipe.save.default)": [[96, "brain_pipe.save.default.DefaultSave"]], "__init__() (defaultsave method)": [[96, "brain_pipe.save.default.DefaultSave.__init__"]], "is_already_done() (defaultsave method)": [[96, "brain_pipe.save.default.DefaultSave.is_already_done"]], "is_reloadable() (defaultsave method)": [[96, "brain_pipe.save.default.DefaultSave.is_reloadable"]], "overwrite (defaultsave property)": [[96, "brain_pipe.save.default.DefaultSave.overwrite"]], "parse_dict_keys() (defaultsave method)": [[96, "brain_pipe.save.default.DefaultSave.parse_dict_keys"]], "reload() (defaultsave method)": [[96, "brain_pipe.save.default.DefaultSave.reload"]], "isdonecheck (class in brain_pipe.save.default)": [[97, "brain_pipe.save.default.IsDoneCheck"]], "__init__() (isdonecheck method)": [[97, "brain_pipe.save.default.IsDoneCheck.__init__"]], "clear() (isdonecheck method)": [[97, "brain_pipe.save.default.IsDoneCheck.clear"]], "isreloadablecheck (class in brain_pipe.save.default)": [[98, "brain_pipe.save.default.IsReloadableCheck"]], "__init__() (isreloadablecheck method)": [[98, "brain_pipe.save.default.IsReloadableCheck.__init__"]], "clear() (isreloadablecheck method)": [[98, "brain_pipe.save.default.IsReloadableCheck.clear"]], "default_filename_fn() (in module brain_pipe.save.default)": [[99, "brain_pipe.save.default.default_filename_fn"]], "default_metadata_key_fn() (in module brain_pipe.save.default)": [[100, "brain_pipe.save.default.default_metadata_key_fn"]], "brain_pipe.split": [[101, "module-brain_pipe.split"]], "brain_pipe.split.base": [[102, "module-brain_pipe.split.base"]], "splitter (class in brain_pipe.split.base)": [[103, "brain_pipe.split.base.Splitter"]], "__init__() (splitter method)": [[103, "brain_pipe.split.base.Splitter.__init__"]], "parse_dict_keys() (splitter method)": [[103, "brain_pipe.split.base.Splitter.parse_dict_keys"]], "split() (splitter method)": [[103, "brain_pipe.split.base.Splitter.split"]], "brain_pipe.split.mid": [[104, "module-brain_pipe.split.mid"]], "midsplit (class in brain_pipe.split.mid)": [[105, "brain_pipe.split.mid.MidSplit"]], "__init__() (midsplit method)": [[105, "brain_pipe.split.mid.MidSplit.__init__"]], "parse_dict_keys() (midsplit method)": [[105, "brain_pipe.split.mid.MidSplit.parse_dict_keys"]], "split() (midsplit method)": [[105, "brain_pipe.split.mid.MidSplit.split"]], "brain_pipe.split.operations": [[106, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[107, "module-brain_pipe.split.operations.base"]], "splitteroperation (class in brain_pipe.split.operations.base)": [[108, "brain_pipe.split.operations.base.SplitterOperation"]], "__init__() (splitteroperation method)": [[108, "brain_pipe.split.operations.base.SplitterOperation.__init__"]], "reset() (splitteroperation method)": [[108, "brain_pipe.split.operations.base.SplitterOperation.reset"]], "brain_pipe.split.operations.normalize": [[109, "module-brain_pipe.split.operations.normalize"]], "standardize (class in brain_pipe.split.operations.normalize)": [[110, "brain_pipe.split.operations.normalize.Standardize"]], "__init__() (standardize method)": [[110, "brain_pipe.split.operations.normalize.Standardize.__init__"]], "reset() (standardize method)": [[110, "brain_pipe.split.operations.normalize.Standardize.reset"]], "brain_pipe.split.sequential": [[111, "module-brain_pipe.split.sequential"]], "sequentialsplit (class in brain_pipe.split.sequential)": [[112, "brain_pipe.split.sequential.SequentialSplit"]], "__init__() (sequentialsplit method)": [[112, "brain_pipe.split.sequential.SequentialSplit.__init__"]], "parse_dict_keys() (sequentialsplit method)": [[112, "brain_pipe.split.sequential.SequentialSplit.parse_dict_keys"]], "split() (sequentialsplit method)": [[112, "brain_pipe.split.sequential.SequentialSplit.split"]], "brain_pipe.utils": [[113, "module-brain_pipe.utils"]], "objectswithconfig (class in brain_pipe.utils)": [[114, "brain_pipe.utils.ObjectsWithConfig"]], "__init__() (objectswithconfig method)": [[114, "brain_pipe.utils.ObjectsWithConfig.__init__"]], "apply_config() (objectswithconfig method)": [[114, "brain_pipe.utils.ObjectsWithConfig.apply_config"]], "brain_pipe.utils.find": [[115, "module-brain_pipe.utils.find"]], "finder (class in brain_pipe.utils.find)": [[116, "brain_pipe.utils.find.Finder"]], "__init__() (finder method)": [[116, "brain_pipe.utils.find.Finder.__init__"]], "filter() (finder method)": [[116, "brain_pipe.utils.find.Finder.filter"]], "filter_fn() (finder method)": [[116, "brain_pipe.utils.find.Finder.filter_fn"]], "load_from_path() (finder method)": [[116, "brain_pipe.utils.find.Finder.load_from_path"]], "predicate_fn() (finder method)": [[116, "brain_pipe.utils.find.Finder.predicate_fn"]], "brain_pipe.utils.list": [[117, "module-brain_pipe.utils.list"]], "flatten() (in module brain_pipe.utils.list)": [[118, "brain_pipe.utils.list.flatten"]], "brain_pipe.utils.log": [[119, "module-brain_pipe.utils.log"]], "colorformatter (class in brain_pipe.utils.log)": [[120, "brain_pipe.utils.log.ColorFormatter"]], "__init__() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.__init__"]], "converter() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.converter"]], "format() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.format"]], "formatexception() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.formatException"]], "formatstack() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.formatStack"]], "formattime() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.formatTime"]], "usestime() (colorformatter method)": [[120, "brain_pipe.utils.log.ColorFormatter.usesTime"]], "defaultformatter (class in brain_pipe.utils.log)": [[121, "brain_pipe.utils.log.DefaultFormatter"]], "__init__() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.__init__"]], "converter() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.converter"]], "format() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.format"]], "formatexception() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.formatException"]], "formatstack() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.formatStack"]], "formattime() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.formatTime"]], "usestime() (defaultformatter method)": [[121, "brain_pipe.utils.log.DefaultFormatter.usesTime"]], "default_logging() (in module brain_pipe.utils.log)": [[122, "brain_pipe.utils.log.default_logging"]], "brain_pipe.utils.multiprocess": [[123, "module-brain_pipe.utils.multiprocess"]], "multiprocessingsingleton (class in brain_pipe.utils.multiprocess)": [[124, "brain_pipe.utils.multiprocess.MultiprocessingSingleton"]], "__init__() (multiprocessingsingleton method)": [[124, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.__init__"]], "clean() (multiprocessingsingleton class method)": [[124, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.clean"]], "get_map_fn() (multiprocessingsingleton class method)": [[124, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.get_map_fn"]], "simplecallbackfn (class in brain_pipe.utils.multiprocess)": [[125, "brain_pipe.utils.multiprocess.SimpleCallbackFn"]], "__init__() (simplecallbackfn method)": [[125, "brain_pipe.utils.multiprocess.SimpleCallbackFn.__init__"]], "brain_pipe.utils.path": [[126, "module-brain_pipe.utils.path"]], "bidspathgenerator (class in brain_pipe.utils.path)": [[127, "brain_pipe.utils.path.BIDSPathGenerator"]], "__init__() (bidspathgenerator method)": [[127, "brain_pipe.utils.path.BIDSPathGenerator.__init__"]], "select_paths() (bidspathgenerator method)": [[127, "brain_pipe.utils.path.BIDSPathGenerator.select_paths"]], "bidsstimulusgrouper (class in brain_pipe.utils.path)": [[128, "brain_pipe.utils.path.BIDSStimulusGrouper"]], "__init__() (bidsstimulusgrouper method)": [[128, "brain_pipe.utils.path.BIDSStimulusGrouper.__init__"]], "brain_pipe.utils.serialization": [[129, "module-brain_pipe.utils.serialization"]], "pickle_dump_wrapper() (in module brain_pipe.utils.serialization)": [[130, "brain_pipe.utils.serialization.pickle_dump_wrapper"]], "pickle_load_wrapper() (in module brain_pipe.utils.serialization)": [[131, "brain_pipe.utils.serialization.pickle_load_wrapper"]]}})