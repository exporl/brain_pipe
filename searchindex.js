Search.setIndex({"docnames": ["api/_autosummary/brain_pipe", "api/_autosummary/brain_pipe.cli", "api/_autosummary/brain_pipe.cli.base", "api/_autosummary/brain_pipe.cli.base.CLI", "api/_autosummary/brain_pipe.cli.cli_entrypoint", "api/_autosummary/brain_pipe.cli.cli_factory", "api/_autosummary/brain_pipe.cli.default", "api/_autosummary/brain_pipe.cli.default.DefaultCLI", "api/_autosummary/brain_pipe.dataloaders", "api/_autosummary/brain_pipe.dataloaders.base", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader", "api/_autosummary/brain_pipe.dataloaders.path", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader", "api/_autosummary/brain_pipe.parser", "api/_autosummary/brain_pipe.parser.base", "api/_autosummary/brain_pipe.parser.base.Parser", "api/_autosummary/brain_pipe.parser.file", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin", "api/_autosummary/brain_pipe.parser.file.FileParser", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser", "api/_autosummary/brain_pipe.parser.simple_dict", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser", "api/_autosummary/brain_pipe.parser.template_text", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser", "api/_autosummary/brain_pipe.parser.text", "api/_autosummary/brain_pipe.parser.text.TextParser", "api/_autosummary/brain_pipe.parser.yaml", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser", "api/_autosummary/brain_pipe.pipeline", "api/_autosummary/brain_pipe.pipeline.base", "api/_autosummary/brain_pipe.pipeline.base.Pipeline", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep", "api/_autosummary/brain_pipe.pipeline.cache", "api/_autosummary/brain_pipe.pipeline.cache.base", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.default", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache", "api/_autosummary/brain_pipe.pipeline.cache.pipeline", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "api/_autosummary/brain_pipe.pipeline.default", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn", "api/_autosummary/brain_pipe.pipeline.wrapper", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper", "api/_autosummary/brain_pipe.preprocessing", "api/_autosummary/brain_pipe.preprocessing.brain", "api/_autosummary/brain_pipe.preprocessing.brain.artifact", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "api/_autosummary/brain_pipe.preprocessing.brain.eeg", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "api/_autosummary/brain_pipe.preprocessing.brain.epochs", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs", "api/_autosummary/brain_pipe.preprocessing.brain.link", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "api/_autosummary/brain_pipe.preprocessing.brain.load", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader", "api/_autosummary/brain_pipe.preprocessing.brain.rereference", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "api/_autosummary/brain_pipe.preprocessing.brain.trigger", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction", "api/_autosummary/brain_pipe.preprocessing.filter", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt", "api/_autosummary/brain_pipe.preprocessing.resample", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly", "api/_autosummary/brain_pipe.preprocessing.stimulus", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram", "api/_autosummary/brain_pipe.preprocessing.stimulus.load", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli", "api/_autosummary/brain_pipe.preprocessing.transpose", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose", "api/_autosummary/brain_pipe.runner", "api/_autosummary/brain_pipe.runner.base", "api/_autosummary/brain_pipe.runner.base.Runner", "api/_autosummary/brain_pipe.runner.default", "api/_autosummary/brain_pipe.runner.default.DefaultRunner", "api/_autosummary/brain_pipe.save", "api/_autosummary/brain_pipe.save.base", "api/_autosummary/brain_pipe.save.base.Save", "api/_autosummary/brain_pipe.save.default", "api/_autosummary/brain_pipe.save.default.AttachSave", "api/_autosummary/brain_pipe.save.default.CheckFunctor", "api/_autosummary/brain_pipe.save.default.DefaultFilenameFn", "api/_autosummary/brain_pipe.save.default.DefaultSave", "api/_autosummary/brain_pipe.save.default.DefaultSaveMetadata", "api/_autosummary/brain_pipe.save.default.IsDoneCheck", "api/_autosummary/brain_pipe.save.default.IsReloadableCheck", "api/_autosummary/brain_pipe.save.default.OldMetadataCompliant", "api/_autosummary/brain_pipe.save.default.SaveMetadata", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn", "api/_autosummary/brain_pipe.split", "api/_autosummary/brain_pipe.split.base", "api/_autosummary/brain_pipe.split.base.Splitter", "api/_autosummary/brain_pipe.split.mid", "api/_autosummary/brain_pipe.split.mid.MidSplit", "api/_autosummary/brain_pipe.split.operations", "api/_autosummary/brain_pipe.split.operations.base", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation", "api/_autosummary/brain_pipe.split.operations.normalize", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize", "api/_autosummary/brain_pipe.split.sequential", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit", "api/_autosummary/brain_pipe.utils", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig", "api/_autosummary/brain_pipe.utils.find", "api/_autosummary/brain_pipe.utils.find.Finder", "api/_autosummary/brain_pipe.utils.list", "api/_autosummary/brain_pipe.utils.list.flatten", "api/_autosummary/brain_pipe.utils.list.wrap_in_list", "api/_autosummary/brain_pipe.utils.log", "api/_autosummary/brain_pipe.utils.log.ColorFormatter", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter", "api/_autosummary/brain_pipe.utils.log.default_logging", "api/_autosummary/brain_pipe.utils.multiprocess", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton", "api/_autosummary/brain_pipe.utils.multiprocess.ProgressCallbackFn", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn", "api/_autosummary/brain_pipe.utils.path", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper", "api/_autosummary/brain_pipe.utils.serialization", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper", "api/api", "api/full_tree", "cli", "configuration", "index", "pipeline"], "filenames": ["api/_autosummary/brain_pipe.rst", "api/_autosummary/brain_pipe.cli.rst", "api/_autosummary/brain_pipe.cli.base.rst", "api/_autosummary/brain_pipe.cli.base.CLI.rst", "api/_autosummary/brain_pipe.cli.cli_entrypoint.rst", "api/_autosummary/brain_pipe.cli.cli_factory.rst", "api/_autosummary/brain_pipe.cli.default.rst", "api/_autosummary/brain_pipe.cli.default.DefaultCLI.rst", "api/_autosummary/brain_pipe.dataloaders.rst", "api/_autosummary/brain_pipe.dataloaders.base.rst", "api/_autosummary/brain_pipe.dataloaders.base.DataLoader.rst", "api/_autosummary/brain_pipe.dataloaders.path.rst", "api/_autosummary/brain_pipe.dataloaders.path.GlobLoader.rst", "api/_autosummary/brain_pipe.parser.rst", "api/_autosummary/brain_pipe.parser.base.rst", "api/_autosummary/brain_pipe.parser.base.Parser.rst", "api/_autosummary/brain_pipe.parser.file.rst", "api/_autosummary/brain_pipe.parser.file.FileLoadMixin.rst", "api/_autosummary/brain_pipe.parser.file.FileParser.rst", "api/_autosummary/brain_pipe.parser.file.TemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.simple_dict.rst", "api/_autosummary/brain_pipe.parser.simple_dict.SimpleDictParser.rst", "api/_autosummary/brain_pipe.parser.template_text.rst", "api/_autosummary/brain_pipe.parser.template_text.TemplateTextParser.rst", "api/_autosummary/brain_pipe.parser.text.rst", "api/_autosummary/brain_pipe.parser.text.TextParser.rst", "api/_autosummary/brain_pipe.parser.yaml.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLMixin.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTemplateFileParser.rst", "api/_autosummary/brain_pipe.parser.yaml.YAMLTextParser.rst", "api/_autosummary/brain_pipe.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.rst", "api/_autosummary/brain_pipe.pipeline.base.Pipeline.rst", "api/_autosummary/brain_pipe.pipeline.base.PipelineStep.rst", "api/_autosummary/brain_pipe.pipeline.cache.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.rst", "api/_autosummary/brain_pipe.pipeline.cache.base.PipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.rst", "api/_autosummary/brain_pipe.pipeline.cache.default.DefaultPipelineCache.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.rst", "api/_autosummary/brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.rst", "api/_autosummary/brain_pipe.pipeline.default.DefaultPipeline.rst", "api/_autosummary/brain_pipe.pipeline.default.default_error_handler_fn.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.rst", "api/_autosummary/brain_pipe.pipeline.wrapper.Wrapper.rst", "api/_autosummary/brain_pipe.preprocessing.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.rst", "api/_autosummary/brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.epochs.SplitEpochs.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.BasenameComparisonFn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.rst", "api/_autosummary/brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.rst", "api/_autosummary/brain_pipe.preprocessing.brain.load.MNELoader.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.rst", "api/_autosummary/brain_pipe.preprocessing.brain.trigger.default_drift_correction.rst", "api/_autosummary/brain_pipe.preprocessing.filter.rst", "api/_autosummary/brain_pipe.preprocessing.filter.SosFiltFilt.rst", "api/_autosummary/brain_pipe.preprocessing.resample.rst", "api/_autosummary/brain_pipe.preprocessing.resample.ResamplePoly.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.rst", "api/_autosummary/brain_pipe.preprocessing.stimulus.load.LoadStimuli.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.rst", "api/_autosummary/brain_pipe.preprocessing.transpose.Transpose.rst", "api/_autosummary/brain_pipe.runner.rst", "api/_autosummary/brain_pipe.runner.base.rst", "api/_autosummary/brain_pipe.runner.base.Runner.rst", "api/_autosummary/brain_pipe.runner.default.rst", "api/_autosummary/brain_pipe.runner.default.DefaultRunner.rst", "api/_autosummary/brain_pipe.save.rst", "api/_autosummary/brain_pipe.save.base.rst", "api/_autosummary/brain_pipe.save.base.Save.rst", "api/_autosummary/brain_pipe.save.default.rst", "api/_autosummary/brain_pipe.save.default.AttachSave.rst", "api/_autosummary/brain_pipe.save.default.CheckFunctor.rst", "api/_autosummary/brain_pipe.save.default.DefaultFilenameFn.rst", "api/_autosummary/brain_pipe.save.default.DefaultSave.rst", "api/_autosummary/brain_pipe.save.default.DefaultSaveMetadata.rst", "api/_autosummary/brain_pipe.save.default.IsDoneCheck.rst", "api/_autosummary/brain_pipe.save.default.IsReloadableCheck.rst", "api/_autosummary/brain_pipe.save.default.OldMetadataCompliant.rst", "api/_autosummary/brain_pipe.save.default.SaveMetadata.rst", "api/_autosummary/brain_pipe.save.default.default_metadata_key_fn.rst", "api/_autosummary/brain_pipe.split.rst", "api/_autosummary/brain_pipe.split.base.rst", "api/_autosummary/brain_pipe.split.base.Splitter.rst", "api/_autosummary/brain_pipe.split.mid.rst", "api/_autosummary/brain_pipe.split.mid.MidSplit.rst", "api/_autosummary/brain_pipe.split.operations.rst", "api/_autosummary/brain_pipe.split.operations.base.rst", "api/_autosummary/brain_pipe.split.operations.base.SplitterOperation.rst", "api/_autosummary/brain_pipe.split.operations.normalize.rst", "api/_autosummary/brain_pipe.split.operations.normalize.Standardize.rst", "api/_autosummary/brain_pipe.split.sequential.rst", "api/_autosummary/brain_pipe.split.sequential.SequentialSplit.rst", "api/_autosummary/brain_pipe.utils.rst", "api/_autosummary/brain_pipe.utils.ObjectsWithConfig.rst", "api/_autosummary/brain_pipe.utils.find.rst", "api/_autosummary/brain_pipe.utils.find.Finder.rst", "api/_autosummary/brain_pipe.utils.list.rst", "api/_autosummary/brain_pipe.utils.list.flatten.rst", "api/_autosummary/brain_pipe.utils.list.wrap_in_list.rst", "api/_autosummary/brain_pipe.utils.log.rst", "api/_autosummary/brain_pipe.utils.log.ColorFormatter.rst", "api/_autosummary/brain_pipe.utils.log.DefaultFormatter.rst", "api/_autosummary/brain_pipe.utils.log.default_logging.rst", "api/_autosummary/brain_pipe.utils.multiprocess.rst", "api/_autosummary/brain_pipe.utils.multiprocess.MultiprocessingSingleton.rst", "api/_autosummary/brain_pipe.utils.multiprocess.ProgressCallbackFn.rst", "api/_autosummary/brain_pipe.utils.multiprocess.SimpleCallbackFn.rst", "api/_autosummary/brain_pipe.utils.path.rst", "api/_autosummary/brain_pipe.utils.path.BIDSPathGenerator.rst", "api/_autosummary/brain_pipe.utils.path.BIDSStimulusGrouper.rst", "api/_autosummary/brain_pipe.utils.serialization.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_dump_wrapper.rst", "api/_autosummary/brain_pipe.utils.serialization.pickle_load_wrapper.rst", "api/api.rst", "api/full_tree.rst", "cli.rst", "configuration.rst", "index.rst", "pipeline.rst"], "titles": ["brain_pipe", "brain_pipe.cli", "brain_pipe.cli.base", "brain_pipe.cli.base.CLI", "brain_pipe.cli.cli_entrypoint", "brain_pipe.cli.cli_factory", "brain_pipe.cli.default", "brain_pipe.cli.default.DefaultCLI", "brain_pipe.dataloaders", "brain_pipe.dataloaders.base", "brain_pipe.dataloaders.base.DataLoader", "brain_pipe.dataloaders.path", "brain_pipe.dataloaders.path.GlobLoader", "brain_pipe.parser", "brain_pipe.parser.base", "brain_pipe.parser.base.Parser", "brain_pipe.parser.file", "brain_pipe.parser.file.FileLoadMixin", "brain_pipe.parser.file.FileParser", "brain_pipe.parser.file.TemplateFileParser", "brain_pipe.parser.simple_dict", "brain_pipe.parser.simple_dict.SimpleDictParser", "brain_pipe.parser.template_text", "brain_pipe.parser.template_text.TemplateTextParser", "brain_pipe.parser.text", "brain_pipe.parser.text.TextParser", "brain_pipe.parser.yaml", "brain_pipe.parser.yaml.YAMLFileParser", "brain_pipe.parser.yaml.YAMLMixin", "brain_pipe.parser.yaml.YAMLTemplateFileParser", "brain_pipe.parser.yaml.YAMLTextParser", "brain_pipe.pipeline", "brain_pipe.pipeline.base", "brain_pipe.pipeline.base.Pipeline", "brain_pipe.pipeline.base.PipelineStep", "brain_pipe.pipeline.cache", "brain_pipe.pipeline.cache.base", "brain_pipe.pipeline.cache.base.PipelineCache", "brain_pipe.pipeline.cache.default", "brain_pipe.pipeline.cache.default.DefaultPipelineCache", "brain_pipe.pipeline.cache.pipeline", "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline", "brain_pipe.pipeline.default", "brain_pipe.pipeline.default.DefaultPipeline", "brain_pipe.pipeline.default.default_error_handler_fn", "brain_pipe.pipeline.wrapper", "brain_pipe.pipeline.wrapper.Wrapper", "brain_pipe.preprocessing", "brain_pipe.preprocessing.brain", "brain_pipe.preprocessing.brain.artifact", "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF", "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts", "brain_pipe.preprocessing.brain.eeg", "brain_pipe.preprocessing.brain.eeg.biosemi", "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn", "brain_pipe.preprocessing.brain.eeg.load", "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy", "brain_pipe.preprocessing.brain.epochs", "brain_pipe.preprocessing.brain.epochs.SplitEpochs", "brain_pipe.preprocessing.brain.link", "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor", "brain_pipe.preprocessing.brain.link.BasenameComparisonFn", "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse", "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn", "brain_pipe.preprocessing.brain.load", "brain_pipe.preprocessing.brain.load.MNELoader", "brain_pipe.preprocessing.brain.rereference", "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference", "brain_pipe.preprocessing.brain.trigger", "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers", "brain_pipe.preprocessing.brain.trigger.default_drift_correction", "brain_pipe.preprocessing.filter", "brain_pipe.preprocessing.filter.SosFiltFilt", "brain_pipe.preprocessing.resample", "brain_pipe.preprocessing.resample.ResamplePoly", "brain_pipe.preprocessing.stimulus", "brain_pipe.preprocessing.stimulus.audio", "brain_pipe.preprocessing.stimulus.audio.envelope", "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone", "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope", "brain_pipe.preprocessing.stimulus.audio.spectrogram", "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram", "brain_pipe.preprocessing.stimulus.load", "brain_pipe.preprocessing.stimulus.load.LoadStimuli", "brain_pipe.preprocessing.transpose", "brain_pipe.preprocessing.transpose.Transpose", "brain_pipe.runner", "brain_pipe.runner.base", "brain_pipe.runner.base.Runner", "brain_pipe.runner.default", "brain_pipe.runner.default.DefaultRunner", "brain_pipe.save", "brain_pipe.save.base", "brain_pipe.save.base.Save", "brain_pipe.save.default", "brain_pipe.save.default.AttachSave", "brain_pipe.save.default.CheckFunctor", "brain_pipe.save.default.DefaultFilenameFn", "brain_pipe.save.default.DefaultSave", "brain_pipe.save.default.DefaultSaveMetadata", "brain_pipe.save.default.IsDoneCheck", "brain_pipe.save.default.IsReloadableCheck", "brain_pipe.save.default.OldMetadataCompliant", "brain_pipe.save.default.SaveMetadata", "brain_pipe.save.default.default_metadata_key_fn", "brain_pipe.split", "brain_pipe.split.base", "brain_pipe.split.base.Splitter", "brain_pipe.split.mid", "brain_pipe.split.mid.MidSplit", "brain_pipe.split.operations", "brain_pipe.split.operations.base", "brain_pipe.split.operations.base.SplitterOperation", "brain_pipe.split.operations.normalize", "brain_pipe.split.operations.normalize.Standardize", "brain_pipe.split.sequential", "brain_pipe.split.sequential.SequentialSplit", "brain_pipe.utils", "brain_pipe.utils.ObjectsWithConfig", "brain_pipe.utils.find", "brain_pipe.utils.find.Finder", "brain_pipe.utils.list", "brain_pipe.utils.list.flatten", "brain_pipe.utils.list.wrap_in_list", "brain_pipe.utils.log", "brain_pipe.utils.log.ColorFormatter", "brain_pipe.utils.log.DefaultFormatter", "brain_pipe.utils.log.default_logging", "brain_pipe.utils.multiprocess", "brain_pipe.utils.multiprocess.MultiprocessingSingleton", "brain_pipe.utils.multiprocess.ProgressCallbackFn", "brain_pipe.utils.multiprocess.SimpleCallbackFn", "brain_pipe.utils.path", "brain_pipe.utils.path.BIDSPathGenerator", "brain_pipe.utils.path.BIDSStimulusGrouper", "brain_pipe.utils.serialization", "brain_pipe.utils.serialization.pickle_dump_wrapper", "brain_pipe.utils.serialization.pickle_load_wrapper", "API Reference", "Full Tree", "Command Line Interface", "Defining and running Pipelines through configuration files", "Welcome to Brain Pipe\u2019s documentation!", "Overview"], "terms": {"numpi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "ndarrai": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "type": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "sequenc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "union": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "option": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 143], "callabl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 141], "tupl": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 141], "list": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 143], "dict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143], "set": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "collect": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "abc": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "iter": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "ordereddict": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "parser": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140], "base": [0, 1, 5, 6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 143], "preprocess": [0, 7, 8, 32, 33, 34, 40, 41, 43, 45, 46, 140, 142, 143], "bid": [0, 60, 132, 133, 134, 142, 143], "data": [0, 7, 8, 9, 10, 11, 12, 33, 34, 37, 39, 41, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 81, 83, 84, 85, 91, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 125, 126, 140, 141, 143], "modul": [0, 1, 8, 13, 31, 35, 36, 42, 47, 48, 52, 75, 76, 86, 91, 105, 110, 117, 120, 141, 143], "defin": [1, 18, 21, 25, 27, 30, 31, 98, 140, 142, 143], "command": [1, 2, 3, 4, 5, 7, 141, 142], "line": [1, 2, 3, 4, 5, 7, 141, 142], "interfac": [1, 2, 3, 4, 7, 141, 142], "function": [1, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 35, 37, 39, 42, 43, 45, 46, 48, 52, 53, 59, 62, 68, 69, 70, 75, 76, 78, 81, 83, 94, 97, 98, 99, 103, 105, 120, 121, 124, 125, 126, 129, 130, 131, 135, 143], "abstract": [2, 3, 18, 19, 23, 25, 37, 93, 102, 103, 107, 112, 118], "class": [2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 141], "__init__": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 112, 114, 116, 118, 120, 125, 126, 129, 130, 131, 133, 134, 139], "method": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 112, 114, 116, 118, 120, 125, 126, 129, 130, 131, 133, 134, 143], "get_pars": [3, 7, 139], "cli_info": [3, 7], "str": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 85, 90, 93, 96, 97, 98, 99, 102, 103, 104, 107, 109, 116, 120, 125, 126, 127, 129, 133, 134, 136, 137], "ani": [3, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 34, 37, 39, 41, 43, 44, 45, 46, 58, 60, 61, 62, 63, 65, 67, 72, 74, 81, 83, 85, 88, 90, 93, 96, 97, 98, 99, 102, 103, 104, 107, 109, 116, 120, 122, 123, 125, 126, 127, 136, 137, 141, 143], "find": [3, 7, 8, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 78, 139, 143], "an": [3, 7, 10, 33, 34, 41, 43, 46, 50, 51, 56, 58, 60, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116, 123, 125, 126, 142, 143], "appropri": [3, 7, 141], "inform": [3, 7, 14, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 39, 60, 98, 120, 125, 126, 140, 142, 143], "paramet": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 114, 116, 118, 120, 122, 123, 125, 126, 127, 129, 133, 134, 136, 137], "The": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 42, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 116, 118, 120, 125, 126, 127, 133, 134, 136, 137, 141, 142], "pars": [3, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116, 141], "argument": [3, 5, 7, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 37, 46, 65, 72, 78, 81, 83, 93, 109, 125, 126, 127, 140, 141], "return": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 60, 61, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 88, 90, 93, 98, 99, 102, 103, 104, 107, 109, 116, 120, 122, 123, 125, 126, 127, 129, 133, 137, 143], "A": [3, 5, 7, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 88, 90, 93, 98, 99, 107, 109, 116, 120, 122, 123, 133, 134, 141, 143], "can": [3, 5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 91, 93, 95, 96, 98, 100, 101, 107, 109, 111, 112, 116, 118, 125, 126, 140, 141, 142, 143], "us": [3, 5, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 41, 43, 45, 46, 50, 51, 56, 58, 62, 63, 65, 67, 69, 70, 72, 74, 78, 79, 81, 83, 85, 87, 88, 93, 95, 96, 97, 98, 99, 100, 101, 103, 107, 109, 116, 125, 126, 129, 131, 140, 141, 142, 143], "creat": [3, 5, 7, 19, 23, 29, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 67, 69, 72, 74, 78, 83, 85, 90, 93, 95, 96, 97, 98, 99, 100, 101, 103, 107, 109, 114, 116, 120, 125, 126, 129, 130, 131, 133, 134, 142, 143], "pipelin": [3, 5, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 62, 68, 87, 88, 90, 93, 98, 139, 140, 142, 143], "runner": [3, 7, 14, 15, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 139, 141, 143], "get_run_opt": [3, 7, 139], "extract": [3, 7, 39, 60, 109], "dataload": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 87, 88, 90, 139, 141, 143], "contain": [3, 7, 15, 17, 18, 19, 20, 21, 23, 25, 27, 29, 30, 37, 39, 41, 42, 44, 60, 62, 74, 81, 88, 90, 93, 98, 99, 102, 103, 104, 120, 123, 140, 142], "its": [3, 7, 15, 18, 19, 21, 23, 25, 27, 29, 30, 78, 88, 90, 112, 141, 143], "parse_cli_argu": [3, 7, 139], "arg": [3, 7, 15, 18, 21, 25, 27, 30, 33, 43, 50, 51, 58, 62, 67, 93, 109, 125, 126], "none": [3, 5, 7, 37, 39, 41, 43, 46, 56, 61, 62, 67, 78, 81, 83, 88, 90, 95, 96, 98, 99, 100, 101, 103, 107, 116, 120, 125, 126, 129, 130, 131, 133, 140], "receiv": [3, 7, 143], "from": [3, 7, 9, 10, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 41, 43, 54, 55, 56, 60, 63, 82, 83, 85, 98, 99, 102, 103, 107, 109, 116, 120, 125, 126, 134, 137, 140, 143], "If": [3, 5, 7, 33, 34, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 99, 107, 109, 116, 120, 123, 125, 126, 129, 140, 141, 143], "should": [3, 7, 10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 51, 69, 78, 83, 98, 109, 120, 125, 126, 134, 141, 143], "sy": [3, 7], "argv": [3, 7], "directli": [3, 7], "dictionari": [3, 7, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 30, 33, 34, 37, 39, 41, 43, 44, 81, 83, 90, 99, 118, 120, 125, 126, 134, 141], "parse_cli_arguments_for_pars": [3, 7, 139], "run": [3, 4, 7, 41, 43, 44, 87, 88, 90, 133, 134, 139, 140, 143], "data_dict": [3, 7, 12, 34, 37, 39, 41, 43, 44, 46, 50, 51, 58, 63, 81, 93, 97, 98, 99, 102, 103, 104], "result": [3, 7, 36, 88, 90, 125, 126, 143], "cli_nam": 5, "object": [5, 15, 17, 18, 19, 21, 23, 25, 27, 28, 29, 30, 43, 50, 51, 60, 61, 62, 78, 95, 96, 98, 99, 100, 101, 103, 118, 120, 123, 129, 133, 134, 136, 137, 141, 143], "name": [5, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 99, 103, 107, 109, 116, 120, 133, 134, 140, 141], "rais": [5, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116], "valueerror": 5, "i": [5, 10, 12, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 54, 56, 58, 61, 62, 63, 65, 67, 68, 69, 70, 72, 74, 78, 79, 81, 83, 85, 93, 98, 99, 101, 102, 103, 107, 109, 116, 123, 125, 126, 131, 133, 140, 141, 142, 143], "found": [5, 50, 56, 120, 140, 141], "attribut": [7, 17, 18, 19, 21, 23, 25, 27, 29, 30, 41, 43, 62, 78, 83, 97, 98, 99, 103, 125, 126, 129], "add_arguments_to_argpars": [7, 139], "argpars": 7, "argumentpars": 7, "add": [7, 43, 56, 99, 103, 139, 143], "ad": [7, 10, 12, 39, 129], "get_argpars": [7, 139], "descript": [7, 120], "brain": [7, 139, 140, 143], "imag": [7, 64, 65, 140, 142, 143], "load": [7, 9, 10, 11, 12, 17, 18, 19, 27, 29, 37, 39, 62, 99, 120, 137, 139, 141, 143], "code": [8, 47, 50, 57, 64, 68, 77, 80, 81, 82, 106, 141, 142, 143], "sourc": [9, 10, 78, 139, 143], "has_length": [10, 12], "true": [10, 12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116], "ar": [10, 33, 34, 41, 43, 50, 56, 62, 65, 70, 78, 81, 98, 120, 122, 125, 126, 133, 134, 140, 141, 142, 143], "e": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 70, 78, 140, 142, 143], "g": [10, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 78, 140, 143], "file": [10, 12, 26, 27, 29, 37, 39, 41, 55, 60, 65, 81, 83, 93, 98, 99, 134, 139, 140, 142, 143], "over": [10, 41, 43], "therefor": 10, "thei": [10, 43, 78], "have": [10, 37, 72, 78, 141, 143], "__iter__": [10, 143], "implement": [10, 38, 39, 40, 41, 43, 50, 99, 125, 126, 143], "subclass": [10, 120, 141, 143], "initi": [10, 12, 18, 21, 25, 27, 30, 33, 34, 78, 79, 88, 95, 96, 99, 100, 101, 103, 112, 142, 143], "compute_length": [10, 12, 139], "comput": [10, 12, 50, 78, 125, 126], "length": [10, 12, 70, 78, 107, 109, 116], "int": [10, 12, 18, 19, 23, 25, 37, 39, 41, 43, 50, 51, 56, 67, 69, 70, 74, 79, 90, 107, 109, 114, 116, 129], "note": [10, 12, 18, 21, 25, 27, 30, 41, 43, 72, 74, 78], "thi": [10, 12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 41, 43, 44, 50, 56, 62, 63, 68, 70, 78, 81, 93, 98, 99, 109, 125, 126, 140, 141, 142, 143], "__len__": [10, 12], "you": [10, 12, 34, 78, 125, 126, 140, 141, 142, 143], "overrid": [10, 12, 39], "func": [10, 12, 78], "simpl": [11, 12, 18, 19, 23, 25, 131, 143], "glob": [11, 12], "pattern": [11, 12], "glob_pattern": 12, "filter_fn": [12, 120, 139], "glob_fn": 12, "iglob": 12, "kei": [12, 15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 37, 39, 41, 43, 46, 50, 51, 56, 58, 60, 61, 62, 63, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 97, 98, 99, 103, 104, 107, 109, 116, 120, 141], "chain": 12, "built": 12, "all": [12, 18, 19, 21, 23, 25, 27, 29, 30, 34, 37, 39, 49, 56, 67, 92, 93, 120, 125, 126, 129, 133, 140, 141, 143], "bool": [12, 33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 96, 98, 99, 103, 107, 109, 116, 120], "includ": [12, 97, 120], "filter": [12, 50, 74, 78, 120, 139, 143], "path_to_data_dict": [12, 139], "convert": [12, 14, 15, 78, 99, 102, 125, 126, 139, 141], "loader": [14, 15, 18, 19, 21, 23, 25, 27, 29, 30], "get_additional_kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 139], "input_": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30], "info": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 56], "addit": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 81, 83, 93, 125, 126, 127, 141], "pass": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 41, 43, 46, 65, 72, 78, 81, 83, 109, 125, 126, 127, 141, 143], "identifi": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 129], "cli": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 139, 141], "input": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116, 125, 126, 140, 141, 143], "avail": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 56, 129], "determin": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 51, 125, 126, 140], "kwarg": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 33, 43, 50, 51, 58, 62, 67, 79, 81, 83, 85, 93, 109, 125, 126, 127], "valu": [15, 17, 18, 19, 21, 23, 25, 27, 29, 30, 37, 41, 43, 65, 78, 83, 125, 126, 134, 141], "link_loader_to_pipelin": [15, 18, 19, 21, 23, 25, 27, 29, 30, 139], "pair": [15, 18, 19, 21, 23, 25, 27, 29, 30, 83], "correspond": [15, 18, 19, 21, 23, 25, 27, 29, 30, 62, 72, 88, 90, 98, 120], "map": [15, 18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116, 129, 134], "between": [15, 18, 19, 21, 23, 25, 27, 29, 30, 70, 83, 97, 98, 143], "set_additional_kwarg": [15, 18, 19, 21, 23, 25, 27, 29, 30, 139], "textdictpars": 16, "instead": [16, 18, 19, 25, 125, 126, 141], "mixin": [17, 28, 95, 102], "textpars": [17, 18, 23, 28, 30, 139, 141], "befor": [17, 34, 125, 126, 143], "string": [17, 18, 19, 23, 27, 29, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116, 125, 126, 133, 141], "when": [17, 18, 19, 23, 27, 29, 43, 70, 81, 93, 97, 98, 103, 110, 111, 112, 125, 126, 133, 140, 141, 143], "call": [17, 18, 19, 21, 23, 25, 27, 29, 30, 34, 46, 78, 125, 126, 143], "load_fil": [17, 18, 19, 27, 29, 139], "path": [17, 18, 19, 27, 29, 37, 39, 56, 60, 61, 62, 65, 82, 83, 97, 99, 103, 120, 136, 137, 139, 140, 141], "text": [17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 125, 126, 139, 141], "wa": [17, 18, 19, 27, 29, 41, 43, 50, 81, 93], "fileloadmixin": [18, 19, 139], "apply_config": [18, 19, 21, 23, 25, 27, 29, 30, 118, 139], "config": [18, 19, 21, 23, 25, 27, 29, 30, 90, 118, 141], "appli": [18, 19, 21, 23, 25, 27, 29, 30, 33, 34, 41, 43, 50, 56, 111, 112, 118], "configur": [18, 19, 21, 23, 25, 27, 29, 30, 90, 118, 125, 126, 127, 140, 142, 143], "get_runner_from_parsed_config": [18, 19, 21, 23, 25, 27, 29, 30, 139], "parsed_config": [18, 19, 21, 23, 25, 27, 29, 30], "construct": [18, 19, 21, 23, 25, 27, 29, 30, 99, 143], "alreadi": [18, 19, 21, 23, 25, 27, 29, 30, 93, 98, 100, 101, 123, 129, 143], "parse_al": [18, 19, 21, 23, 25, 27, 29, 30, 139], "all_info": [18, 19, 21, 23, 25, 27, 29, 30], "parse_text_to_dict": [18, 19, 23, 25, 27, 28, 29, 30, 139], "builtin": [18, 19, 23, 25], "recursive_pars": [18, 19, 21, 23, 25, 27, 29, 30, 139], "text_dict": [18, 19, 21, 23, 25, 27, 29, 30], "intern": [18, 21, 25, 27, 30, 68], "so": [18, 21, 25, 27, 30, 61, 143], "also": [18, 21, 25, 27, 30, 33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116, 122, 140, 141, 142, 143], "specifi": [18, 21, 25, 27, 30, 78, 125, 126, 140], "itself": [18, 21, 25, 27, 30], "under": [18, 21, 25, 27, 30, 141], "templatetextpars": [19, 29, 139, 141], "new": [19, 23, 29, 39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 74, 93, 95, 96, 97, 99, 100, 101, 103, 125, 126, 130, 131, 133, 134, 143], "onli": [20, 21, 62, 98, 120, 133, 140, 141, 142, 143], "objectswithconfig": [21, 139], "templat": [22, 23, 29, 33, 141], "sting": [22, 23], "jinja2": [23, 141], "fill": [23, 141], "render": 23, "simpledictpars": [25, 139], "yamlmixin": [27, 29, 30, 139], "filepars": [27, 139, 141], "templatefilepars": [29, 139, 141], "packag": [31, 68, 89, 90, 119, 120, 125, 126, 140, 142, 143], "pipelinestep": [31, 33, 37, 39, 41, 43, 46, 50, 51, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 107, 139], "step": [32, 33, 34, 37, 39, 41, 43, 45, 46, 56, 71, 83, 91, 92, 93, 98, 125, 126, 143], "repres": 33, "order": [33, 43, 58, 72, 78], "output": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116, 143], "one": [33, 60, 78, 143], "next": [33, 41, 107, 109, 116, 143], "overview": [33, 34, 43, 142], "default": [33, 40, 41, 50, 51, 61, 83, 125, 126, 127, 139, 140, 141, 143], "defaultpiplein": 33, "keyword": [33, 46, 65, 72, 81, 83, 93, 109, 125, 126, 127, 141], "parse_dict_kei": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116, 139], "require_ordered_dict": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116], "fals": [33, 34, 41, 43, 46, 50, 51, 56, 58, 61, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 99, 107, 109, 116, 120], "error": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 78, 79, 81, 83, 85, 93, 98, 107, 109, 116, 143], "messag": [33, 34, 41, 43, 44, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116, 125, 126, 140], "must": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116], "ordinari": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116], "typeerror": [33, 34, 41, 43, 46, 50, 51, 56, 58, 62, 65, 67, 69, 72, 74, 79, 81, 83, 85, 93, 98, 107, 109, 116], "copy_data_dict": [34, 46, 56, 65, 72, 74], "preprocessingstep": [34, 37, 43, 83], "build": 34, "block": [34, 69, 142], "repositori": [34, 142], "In": [34, 37, 78, 141, 143], "essenc": 34, "functor": [34, 96, 98, 143], "like": [34, 125, 126, 141, 143], "take": [34, 62, 81, 83, 98, 115, 116, 143], "perform": [34, 78, 107, 110, 116], "some": [34, 78, 143], "modifi": 34, "place": 34, "copi": [34, 58], "conveni": 34, "provid": [34, 72, 78, 98, 125, 126, 140, 141, 143], "make": [34, 78, 99, 125, 126, 143], "easier": [34, 143], "write": [34, 99, 139, 140, 141], "want": [34, 78, 98, 125, 126, 141, 143], "your": [34, 140, 141, 142], "own": [34, 140, 142], "inherit": [34, 141], "anoth": [34, 63, 78, 143], "exist": [34, 37, 39, 41, 93, 98, 129, 141], "For": [34, 78, 138, 142, 143], "more": [34, 120, 140, 142, 143], "about": [34, 78, 96, 98, 143], "structur": [34, 143], "how": [34, 140, 143], "them": 34, "see": [34, 72, 78, 83, 109, 120, 138, 140, 141, 142, 143], "control": [34, 141], "whether": [34, 41, 50, 51, 61, 93, 98, 99, 103, 120], "oper": [34, 107, 116, 125, 126, 139, 143], "relat": [35, 48, 52, 53], "intermedi": [36, 37], "preprocessingpipelin": [36, 37, 42, 44], "cache_root": [37, 39], "cache_kei": [37, 39], "previous_cache_folder_kei": [37, 39], "previous_cach": [37, 39], "serializer_fn": [37, 39], "pickle_dump_wrapp": [37, 39, 139], "deserializer_fn": [37, 39], "pickle_load_wrapp": [37, 39, 139], "store": [37, 43, 60, 81, 83, 98, 143], "folder": [37, 39, 99], "locat": [37, 70, 134, 141], "previou": [37, 39, 78, 83, 143], "serial": [37, 39, 139], "certain": 37, "first": [37, 41, 43, 72, 78, 109, 140, 143], "second": [37, 72, 78, 125, 126, 143], "deseri": [37, 39], "find_existing_cache_from_data_dict": [37, 39, 139], "step_index": [37, 39, 41, 43], "being": [37, 39, 63, 141], "index": [37, 39, 41, 43, 56, 107, 109, 116], "part": [37, 39, 41, 97], "possibli": [37, 39, 142], "find_existing_cache_from_previous_filenam": [37, 39, 139], "previous_filenam": [37, 39], "get_cache_dict": [37, 39, 139], "get_existing_cache_path": [37, 39, 139], "get": [37, 39, 41, 43, 69, 99, 103, 129, 139], "get_filenam": [37, 39, 139], "filenam": [37, 39, 97, 98, 99], "get_foldernam": [37, 39, 139], "foldernam": 37, "get_path": [37, 39, 99, 139], "load_from_data_dict": [37, 39, 139], "predict_filenames_from_data_dict": [37, 39, 139], "predict": [37, 39], "possibl": [37, 39, 98, 143], "innermost": 37, "been": [37, 98, 100, 101, 143], "same": [37, 70, 125, 126, 141, 143], "time": [37, 49, 50, 78, 125, 126, 143], "predict_filenames_from_previous_filenam": [37, 39, 139], "predict_paths_from_data_dict": [37, 39, 139], "predict_paths_from_previous_filenam": [37, 39, 139], "save": [37, 39, 139, 143], "cache_folder_overrid": 39, "previous_caches_kei": 39, "filename_kei": 39, "eeg_path": 39, "stimulus_path": [39, 61, 62, 83, 97, 134], "stimuli": [39, 58, 62, 75, 76, 82, 83, 134], "trigger_path": [39, 83], "separ": [39, 83, 97, 98], "_": [39, 83, 97], "pipelinecach": [39, 41, 62, 139], "instanc": [39, 41, 46, 56, 58, 60, 61, 62, 67, 69, 72, 74, 93, 97, 125, 126, 130, 131], "root": [39, 98, 133, 134], "pipeline_cach": [41, 62], "overwrit": [41, 93, 98, 139, 143], "defaultpipelin": [41, 139, 143], "check_reload": [41, 43, 98, 139], "check": [41, 43, 50, 63, 93, 96, 98, 99, 100, 101, 103, 125, 126], "we": [41, 43, 98, 143], "reload": [41, 43, 93, 98, 101, 103, 139], "through": [41, 43, 140, 142, 143], "truncat": [41, 43], "end": [41, 43], "begin": [41, 43], "iterate_over_step": [41, 43, 139], "properti": [41, 43, 78, 98, 99], "on_error": [41, 43, 139], "One": [41, 43], "run_step": [41, 43, 139], "singl": [41, 43, 97, 143], "previous_steps_kei": 43, "previous_step": 43, "error_handler_fn": 43, "default_error_handler_fn": [43, 139], "stop": 43, "fo": 43, "logic": 43, "thread": 43, "multiprocess": [43, 63, 99, 139, 143], "safe": 43, "manner": [43, 143], "It": [43, 78, 143], "handl": [43, 44, 57, 75, 76], "occur": [43, 44], "dure": [43, 44, 63], "keep": [43, 98, 143], "histori": 43, "specif": [43, 125, 126, 143], "metadata": [43, 96, 98, 99, 102, 103, 104, 143], "except": [43, 44, 125, 126], "handler": 44, "log": [44, 139, 141], "traceback": [44, 125, 126], "function_": 46, "extra_arg": 46, "extra_kwarg": 46, "lambdapreprocessingstep": 46, "extra": [46, 65, 141], "remov": [49, 50, 51, 125, 126, 143], "techniqu": 49, "respons": [49, 50, 57, 59, 70], "assum": 49, "mne": [49, 56, 65], "layout": 49, "channel": [49, 50, 56, 67, 78], "data_kei": [50, 51, 58, 67, 69, 72, 74], "fs_kei": 50, "data_f": [50, 56, 74], "reference_channel": 50, "0": [50, 56, 67, 69, 78, 79, 81, 107, 114, 116, 129, 130, 131, 143], "1": [50, 56, 69, 81, 90, 129, 143], "2": [50, 78, 143], "32": [50, 78], "33": 50, "34": 50, "35": 50, "36": 50, "delai": 50, "3": [50, 142, 143], "eyeblink": 50, "mwf": 50, "excel": 50, "librari": [50, 143], "somer": 50, "et": 50, "al": 50, "matlab": [50, 68, 72], "here": [50, 143], "refer": [50, 67, 141], "b": 50, "francart": 50, "t": [50, 143], "bertrand": 50, "2018": 50, "gener": [50, 98, 104, 117, 133, 143], "eeg": [50, 51, 58, 62, 67, 68, 69, 81, 133, 139, 142], "algorithm": 50, "multi": 50, "wiener": 50, "j": 50, "neural": 50, "eng": 50, "15": 50, "036007": 50, "sampl": [50, 70, 74, 78, 79, 81], "frequenc": [50, 70, 73, 74, 79], "indic": [50, 56, 69, 70], "By": [50, 125, 126, 141], "frontal": 50, "biosemi64": 50, "system": [50, 54, 70, 143], "ha": [50, 78, 98, 100, 101], "taken": 50, "account": 50, "apply_mwf": [50, 139], "mwf_weight": 50, "np": [50, 54, 56, 69, 70, 72, 109, 116], "shape": [50, 56, 70, 72, 78], "weight": 50, "check_symmetr": [50, 139], "rtol": 50, "1e": 50, "05": 50, "atol": 50, "08": 50, "matrix": 50, "symmetr": 50, "float": [50, 51, 56, 74, 78, 79, 81, 107, 109, 116], "rel": [50, 99], "toler": 50, "absolut": 50, "otherwis": [50, 93, 125, 126], "compute_mwf": [50, 139], "mask": 50, "segment": [50, 78], "dimens": 50, "fix_symmetr": [50, 139], "fix": 50, "get_artifact_seg": [50, 139], "f": [50, 140], "select": [50, 56, 133], "where": [50, 70, 83, 98, 99, 142], "sort_evd": [50, 139], "eig_valu": 50, "eig_vector": 50, "sort": [50, 81], "eigenvalu": 50, "eigenvector": 50, "column": [50, 72, 134], "stack_delai": [50, 139], "stack": [50, 125, 126], "version": [50, 98], "number": [50, 69, 78, 129], "threshold": 51, "500": 51, "blank": 51, "larg": [51, 78, 143], "spike": 51, "blankeegartifact": 51, "access": 51, "obtain": 51, "eeg_data": 51, "microvolt": 51, "seem": 51, "work": [51, 68, 78, 99, 132, 143], "well": 51, "trigger": [54, 56, 83, 139], "process": [54, 61, 63, 68, 78, 98, 125, 126, 129, 139, 140, 143], "expect": [54, 70], "1d": [54, 69, 70], "arrai": [54, 69, 70, 72, 78], "integ": [54, 56, 70], "bdf": [55, 133], "eeg_path_kei": 56, "data_path": [56, 60, 65, 97], "raw": [56, 65, 69, 81], "eeg_data_kei": 56, "eeg_trigger_data_kei": 56, "trigger_data": [56, 69], "info_prefix": 56, "eeg_": 56, "channels_to_select": 56, "trigger_channel": 56, "statu": 56, "unit_multipli": 56, "additional_map": 56, "eeg_sfreq": [56, 69], "mne_arg": [56, 65], "mne_kwarg": [56, 65], "mneload": [56, 139], "loadeeg": 56, "prefix": [56, 83], "given": [56, 78, 85, 98, 133, 141], "multipli": 56, "volt": 56, "get_channel": [56, 139], "channel_nam": 56, "selected_channel": 56, "n_channel": [56, 70], "n_sampl": [56, 70], "n_selected_channel": 56, "keyerror": [56, 78], "indexerror": 56, "out": [56, 125, 126], "rang": [56, 143], "stimulus_kei": 58, "keys_to_index": 58, "event_info": [58, 60, 97], "split": [58, 69, 139], "individu": 58, "stimulu": [58, 59, 60, 61, 62, 63, 70, 134, 139], "data_dict_copi": [58, 139], "to_exclud": 58, "brain_path_kei": 60, "event_info_kei": 60, "compliant": [60, 102], "event": [60, 125, 126, 134], "tsv": [60, 134], "read_ev": [60, 139], "events_path": 60, "read": [60, 141, 143], "each": [60, 72, 78, 79, 81, 141, 143], "row": [60, 72], "stim_path_kei": 61, "ignore_extens": 61, "compar": 61, "basenam": 61, "ignor": 61, "extens": [61, 83, 97, 98, 125, 126, 133, 140, 141, 143], "process_path": [61, 139], "valid": 61, "stimulus_data": [62, 79, 81], "extract_stimuli_information_fn": 62, "bidsstimulusinfoextractor": [62, 139], "comparison_fn": 62, "basenamecomparisonfn": [62, 139], "stimulus_path_kei": 62, "stimuli_kei": 62, "grouper": 62, "util": [62, 68, 81, 139, 143], "bidsstimulusgroup": [62, 139], "key_fn_for_multiprocess": 62, "default_multiprocessing_key_fn": [62, 139], "linkstimulustoeeg": 62, "stimulus_data_dict": 62, "find_stimulus_fn": 62, "record": [62, 70, 125, 126], "cach": [62, 139], "necessari": [62, 140, 142, 143], "current": [63, 107, 109, 116, 125, 126, 141, 142], "": [65, 72, 81, 125, 126, 141, 143], "read_raw": 65, "axi": [67, 78, 107, 114, 116], "re": 67, "multivari": 67, "common": [67, 141], "averag": 67, "most": [68, 141, 142, 143], "our": [68, 143], "eegorl": 68, "brain_trigger_processing_fn": 69, "lambda": [69, 143], "postprocessing_fn": 69, "default_drift_correct": [69, 139], "data_trigger_kei": 69, "data_sampling_rate_kei": 69, "stimulus_trigger_data_kei": 69, "stimulus_trigger_sampling_rate_kei": 69, "trigger_sr": 69, "align": 69, "puls": 69, "form": 69, "period": 69, "matchtriggerstostimulu": 69, "get_trigger_indic": [69, 139], "split_epoch": [69, 139], "brain_trigger_indic": [69, 70], "brain_f": [69, 70], "nb_epoch": 69, "epoch": [69, 125, 126, 139], "brain_data": 70, "stimulus_trigger_indic": 70, "stimulus_f": 70, "correct": [70, 143], "drift": 70, "clock": 70, "mai": [70, 78, 143], "caus": [70, 78, 143], "misalign": 70, "tri": 70, "interpol": 70, "2d": 70, "filter_": 72, "emulate_matlab": 72, "sosfiltfilt_arg": 72, "sosfiltfilt_kwarg": 72, "section": 72, "wrapper": [72, 139], "scipi": [72, 74], "signal": [72, 74], "coeffici": 72, "n_section": 72, "6": [72, 79], "three": 72, "numer": 72, "last": [72, 93, 98, 125, 126], "denomin": 72, "document": [72, 143], "get_matlab_argu": [72, 139], "mimick": 72, "target": [73, 74, 79], "target_frequ": 74, "sampling_frequency_kei": 74, "resample_arg": 74, "resample_kwarg": 74, "polyphas": 74, "resample_poli": 74, "calcul": [77, 79, 80, 81], "speech": [77, 81], "power_factor": [78, 79, 81], "filterbank": 78, "gammatonefilterbank": 78, "transform": 78, "gammaton": [78, 79], "power": [78, 79, 81], "factor": [78, 79, 81], "durat": [78, 139], "user": [78, 125, 126, 143], "maximum": [78, 129], "buffers": 78, "two": 78, "buffer": 78, "nchannel": 78, "applic": 78, "case": 78, "final": [78, 143], "exampl": [78, 125, 126], "below": 78, "mani": 78, "too": 78, "fit": 78, "memori": [78, 143], "which": [78, 98, 125, 126, 134, 141, 142, 143], "onlin": 78, "do": [78, 129, 143], "size": 78, "fetch": 78, "typic": 78, "give": 78, "reason": 78, "good": 78, "rm": 78, "would": [78, 141], "def": [78, 143], "sum_of_squar": 78, "running_sum_of_squar": 78, "sum": [78, 143], "sqrt": 78, "fb": 78, "nsampl": 78, "sound": 78, "chang": [78, 125, 126], "after": [78, 93, 98, 143], "although": 78, "problem": [78, 143], "assumpt": 78, "were": 78, "insert": 78, "dummi": 78, "donothingfilterbank": 78, "guarante": 78, "stimulus_data_kei": [79, 81], "stimulus_sr_kei": [79, 81], "stimulus_sr": [79, 81], "output_kei": [79, 81], "envelope_data": 79, "min_freq": 79, "50": 79, "max_freq": 79, "5000": 79, "band": 79, "28": 79, "featureextractor": 79, "target_f": 79, "spectrogram_data": 81, "output_sr_kei": 81, "spectrogram_sr": 81, "sort_fn": 81, "librosa_kwarg": 81, "mel": 81, "librosa": 81, "icassp": [81, 142], "2023": [81, 142], "auditori": [81, 142], "challeng": [81, 142], "http": 81, "github": 81, "com": 81, "exporl": 81, "blob": 81, "main": [81, 120, 142], "task1_match_mismatch": 81, "mel_spectrogram": 81, "py": 81, "rate": 81, "featur": [81, 97, 98, 99, 103], "melspectrogram": 81, "depend": 81, "other": [81, 97, 109, 141, 142, 143], "parse_librosa_kwarg": [81, 139], "load_from": 83, "load_fn": 83, "noqa": 83, "e501": 83, "point": [83, 125, 126, 141], "default_load_fn": 83, "constructor": 83, "map_fn": 88, "pipelines_with_load": [88, 90], "nb_process": [90, 129], "logging_config": 90, "clear_output": [93, 98], "clear": [93, 98, 99, 103, 139], "space": [93, 98, 143], "posit": [93, 125, 126, 140], "is_already_don": [93, 98, 139], "done": [93, 98], "is_reload": [93, 98, 139], "saver": [95, 96, 99, 100, 101, 103, 143], "attach": [95, 96, 99, 100, 101, 120], "later": [95, 96, 100, 101, 143], "attach_sav": [95, 96, 99, 100, 101, 103, 139], "attachsav": [96, 100, 101, 103, 139], "defaultsav": [96, 99, 139], "someth": 96, "item": [96, 99, 102, 103], "path_kei": 97, "other_kei": 97, "snr": 97, "data_dict_extens": 97, "feature_extens": 97, "npy": 97, "entir": [97, 98], "root_dir": [98, 133], "to_sav": 98, "filename_fn": 98, "defaultfilenamefn": [98, 139], "savemetadata": [98, 99, 139], "defaultsavemetadata": [98, 139], "save_fn": 98, "reload_fn": 98, "check_don": 98, "isdonecheck": [98, 139], "isreloadablecheck": [98, 139], "disk": [98, 99, 143], "metadata_filenam": 98, "unprocess": 98, "multipl": [98, 140, 143], "directori": [98, 133, 134, 141], "filenamefninterfac": 98, "savefninterfac": 98, "filepath": [98, 99, 103], "self": [98, 129, 143], "default_save_funct": 98, "reloadfninterfac": 98, "default_reload_funct": 98, "checkinterfac": 98, "continu": 98, "key_fn": [99, 103], "default_metadata_key_fn": [99, 103, 139], "save_metadata": 99, "json": [99, 141], "oldmetadatacompli": [99, 139], "feature_nam": [99, 103], "set_nam": [99, 103], "convert_old_format": [99, 102, 139], "metadata_item": [99, 102, 103], "old": [99, 102, 103], "format": [99, 102, 103, 125, 126, 139, 143], "get_metadata_for_savepath": [99, 139], "from_old_format": 99, "associ": 99, "get_relpath": [99, 139], "regard": 99, "classmethod": [99, 103, 129], "is_old_format": [99, 103, 139], "lock": [99, 129, 139], "retriev": 99, "metadata_dict": 99, "checkfunctor": [100, 101, 139], "entri": 103, "feature_map": [107, 116], "split_fract": [107, 109, 116], "split_nam": [107, 116], "extra_oper": [107, 116], "splitteroper": [107, 114, 116, 139], "fraction": [107, 109, 116], "differ": [107, 116, 143], "shortest_length": [107, 109, 116], "start_index": [107, 109, 116], "shortest": [107, 109, 116], "start": [107, 109, 116, 143], "middl": [108, 109], "splitter": [109, 115, 116, 139], "largest": 109, "front": 109, "back": 109, "encount": 109, "sort_split_names_fract": 109, "sequenti": [109, 139, 143], "reset": [112, 114, 139], "state": 112, "x_standard": 114, "frac": 114, "x": [114, 143], "mu": 114, "sigma": 114, "slice": [115, 116], "previously_found": 120, "obj": [120, 123, 136], "previous": 120, "member": 120, "to_find": 120, "load_from_path": [120, 139], "attach_to_main": 120, "__call__": [120, 143], "predicate_fn": [120, 139], "predic": 120, "lst": 122, "recurs": 122, "sublist": 122, "wrap": [123, 136, 137], "fmt": [125, 126], "asctim": [125, 126], "3d": [125, 126], "levelnam": [125, 126], "8": [125, 126, 142], "defaultformatt": [125, 139], "color": 125, "formatt": [125, 126], "localtim": [125, 126], "tm_year": [125, 126], "tm_mon": [125, 126], "tm_mdai": [125, 126], "tm_hour": [125, 126], "tm_min": [125, 126], "tm_sec": [125, 126], "tm_wdai": [125, 126], "tm_ydai": [125, 126], "tm_isdst": [125, 126], "sinc": [125, 126], "express": [125, 126], "local": [125, 126], "operand": [125, 126], "yield": [125, 126, 143], "coupl": [125, 126], "preparatori": [125, 126], "carri": [125, 126], "logrecord": [125, 126], "getmessag": [125, 126], "usestim": [125, 126, 139], "formattim": [125, 126, 139], "formatexcept": [125, 126, 139], "append": [125, 126, 143], "ei": [125, 126], "just": [125, 126, 141, 143], "print_except": [125, 126], "formatstack": [125, 126, 139], "stack_info": [125, 126], "special": [125, 126, 141], "print_stack": [125, 126], "trail": [125, 126], "newlin": [125, 126], "datefmt": [125, 126], "creation": [125, 126], "overridden": [125, 126], "requir": [125, 126, 141, 143], "basic": [125, 126, 141], "behaviour": [125, 126], "follow": [125, 126, 141, 143], "strftime": [125, 126], "iso8601": [125, 126], "rfc": [125, 126], "3339": [125, 126], "particular": [125, 126], "signatur": [125, 126], "gmtime": [125, 126], "To": [125, 126, 143], "shown": [125, 126, 143], "gmt": [125, 126], "basicconfig": 127, "singleton": 129, "clean": [129, 139], "up": [129, 143], "pool": 129, "get_lock": [129, 139], "id_str": 129, "doe": [129, 143], "get_map_fn": [129, 139], "callback": [129, 130, 131], "progresscallbackfn": [129, 131, 139], "simplecallbackfn": [129, 130, 139], "maxtasksperchild": 129, "core": 129, "track": [129, 130, 131], "progress": [129, 130, 131], "task": [129, 133, 134], "per": 129, "child": 129, "total": [130, 131], "current_count": [130, 131], "dataset": [133, 134, 142, 143], "select_path": [133, 139], "subject": [133, 134], "session": [133, 134], "suffix": 133, "match": 133, "bids_root": 134, "stim_fil": 134, "subfold": 134, "na_valu": 134, "n": 134, "group": 134, "interpret": 134, "miss": [134, 141], "around": [136, 137], "pickl": [136, 137, 143], "dump": 136, "full": 138, "tree": 138, "brain_pip": [139, 140, 141, 142, 143], "cli_entrypoint": 139, "cli_factori": 139, "defaultcli": 139, "globload": 139, "simple_dict": 139, "template_text": 139, "yaml": [139, 140, 141, 143], "yamlfilepars": 139, "yamltemplatefilepars": [139, 141], "yamltextpars": 139, "defaultpipelinecach": 139, "cachingpreprocessingpipelin": 139, "artifact": 139, "artifactremovalmwf": 139, "interpolateartifact": 139, "biosemi": 139, "biosemi_trigger_processing_fn": 139, "loadeegnumpi": 139, "splitepoch": 139, "link": [139, 141], "linkstimulustobrainrespons": 139, "rerefer": 139, "commonaveragererefer": 139, "alignperiodicblocktrigg": 139, "sosfiltfilt": 139, "resampl": 139, "resamplepoli": 139, "audio": 139, "envelop": 139, "envelopefromgammaton": 139, "gammatoneenvelop": 139, "spectrogram": 139, "librosamelspectrogram": 139, "loadstimuli": 139, "transpos": 139, "defaultrunn": 139, "mid": 139, "midsplit": 139, "normal": 139, "standard": 139, "sequentialsplit": 139, "finder": [139, 141], "flatten": 139, "wrap_in_list": 139, "default_log": 139, "colorformatt": 139, "multiprocessingsingleton": 139, "bidspathgener": 139, "With": 140, "linea": 140, "config_fil": [140, 141], "typical_process": 140, "usag": [140, 143], "h": 140, "parser_fil": 140, "input_fil": 140, "definit": 140, "help": 140, "show": [140, 143], "exit": 140, "extern": 140, "search": [140, 141], "programmat": 141, "script": [141, 142, 143], "allow": [141, 143], "wai": [141, 143], "without": [141, 143], "import": [141, 143], "variabl": 141, "runtim": 141, "__file__": 141, "__filedir__": 141, "respect": 141, "ask": 141, "data_load": [141, 143], "data_from": 141, "helper": [141, 143], "treat": 141, "extra_path": 141, "is_point": 141, "try": [141, 143], "support": [141, 142], "effici": [142, 143], "extensibli": 142, "python3": 142, "goal": [142, 143], "public": 142, "sparrkule": [142, 143], "further": 142, "extend": 142, "reli": 142, "explain": 142, "detail": 142, "pip": 142, "bash": 142, "python": [142, 143], "pleas": [142, 143], "open": 142, "issu": 142, "pull": 142, "request": 142, "md": 142, "organ": 143, "customiz": 143, "fig": 143, "fly": 143, "complet": 143, "relev": 143, "accomplish": 143, "mean": 143, "easi": 143, "preform": 143, "bandpass": 143, "motion": 143, "etc": 143, "free": 143, "complex": 143, "elabor": 143, "abl": 143, "both": 143, "commonli": 143, "practic": 143, "came": 143, "wast": 143, "lot": 143, "larger": 143, "delet": 143, "need": 143, "again": 143, "addition": 143, "easili": 143, "worri": 143, "datapoint": 143, "basi": 143, "possbil": 143, "parallel": 143, "modeul": 143, "bids_preprocess": 143, "picklabl": 143, "non": 143, "probabl": 143, "while": 143, "speed": 143, "immensli": 143, "come": 143, "cost": 143, "higher": 143, "ram": 143, "As": 143, "quit": 143, "bottleneck": 143, "exceed": 143, "limit": 143, "hard": 143, "drive": 143, "temporari": 143, "storag": 143, "swap": 143, "slow": 143, "down": 143, "reloc": 143, "recommend": 143, "modular": 143, "thing": 143, "independ": 143, "contribut": 143, "mind": 143, "maintain": 143, "futur": 143, "person": 143, "project": 143, "though": 143, "everyth": 143, "fine": 143, "me": 143, "abov": 143, "strictli": 143, "speak": 143, "isn": 143, "theori": 143, "lieu": 143, "toi": 143, "bit": 143, "let": 143, "now": 143, "rangedataload": 143, "9": 143, "adddata": 143, "removemean": 143, "len": 143, "alright": 143, "manual": 143, "4": 143, "5": 143, "Or": 143, "look": 143}, "objects": {"": [[0, 0, 0, "-", "brain_pipe"]], "brain_pipe": [[1, 0, 0, "-", "cli"], [8, 0, 0, "-", "dataloaders"], [13, 0, 0, "-", "parser"], [31, 0, 0, "-", "pipeline"], [47, 0, 0, "-", "preprocessing"], [86, 0, 0, "-", "runner"], [91, 0, 0, "-", "save"], [105, 0, 0, "-", "split"], [117, 0, 0, "-", "utils"]], "brain_pipe.cli": [[2, 0, 0, "-", "base"], [4, 3, 1, "", "cli_entrypoint"], [5, 3, 1, "", "cli_factory"], [6, 0, 0, "-", "default"]], "brain_pipe.cli.base": [[3, 1, 1, "", "CLI"]], "brain_pipe.cli.base.CLI": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "get_parser"], [3, 2, 1, "", "get_run_options"], [3, 2, 1, "", "parse_cli_arguments"], [3, 2, 1, "", "parse_cli_arguments_for_parser"], [3, 2, 1, "", "run"]], "brain_pipe.cli.default": [[7, 1, 1, "", "DefaultCLI"]], "brain_pipe.cli.default.DefaultCLI": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "add_arguments_to_argparser"], [7, 2, 1, "", "get_argparser"], [7, 2, 1, "", "get_parser"], [7, 2, 1, "", "get_run_options"], [7, 2, 1, "", "parse_cli_arguments"], [7, 2, 1, "", "parse_cli_arguments_for_parser"], [7, 2, 1, "", "run"]], "brain_pipe.dataloaders": [[9, 0, 0, "-", "base"], [11, 0, 0, "-", "path"]], "brain_pipe.dataloaders.base": [[10, 1, 1, "", "DataLoader"]], "brain_pipe.dataloaders.base.DataLoader": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "compute_length"]], "brain_pipe.dataloaders.path": [[12, 1, 1, "", "GlobLoader"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "compute_length"], [12, 2, 1, "", "path_to_data_dict"]], "brain_pipe.parser": [[14, 0, 0, "-", "base"], [16, 0, 0, "-", "file"], [20, 0, 0, "-", "simple_dict"], [22, 0, 0, "-", "template_text"], [24, 0, 0, "-", "text"], [26, 0, 0, "-", "yaml"]], "brain_pipe.parser.base": [[15, 1, 1, "", "Parser"]], "brain_pipe.parser.base.Parser": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "get_additional_kwargs"], [15, 2, 1, "", "link_loader_to_pipeline"], [15, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file": [[17, 1, 1, "", "FileLoadMixin"], [18, 1, 1, "", "FileParser"], [19, 1, 1, "", "TemplateFileParser"]], "brain_pipe.parser.file.FileLoadMixin": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "get_additional_kwargs"], [17, 2, 1, "", "load_file"]], "brain_pipe.parser.file.FileParser": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "apply_config"], [18, 2, 1, "", "get_additional_kwargs"], [18, 2, 1, "", "get_runner_from_parsed_config"], [18, 2, 1, "", "link_loader_to_pipeline"], [18, 2, 1, "", "load_file"], [18, 2, 1, "", "parse_all"], [18, 2, 1, "", "parse_text_to_dict"], [18, 2, 1, "", "recursive_parse"], [18, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.file.TemplateFileParser": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "apply_config"], [19, 2, 1, "", "get_additional_kwargs"], [19, 2, 1, "", "get_runner_from_parsed_config"], [19, 2, 1, "", "link_loader_to_pipeline"], [19, 2, 1, "", "load_file"], [19, 2, 1, "", "parse_all"], [19, 2, 1, "", "parse_text_to_dict"], [19, 2, 1, "", "recursive_parse"], [19, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[21, 1, 1, "", "SimpleDictParser"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "apply_config"], [21, 2, 1, "", "get_additional_kwargs"], [21, 2, 1, "", "get_runner_from_parsed_config"], [21, 2, 1, "", "link_loader_to_pipeline"], [21, 2, 1, "", "parse_all"], [21, 2, 1, "", "recursive_parse"], [21, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.template_text": [[23, 1, 1, "", "TemplateTextParser"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "apply_config"], [23, 2, 1, "", "get_additional_kwargs"], [23, 2, 1, "", "get_runner_from_parsed_config"], [23, 2, 1, "", "link_loader_to_pipeline"], [23, 2, 1, "", "parse_all"], [23, 2, 1, "", "parse_text_to_dict"], [23, 2, 1, "", "recursive_parse"], [23, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.text": [[25, 1, 1, "", "TextParser"]], "brain_pipe.parser.text.TextParser": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "apply_config"], [25, 2, 1, "", "get_additional_kwargs"], [25, 2, 1, "", "get_runner_from_parsed_config"], [25, 2, 1, "", "link_loader_to_pipeline"], [25, 2, 1, "", "parse_all"], [25, 2, 1, "", "parse_text_to_dict"], [25, 2, 1, "", "recursive_parse"], [25, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml": [[27, 1, 1, "", "YAMLFileParser"], [28, 1, 1, "", "YAMLMixin"], [29, 1, 1, "", "YAMLTemplateFileParser"], [30, 1, 1, "", "YAMLTextParser"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "apply_config"], [27, 2, 1, "", "get_additional_kwargs"], [27, 2, 1, "", "get_runner_from_parsed_config"], [27, 2, 1, "", "link_loader_to_pipeline"], [27, 2, 1, "", "load_file"], [27, 2, 1, "", "parse_all"], [27, 2, 1, "", "parse_text_to_dict"], [27, 2, 1, "", "recursive_parse"], [27, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "parse_text_to_dict"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "apply_config"], [29, 2, 1, "", "get_additional_kwargs"], [29, 2, 1, "", "get_runner_from_parsed_config"], [29, 2, 1, "", "link_loader_to_pipeline"], [29, 2, 1, "", "load_file"], [29, 2, 1, "", "parse_all"], [29, 2, 1, "", "parse_text_to_dict"], [29, 2, 1, "", "recursive_parse"], [29, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "apply_config"], [30, 2, 1, "", "get_additional_kwargs"], [30, 2, 1, "", "get_runner_from_parsed_config"], [30, 2, 1, "", "link_loader_to_pipeline"], [30, 2, 1, "", "parse_all"], [30, 2, 1, "", "parse_text_to_dict"], [30, 2, 1, "", "recursive_parse"], [30, 2, 1, "", "set_additional_kwargs"]], "brain_pipe.pipeline": [[32, 0, 0, "-", "base"], [35, 0, 0, "-", "cache"], [42, 0, 0, "-", "default"], [45, 0, 0, "-", "wrapper"]], "brain_pipe.pipeline.base": [[33, 1, 1, "", "Pipeline"], [34, 1, 1, "", "PipelineStep"]], "brain_pipe.pipeline.base.Pipeline": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.base.PipelineStep": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "parse_dict_keys"]], "brain_pipe.pipeline.cache": [[36, 0, 0, "-", "base"], [38, 0, 0, "-", "default"], [40, 0, 0, "-", "pipeline"]], "brain_pipe.pipeline.cache.base": [[37, 1, 1, "", "PipelineCache"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "find_existing_cache_from_data_dict"], [37, 2, 1, "", "find_existing_cache_from_previous_filename"], [37, 2, 1, "", "get_cache_dict"], [37, 2, 1, "", "get_existing_cache_paths"], [37, 2, 1, "", "get_filename"], [37, 2, 1, "", "get_foldername"], [37, 2, 1, "", "get_path"], [37, 2, 1, "", "load"], [37, 2, 1, "", "load_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_data_dict"], [37, 2, 1, "", "predict_filenames_from_previous_filename"], [37, 2, 1, "", "predict_paths_from_data_dict"], [37, 2, 1, "", "predict_paths_from_previous_filename"], [37, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.default": [[39, 1, 1, "", "DefaultPipelineCache"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "find_existing_cache_from_data_dict"], [39, 2, 1, "", "find_existing_cache_from_previous_filename"], [39, 2, 1, "", "get_cache_dict"], [39, 2, 1, "", "get_existing_cache_paths"], [39, 2, 1, "", "get_filename"], [39, 2, 1, "", "get_foldername"], [39, 2, 1, "", "get_path"], [39, 2, 1, "", "load"], [39, 2, 1, "", "load_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_data_dict"], [39, 2, 1, "", "predict_filenames_from_previous_filename"], [39, 2, 1, "", "predict_paths_from_data_dict"], [39, 2, 1, "", "predict_paths_from_previous_filename"], [39, 2, 1, "", "save"]], "brain_pipe.pipeline.cache.pipeline": [[41, 1, 1, "", "CachingPreprocessingPipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "check_reload"], [41, 2, 1, "", "iterate_over_steps"], [41, 4, 1, "", "on_error"], [41, 2, 1, "", "parse_dict_keys"], [41, 2, 1, "", "run_step"]], "brain_pipe.pipeline.default": [[43, 1, 1, "", "DefaultPipeline"], [44, 3, 1, "", "default_error_handler_fn"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "check_reload"], [43, 2, 1, "", "iterate_over_steps"], [43, 4, 1, "", "on_error"], [43, 2, 1, "", "parse_dict_keys"], [43, 2, 1, "", "run_step"]], "brain_pipe.pipeline.wrapper": [[46, 1, 1, "", "Wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing": [[48, 0, 0, "-", "brain"], [71, 0, 0, "-", "filter"], [73, 0, 0, "-", "resample"], [75, 0, 0, "-", "stimulus"], [84, 0, 0, "-", "transpose"]], "brain_pipe.preprocessing.brain": [[49, 0, 0, "-", "artifact"], [52, 0, 0, "-", "eeg"], [57, 0, 0, "-", "epochs"], [59, 0, 0, "-", "link"], [64, 0, 0, "-", "load"], [66, 0, 0, "-", "rereference"], [68, 0, 0, "-", "trigger"]], "brain_pipe.preprocessing.brain.artifact": [[50, 1, 1, "", "ArtifactRemovalMWF"], [51, 1, 1, "", "InterpolateArtifacts"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "apply_mwf"], [50, 2, 1, "", "check_symmetric"], [50, 2, 1, "", "compute_mwf"], [50, 2, 1, "", "fix_symmetric"], [50, 2, 1, "", "get_artifact_segments"], [50, 2, 1, "", "parse_dict_keys"], [50, 2, 1, "", "sort_evd"], [50, 2, 1, "", "stack_delayed"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[53, 0, 0, "-", "biosemi"], [55, 0, 0, "-", "load"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[54, 3, 1, "", "biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[56, 1, 1, "", "LoadEEGNumpy"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "get_channels"], [56, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[58, 1, 1, "", "SplitEpochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "data_dict_copy"], [58, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[60, 1, 1, "", "BIDSStimulusInfoExtractor"], [61, 1, 1, "", "BasenameComparisonFn"], [62, 1, 1, "", "LinkStimulusToBrainResponse"], [63, 3, 1, "", "default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "read_events"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "process_path"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.load": [[65, 1, 1, "", "MNELoader"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[67, 1, 1, "", "CommonAverageRereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[69, 1, 1, "", "AlignPeriodicBlockTriggers"], [70, 3, 1, "", "default_drift_correction"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "get_trigger_indices"], [69, 2, 1, "", "parse_dict_keys"], [69, 2, 1, "", "split_epochs"]], "brain_pipe.preprocessing.filter": [[72, 1, 1, "", "SosFiltFilt"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "get_matlab_arguments"], [72, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[74, 1, 1, "", "ResamplePoly"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[76, 0, 0, "-", "audio"], [82, 0, 0, "-", "load"]], "brain_pipe.preprocessing.stimulus.audio": [[77, 0, 0, "-", "envelope"], [80, 0, 0, "-", "spectrogram"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[78, 1, 1, "", "EnvelopeFromGammatone"], [79, 1, 1, "", "GammatoneEnvelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, 2, 1, "", "__init__"], [78, 4, 1, "", "duration"], [78, 2, 1, "", "process"], [78, 4, 1, "", "source"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[81, 1, 1, "", "LibrosaMelSpectrogram"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "parse_dict_keys"], [81, 2, 1, "", "parse_librosa_kwargs"]], "brain_pipe.preprocessing.stimulus.load": [[83, 1, 1, "", "LoadStimuli"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[85, 1, 1, "", "Transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "parse_dict_keys"]], "brain_pipe.runner": [[87, 0, 0, "-", "base"], [89, 0, 0, "-", "default"]], "brain_pipe.runner.base": [[88, 1, 1, "", "Runner"]], "brain_pipe.runner.base.Runner": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "run"]], "brain_pipe.runner.default": [[90, 1, 1, "", "DefaultRunner"]], "brain_pipe.runner.default.DefaultRunner": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "run"]], "brain_pipe.save": [[92, 0, 0, "-", "base"], [94, 0, 0, "-", "default"]], "brain_pipe.save.base": [[93, 1, 1, "", "Save"]], "brain_pipe.save.base.Save": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "is_already_done"], [93, 2, 1, "", "is_reloadable"], [93, 2, 1, "", "parse_dict_keys"], [93, 2, 1, "", "reload"]], "brain_pipe.save.default": [[95, 1, 1, "", "AttachSave"], [96, 1, 1, "", "CheckFunctor"], [97, 1, 1, "", "DefaultFilenameFn"], [98, 1, 1, "", "DefaultSave"], [99, 1, 1, "", "DefaultSaveMetadata"], [100, 1, 1, "", "IsDoneCheck"], [101, 1, 1, "", "IsReloadableCheck"], [102, 1, 1, "", "OldMetadataCompliant"], [103, 1, 1, "", "SaveMetadata"], [104, 3, 1, "", "default_metadata_key_fn"]], "brain_pipe.save.default.AttachSave": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "attach_saver"]], "brain_pipe.save.default.CheckFunctor": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "attach_saver"]], "brain_pipe.save.default.DefaultFilenameFn": [[97, 2, 1, "", "__init__"]], "brain_pipe.save.default.DefaultSave": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "is_already_done"], [98, 2, 1, "", "is_reloadable"], [98, 4, 1, "", "overwrite"], [98, 2, 1, "", "parse_dict_keys"], [98, 2, 1, "", "reload"]], "brain_pipe.save.default.DefaultSaveMetadata": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "add"], [99, 2, 1, "", "attach_saver"], [99, 2, 1, "", "clear"], [99, 2, 1, "", "convert_old_format"], [99, 2, 1, "", "get"], [99, 2, 1, "", "get_metadata_for_savepath"], [99, 2, 1, "", "get_path"], [99, 2, 1, "", "get_relpath"], [99, 2, 1, "", "is_old_format"], [99, 4, 1, "", "lock"], [99, 2, 1, "", "write"]], "brain_pipe.save.default.IsDoneCheck": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "attach_saver"]], "brain_pipe.save.default.IsReloadableCheck": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "attach_saver"]], "brain_pipe.save.default.OldMetadataCompliant": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "convert_old_format"]], "brain_pipe.save.default.SaveMetadata": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "add"], [103, 2, 1, "", "attach_saver"], [103, 2, 1, "", "clear"], [103, 2, 1, "", "is_old_format"]], "brain_pipe.split": [[106, 0, 0, "-", "base"], [108, 0, 0, "-", "mid"], [110, 0, 0, "-", "operations"], [115, 0, 0, "-", "sequential"]], "brain_pipe.split.base": [[107, 1, 1, "", "Splitter"]], "brain_pipe.split.base.Splitter": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "parse_dict_keys"], [107, 2, 1, "", "split"]], "brain_pipe.split.mid": [[109, 1, 1, "", "MidSplit"]], "brain_pipe.split.mid.MidSplit": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "parse_dict_keys"], [109, 2, 1, "", "split"]], "brain_pipe.split.operations": [[111, 0, 0, "-", "base"], [113, 0, 0, "-", "normalize"]], "brain_pipe.split.operations.base": [[112, 1, 1, "", "SplitterOperation"]], "brain_pipe.split.operations.base.SplitterOperation": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "reset"]], "brain_pipe.split.operations.normalize": [[114, 1, 1, "", "Standardize"]], "brain_pipe.split.operations.normalize.Standardize": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "reset"]], "brain_pipe.split.sequential": [[116, 1, 1, "", "SequentialSplit"]], "brain_pipe.split.sequential.SequentialSplit": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "parse_dict_keys"], [116, 2, 1, "", "split"]], "brain_pipe.utils": [[118, 1, 1, "", "ObjectsWithConfig"], [119, 0, 0, "-", "find"], [121, 0, 0, "-", "list"], [124, 0, 0, "-", "log"], [128, 0, 0, "-", "multiprocess"], [132, 0, 0, "-", "path"], [135, 0, 0, "-", "serialization"]], "brain_pipe.utils.ObjectsWithConfig": [[118, 2, 1, "", "__init__"], [118, 2, 1, "", "apply_config"]], "brain_pipe.utils.find": [[120, 1, 1, "", "Finder"]], "brain_pipe.utils.find.Finder": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "filter"], [120, 2, 1, "", "filter_fn"], [120, 2, 1, "", "load_from_path"], [120, 2, 1, "", "predicate_fn"]], "brain_pipe.utils.list": [[122, 3, 1, "", "flatten"], [123, 3, 1, "", "wrap_in_list"]], "brain_pipe.utils.log": [[125, 1, 1, "", "ColorFormatter"], [126, 1, 1, "", "DefaultFormatter"], [127, 3, 1, "", "default_logging"]], "brain_pipe.utils.log.ColorFormatter": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "converter"], [125, 2, 1, "", "format"], [125, 2, 1, "", "formatException"], [125, 2, 1, "", "formatStack"], [125, 2, 1, "", "formatTime"], [125, 2, 1, "", "usesTime"]], "brain_pipe.utils.log.DefaultFormatter": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "converter"], [126, 2, 1, "", "format"], [126, 2, 1, "", "formatException"], [126, 2, 1, "", "formatStack"], [126, 2, 1, "", "formatTime"], [126, 2, 1, "", "usesTime"]], "brain_pipe.utils.multiprocess": [[129, 1, 1, "", "MultiprocessingSingleton"], [130, 1, 1, "", "ProgressCallbackFn"], [131, 1, 1, "", "SimpleCallbackFn"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "clean"], [129, 2, 1, "", "get_lock"], [129, 2, 1, "", "get_map_fn"]], "brain_pipe.utils.multiprocess.ProgressCallbackFn": [[130, 2, 1, "", "__init__"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[131, 2, 1, "", "__init__"]], "brain_pipe.utils.path": [[133, 1, 1, "", "BIDSPathGenerator"], [134, 1, 1, "", "BIDSStimulusGrouper"]], "brain_pipe.utils.path.BIDSPathGenerator": [[133, 2, 1, "", "__init__"], [133, 2, 1, "", "select_paths"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[134, 2, 1, "", "__init__"]], "brain_pipe.utils.serialization": [[136, 3, 1, "", "pickle_dump_wrapper"], [137, 3, 1, "", "pickle_load_wrapper"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"brain_pip": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "cli": [1, 2, 3, 4, 5, 6, 7], "base": [2, 3, 9, 10, 14, 15, 32, 33, 34, 36, 37, 87, 88, 92, 93, 106, 107, 111, 112], "cli_entrypoint": 4, "cli_factori": 5, "default": [6, 7, 38, 39, 42, 43, 44, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "defaultcli": 7, "dataload": [8, 9, 10, 11, 12], "path": [11, 12, 132, 133, 134], "globload": 12, "parser": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 141], "file": [16, 17, 18, 19, 141], "fileloadmixin": 17, "filepars": 18, "templatefilepars": 19, "simple_dict": [20, 21], "simpledictpars": [21, 141], "template_text": [22, 23], "templatetextpars": 23, "text": [24, 25], "textpars": 25, "yaml": [26, 27, 28, 29, 30], "yamlfilepars": 27, "yamlmixin": 28, "yamltemplatefilepars": 29, "yamltextpars": 30, "pipelin": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 141], "pipelinestep": [34, 143], "cach": [35, 36, 37, 38, 39, 40, 41], "pipelinecach": 37, "defaultpipelinecach": 39, "cachingpreprocessingpipelin": 41, "defaultpipelin": 43, "default_error_handler_fn": 44, "wrapper": [45, 46], "preprocess": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 139], "brain": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 142], "artifact": [49, 50, 51], "artifactremovalmwf": 50, "interpolateartifact": 51, "eeg": [52, 53, 54, 55, 56], "biosemi": [53, 54], "biosemi_trigger_processing_fn": 54, "load": [55, 56, 64, 65, 82, 83], "loadeegnumpi": 56, "epoch": [57, 58], "splitepoch": 58, "link": [59, 60, 61, 62, 63], "bidsstimulusinfoextractor": 60, "basenamecomparisonfn": 61, "linkstimulustobrainrespons": 62, "default_multiprocessing_key_fn": 63, "mneload": 65, "rerefer": [66, 67], "commonaveragererefer": 67, "trigger": [68, 69, 70], "alignperiodicblocktrigg": 69, "default_drift_correct": 70, "filter": [71, 72], "sosfiltfilt": 72, "resampl": [73, 74], "resamplepoli": 74, "stimulu": [75, 76, 77, 78, 79, 80, 81, 82, 83], "audio": [76, 77, 78, 79, 80, 81], "envelop": [77, 78, 79], "envelopefromgammaton": 78, "gammatoneenvelop": 79, "spectrogram": [80, 81], "librosamelspectrogram": 81, "loadstimuli": 83, "transpos": [84, 85], "runner": [86, 87, 88, 89, 90], "defaultrunn": 90, "save": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "attachsav": 95, "checkfunctor": 96, "defaultfilenamefn": 97, "defaultsav": 98, "defaultsavemetadata": 99, "isdonecheck": 100, "isreloadablecheck": 101, "oldmetadatacompli": 102, "savemetadata": 103, "default_metadata_key_fn": 104, "split": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "splitter": 107, "mid": [108, 109], "midsplit": 109, "oper": [110, 111, 112, 113, 114], "splitteroper": 112, "normal": [113, 114], "standard": 114, "sequenti": [115, 116], "sequentialsplit": 116, "util": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "objectswithconfig": 118, "find": [119, 120], "finder": 120, "list": [121, 122, 123], "flatten": 122, "wrap_in_list": 123, "log": [124, 125, 126, 127], "colorformatt": 125, "defaultformatt": 126, "default_log": 127, "multiprocess": [128, 129, 130, 131], "multiprocessingsingleton": 129, "progresscallbackfn": 130, "simplecallbackfn": 131, "bidspathgener": 133, "bidsstimulusgroup": 134, "serial": [135, 136, 137], "pickle_dump_wrapp": 136, "pickle_load_wrapp": 137, "api": [138, 140, 142], "refer": [138, 142], "full": 139, "tree": 139, "bid": 139, "command": 140, "line": 140, "interfac": 140, "defin": 141, "run": [141, 142], "through": 141, "configur": 141, "from": 141, "background": 141, "typic": 141, "structur": [141, 142], "specifi": 141, "welcom": 142, "pipe": 142, "": 142, "document": 142, "motiv": 142, "intern": 142, "instal": 142, "requir": 142, "contribut": 142, "go": 142, "overview": 143, "concept": 143, "The": 143, "data_dict": 143, "conveni": 143, "class": 143, "addit": 143, "consider": 143, "write": 143, "your": 143, "own": 143, "small": 143, "exampl": 143}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"brain_pipe": [[0, "module-brain_pipe"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "brain_pipe.cli.base.CLI": [[3, "brain-pipe-cli-base-cli"]], "brain_pipe.cli.cli_entrypoint": [[4, "brain-pipe-cli-cli-entrypoint"]], "brain_pipe.cli.cli_factory": [[5, "brain-pipe-cli-cli-factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "brain_pipe.cli.default.DefaultCLI": [[7, "brain-pipe-cli-default-defaultcli"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "brain_pipe.dataloaders.base.DataLoader": [[10, "brain-pipe-dataloaders-base-dataloader"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "brain_pipe.dataloaders.path.GlobLoader": [[12, "brain-pipe-dataloaders-path-globloader"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "brain_pipe.parser.base.Parser": [[15, "brain-pipe-parser-base-parser"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "brain_pipe.parser.file.FileLoadMixin": [[17, "brain-pipe-parser-file-fileloadmixin"]], "brain_pipe.parser.file.FileParser": [[18, "brain-pipe-parser-file-fileparser"]], "brain_pipe.parser.file.TemplateFileParser": [[19, "brain-pipe-parser-file-templatefileparser"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "brain_pipe.parser.simple_dict.SimpleDictParser": [[21, "brain-pipe-parser-simple-dict-simpledictparser"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "brain_pipe.parser.template_text.TemplateTextParser": [[23, "brain-pipe-parser-template-text-templatetextparser"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "brain_pipe.parser.text.TextParser": [[25, "brain-pipe-parser-text-textparser"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "brain_pipe.parser.yaml.YAMLFileParser": [[27, "brain-pipe-parser-yaml-yamlfileparser"]], "brain_pipe.parser.yaml.YAMLMixin": [[28, "brain-pipe-parser-yaml-yamlmixin"]], "brain_pipe.parser.yaml.YAMLTemplateFileParser": [[29, "brain-pipe-parser-yaml-yamltemplatefileparser"]], "brain_pipe.parser.yaml.YAMLTextParser": [[30, "brain-pipe-parser-yaml-yamltextparser"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "brain_pipe.pipeline.base.Pipeline": [[33, "brain-pipe-pipeline-base-pipeline"]], "brain_pipe.pipeline.base.PipelineStep": [[34, "brain-pipe-pipeline-base-pipelinestep"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "brain_pipe.pipeline.cache.base.PipelineCache": [[37, "brain-pipe-pipeline-cache-base-pipelinecache"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "brain_pipe.pipeline.cache.default.DefaultPipelineCache": [[39, "brain-pipe-pipeline-cache-default-defaultpipelinecache"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline": [[41, "brain-pipe-pipeline-cache-pipeline-cachingpreprocessingpipeline"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "brain_pipe.pipeline.default.DefaultPipeline": [[43, "brain-pipe-pipeline-default-defaultpipeline"]], "brain_pipe.pipeline.default.default_error_handler_fn": [[44, "brain-pipe-pipeline-default-default-error-handler-fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "brain_pipe.pipeline.wrapper.Wrapper": [[46, "brain-pipe-pipeline-wrapper-wrapper"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF": [[50, "brain-pipe-preprocessing-brain-artifact-artifactremovalmwf"]], "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts": [[51, "brain-pipe-preprocessing-brain-artifact-interpolateartifacts"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn": [[54, "brain-pipe-preprocessing-brain-eeg-biosemi-biosemi-trigger-processing-fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy": [[56, "brain-pipe-preprocessing-brain-eeg-load-loadeegnumpy"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "brain_pipe.preprocessing.brain.epochs.SplitEpochs": [[58, "brain-pipe-preprocessing-brain-epochs-splitepochs"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor": [[60, "brain-pipe-preprocessing-brain-link-bidsstimulusinfoextractor"]], "brain_pipe.preprocessing.brain.link.BasenameComparisonFn": [[61, "brain-pipe-preprocessing-brain-link-basenamecomparisonfn"]], "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse": [[62, "brain-pipe-preprocessing-brain-link-linkstimulustobrainresponse"]], "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn": [[63, "brain-pipe-preprocessing-brain-link-default-multiprocessing-key-fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "brain_pipe.preprocessing.brain.load.MNELoader": [[65, "brain-pipe-preprocessing-brain-load-mneloader"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference": [[67, "brain-pipe-preprocessing-brain-rereference-commonaveragerereference"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers": [[69, "brain-pipe-preprocessing-brain-trigger-alignperiodicblocktriggers"]], "brain_pipe.preprocessing.brain.trigger.default_drift_correction": [[70, "brain-pipe-preprocessing-brain-trigger-default-drift-correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "brain_pipe.preprocessing.filter.SosFiltFilt": [[72, "brain-pipe-preprocessing-filter-sosfiltfilt"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "brain_pipe.preprocessing.resample.ResamplePoly": [[74, "brain-pipe-preprocessing-resample-resamplepoly"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone": [[78, "brain-pipe-preprocessing-stimulus-audio-envelope-envelopefromgammatone"]], "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope": [[79, "brain-pipe-preprocessing-stimulus-audio-envelope-gammatoneenvelope"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram": [[81, "brain-pipe-preprocessing-stimulus-audio-spectrogram-librosamelspectrogram"]], "brain_pipe.preprocessing.stimulus.load": [[82, "module-brain_pipe.preprocessing.stimulus.load"]], "brain_pipe.preprocessing.stimulus.load.LoadStimuli": [[83, "brain-pipe-preprocessing-stimulus-load-loadstimuli"]], "brain_pipe.preprocessing.transpose": [[84, "module-brain_pipe.preprocessing.transpose"]], "brain_pipe.preprocessing.transpose.Transpose": [[85, "brain-pipe-preprocessing-transpose-transpose"]], "brain_pipe.runner": [[86, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[87, "module-brain_pipe.runner.base"]], "brain_pipe.runner.base.Runner": [[88, "brain-pipe-runner-base-runner"]], "brain_pipe.runner.default": [[89, "module-brain_pipe.runner.default"]], "brain_pipe.runner.default.DefaultRunner": [[90, "brain-pipe-runner-default-defaultrunner"]], "brain_pipe.save": [[91, "module-brain_pipe.save"]], "brain_pipe.save.base": [[92, "module-brain_pipe.save.base"]], "brain_pipe.save.base.Save": [[93, "brain-pipe-save-base-save"]], "brain_pipe.save.default": [[94, "module-brain_pipe.save.default"]], "brain_pipe.save.default.AttachSave": [[95, "brain-pipe-save-default-attachsave"]], "brain_pipe.save.default.CheckFunctor": [[96, "brain-pipe-save-default-checkfunctor"]], "brain_pipe.save.default.DefaultFilenameFn": [[97, "brain-pipe-save-default-defaultfilenamefn"]], "brain_pipe.save.default.DefaultSave": [[98, "brain-pipe-save-default-defaultsave"]], "brain_pipe.save.default.DefaultSaveMetadata": [[99, "brain-pipe-save-default-defaultsavemetadata"]], "brain_pipe.save.default.IsDoneCheck": [[100, "brain-pipe-save-default-isdonecheck"]], "brain_pipe.save.default.IsReloadableCheck": [[101, "brain-pipe-save-default-isreloadablecheck"]], "brain_pipe.save.default.OldMetadataCompliant": [[102, "brain-pipe-save-default-oldmetadatacompliant"]], "brain_pipe.save.default.SaveMetadata": [[103, "brain-pipe-save-default-savemetadata"]], "brain_pipe.save.default.default_metadata_key_fn": [[104, "brain-pipe-save-default-default-metadata-key-fn"]], "brain_pipe.split": [[105, "module-brain_pipe.split"]], "brain_pipe.split.base": [[106, "module-brain_pipe.split.base"]], "brain_pipe.split.base.Splitter": [[107, "brain-pipe-split-base-splitter"]], "brain_pipe.split.mid": [[108, "module-brain_pipe.split.mid"]], "brain_pipe.split.mid.MidSplit": [[109, "brain-pipe-split-mid-midsplit"]], "brain_pipe.split.operations": [[110, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[111, "module-brain_pipe.split.operations.base"]], "brain_pipe.split.operations.base.SplitterOperation": [[112, "brain-pipe-split-operations-base-splitteroperation"]], "brain_pipe.split.operations.normalize": [[113, "module-brain_pipe.split.operations.normalize"]], "brain_pipe.split.operations.normalize.Standardize": [[114, "brain-pipe-split-operations-normalize-standardize"]], "brain_pipe.split.sequential": [[115, "module-brain_pipe.split.sequential"]], "brain_pipe.split.sequential.SequentialSplit": [[116, "brain-pipe-split-sequential-sequentialsplit"]], "brain_pipe.utils": [[117, "module-brain_pipe.utils"]], "brain_pipe.utils.ObjectsWithConfig": [[118, "brain-pipe-utils-objectswithconfig"]], "brain_pipe.utils.find": [[119, "module-brain_pipe.utils.find"]], "brain_pipe.utils.find.Finder": [[120, "brain-pipe-utils-find-finder"]], "brain_pipe.utils.list": [[121, "module-brain_pipe.utils.list"]], "brain_pipe.utils.list.flatten": [[122, "brain-pipe-utils-list-flatten"]], "brain_pipe.utils.list.wrap_in_list": [[123, "brain-pipe-utils-list-wrap-in-list"]], "brain_pipe.utils.log": [[124, "module-brain_pipe.utils.log"]], "brain_pipe.utils.log.ColorFormatter": [[125, "brain-pipe-utils-log-colorformatter"]], "brain_pipe.utils.log.DefaultFormatter": [[126, "brain-pipe-utils-log-defaultformatter"]], "brain_pipe.utils.log.default_logging": [[127, "brain-pipe-utils-log-default-logging"]], "brain_pipe.utils.multiprocess": [[128, "module-brain_pipe.utils.multiprocess"]], "brain_pipe.utils.multiprocess.MultiprocessingSingleton": [[129, "brain-pipe-utils-multiprocess-multiprocessingsingleton"]], "brain_pipe.utils.multiprocess.ProgressCallbackFn": [[130, "brain-pipe-utils-multiprocess-progresscallbackfn"]], "brain_pipe.utils.multiprocess.SimpleCallbackFn": [[131, "brain-pipe-utils-multiprocess-simplecallbackfn"]], "brain_pipe.utils.path": [[132, "module-brain_pipe.utils.path"]], "brain_pipe.utils.path.BIDSPathGenerator": [[133, "brain-pipe-utils-path-bidspathgenerator"]], "brain_pipe.utils.path.BIDSStimulusGrouper": [[134, "brain-pipe-utils-path-bidsstimulusgrouper"]], "brain_pipe.utils.serialization": [[135, "module-brain_pipe.utils.serialization"]], "brain_pipe.utils.serialization.pickle_dump_wrapper": [[136, "brain-pipe-utils-serialization-pickle-dump-wrapper"]], "brain_pipe.utils.serialization.pickle_load_wrapper": [[137, "brain-pipe-utils-serialization-pickle-load-wrapper"]], "API Reference": [[138, "api-reference"]], "Full Tree": [[139, "full-tree"]], "BIDS preprocessing": [[139, null]], "Command Line Interface": [[140, "command-line-interface"]], "API": [[140, "api"]], "Defining and running Pipelines through configuration files": [[141, "defining-and-running-pipelines-through-configuration-files"]], "Running pipelines from configuration files": [[141, "running-pipelines-from-configuration-files"]], "Background": [[141, "background"]], "Typical structure for SimpleDictParsers": [[141, "typical-structure-for-simpledictparsers"]], "Specifying the parser": [[141, "specifying-the-parser"]], "Welcome to Brain Pipe\u2019s documentation!": [[142, "welcome-to-brain-pipe-s-documentation"]], "Motivation": [[142, "motivation"]], "Internal structure": [[142, "internal-structure"]], "Installation": [[142, "installation"]], "Running": [[142, "running"]], "Requirements": [[142, "requirements"]], "Contributing": [[142, "contributing"]], "API reference": [[142, "api-reference"]], "Go to": [[142, "go-to"]], "Overview": [[143, "overview"]], "Concept": [[143, "concept"]], "The data_dict": [[143, "the-data-dict"]], "Convenient classes": [[143, "convenient-classes"]], "Additional considerations": [[143, "additional-considerations"]], "Writing your own PipelineStep": [[143, "writing-your-own-pipelinestep"]], "Small Example": [[143, "small-example"]]}, "indexentries": {"brain_pipe": [[0, "module-brain_pipe"]], "module": [[0, "module-brain_pipe"], [1, "module-brain_pipe.cli"], [2, "module-brain_pipe.cli.base"], [6, "module-brain_pipe.cli.default"], [8, "module-brain_pipe.dataloaders"], [9, "module-brain_pipe.dataloaders.base"], [11, "module-brain_pipe.dataloaders.path"], [13, "module-brain_pipe.parser"], [14, "module-brain_pipe.parser.base"], [16, "module-brain_pipe.parser.file"], [20, "module-brain_pipe.parser.simple_dict"], [22, "module-brain_pipe.parser.template_text"], [24, "module-brain_pipe.parser.text"], [26, "module-brain_pipe.parser.yaml"], [31, "module-brain_pipe.pipeline"], [32, "module-brain_pipe.pipeline.base"], [35, "module-brain_pipe.pipeline.cache"], [36, "module-brain_pipe.pipeline.cache.base"], [38, "module-brain_pipe.pipeline.cache.default"], [40, "module-brain_pipe.pipeline.cache.pipeline"], [42, "module-brain_pipe.pipeline.default"], [45, "module-brain_pipe.pipeline.wrapper"], [47, "module-brain_pipe.preprocessing"], [48, "module-brain_pipe.preprocessing.brain"], [49, "module-brain_pipe.preprocessing.brain.artifact"], [52, "module-brain_pipe.preprocessing.brain.eeg"], [53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"], [55, "module-brain_pipe.preprocessing.brain.eeg.load"], [57, "module-brain_pipe.preprocessing.brain.epochs"], [59, "module-brain_pipe.preprocessing.brain.link"], [64, "module-brain_pipe.preprocessing.brain.load"], [66, "module-brain_pipe.preprocessing.brain.rereference"], [68, "module-brain_pipe.preprocessing.brain.trigger"], [71, "module-brain_pipe.preprocessing.filter"], [73, "module-brain_pipe.preprocessing.resample"], [75, "module-brain_pipe.preprocessing.stimulus"], [76, "module-brain_pipe.preprocessing.stimulus.audio"], [77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"], [80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"], [82, "module-brain_pipe.preprocessing.stimulus.load"], [84, "module-brain_pipe.preprocessing.transpose"], [86, "module-brain_pipe.runner"], [87, "module-brain_pipe.runner.base"], [89, "module-brain_pipe.runner.default"], [91, "module-brain_pipe.save"], [92, "module-brain_pipe.save.base"], [94, "module-brain_pipe.save.default"], [105, "module-brain_pipe.split"], [106, "module-brain_pipe.split.base"], [108, "module-brain_pipe.split.mid"], [110, "module-brain_pipe.split.operations"], [111, "module-brain_pipe.split.operations.base"], [113, "module-brain_pipe.split.operations.normalize"], [115, "module-brain_pipe.split.sequential"], [117, "module-brain_pipe.utils"], [119, "module-brain_pipe.utils.find"], [121, "module-brain_pipe.utils.list"], [124, "module-brain_pipe.utils.log"], [128, "module-brain_pipe.utils.multiprocess"], [132, "module-brain_pipe.utils.path"], [135, "module-brain_pipe.utils.serialization"]], "brain_pipe.cli": [[1, "module-brain_pipe.cli"]], "brain_pipe.cli.base": [[2, "module-brain_pipe.cli.base"]], "cli (class in brain_pipe.cli.base)": [[3, "brain_pipe.cli.base.CLI"]], "__init__() (cli method)": [[3, "brain_pipe.cli.base.CLI.__init__"]], "get_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_parser"]], "get_run_options() (cli method)": [[3, "brain_pipe.cli.base.CLI.get_run_options"]], "parse_cli_arguments() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (cli method)": [[3, "brain_pipe.cli.base.CLI.parse_cli_arguments_for_parser"]], "run() (cli method)": [[3, "brain_pipe.cli.base.CLI.run"]], "cli_entrypoint() (in module brain_pipe.cli)": [[4, "brain_pipe.cli.cli_entrypoint"]], "cli_factory() (in module brain_pipe.cli)": [[5, "brain_pipe.cli.cli_factory"]], "brain_pipe.cli.default": [[6, "module-brain_pipe.cli.default"]], "defaultcli (class in brain_pipe.cli.default)": [[7, "brain_pipe.cli.default.DefaultCLI"]], "__init__() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.__init__"]], "add_arguments_to_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.add_arguments_to_argparser"]], "get_argparser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_argparser"]], "get_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_parser"]], "get_run_options() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.get_run_options"]], "parse_cli_arguments() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments"]], "parse_cli_arguments_for_parser() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.parse_cli_arguments_for_parser"]], "run() (defaultcli method)": [[7, "brain_pipe.cli.default.DefaultCLI.run"]], "brain_pipe.dataloaders": [[8, "module-brain_pipe.dataloaders"]], "brain_pipe.dataloaders.base": [[9, "module-brain_pipe.dataloaders.base"]], "dataloader (class in brain_pipe.dataloaders.base)": [[10, "brain_pipe.dataloaders.base.DataLoader"]], "__init__() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.__init__"]], "compute_length() (dataloader method)": [[10, "brain_pipe.dataloaders.base.DataLoader.compute_length"]], "brain_pipe.dataloaders.path": [[11, "module-brain_pipe.dataloaders.path"]], "globloader (class in brain_pipe.dataloaders.path)": [[12, "brain_pipe.dataloaders.path.GlobLoader"]], "__init__() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.__init__"]], "compute_length() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.compute_length"]], "path_to_data_dict() (globloader method)": [[12, "brain_pipe.dataloaders.path.GlobLoader.path_to_data_dict"]], "brain_pipe.parser": [[13, "module-brain_pipe.parser"]], "brain_pipe.parser.base": [[14, "module-brain_pipe.parser.base"]], "parser (class in brain_pipe.parser.base)": [[15, "brain_pipe.parser.base.Parser"]], "__init__() (parser method)": [[15, "brain_pipe.parser.base.Parser.__init__"]], "get_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.get_additional_kwargs"]], "link_loader_to_pipeline() (parser method)": [[15, "brain_pipe.parser.base.Parser.link_loader_to_pipeline"]], "set_additional_kwargs() (parser method)": [[15, "brain_pipe.parser.base.Parser.set_additional_kwargs"]], "brain_pipe.parser.file": [[16, "module-brain_pipe.parser.file"]], "fileloadmixin (class in brain_pipe.parser.file)": [[17, "brain_pipe.parser.file.FileLoadMixin"]], "__init__() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.__init__"]], "get_additional_kwargs() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.get_additional_kwargs"]], "load_file() (fileloadmixin method)": [[17, "brain_pipe.parser.file.FileLoadMixin.load_file"]], "fileparser (class in brain_pipe.parser.file)": [[18, "brain_pipe.parser.file.FileParser"]], "__init__() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.__init__"]], "apply_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.apply_config"]], "get_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.link_loader_to_pipeline"]], "load_file() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.load_file"]], "parse_all() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_all"]], "parse_text_to_dict() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.parse_text_to_dict"]], "recursive_parse() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.recursive_parse"]], "set_additional_kwargs() (fileparser method)": [[18, "brain_pipe.parser.file.FileParser.set_additional_kwargs"]], "templatefileparser (class in brain_pipe.parser.file)": [[19, "brain_pipe.parser.file.TemplateFileParser"]], "__init__() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.__init__"]], "apply_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.apply_config"]], "get_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.link_loader_to_pipeline"]], "load_file() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.load_file"]], "parse_all() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_all"]], "parse_text_to_dict() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.parse_text_to_dict"]], "recursive_parse() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.recursive_parse"]], "set_additional_kwargs() (templatefileparser method)": [[19, "brain_pipe.parser.file.TemplateFileParser.set_additional_kwargs"]], "brain_pipe.parser.simple_dict": [[20, "module-brain_pipe.parser.simple_dict"]], "simpledictparser (class in brain_pipe.parser.simple_dict)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser"]], "__init__() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.__init__"]], "apply_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.apply_config"]], "get_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.link_loader_to_pipeline"]], "parse_all() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.parse_all"]], "recursive_parse() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.recursive_parse"]], "set_additional_kwargs() (simpledictparser method)": [[21, "brain_pipe.parser.simple_dict.SimpleDictParser.set_additional_kwargs"]], "brain_pipe.parser.template_text": [[22, "module-brain_pipe.parser.template_text"]], "templatetextparser (class in brain_pipe.parser.template_text)": [[23, "brain_pipe.parser.template_text.TemplateTextParser"]], "__init__() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.__init__"]], "apply_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.apply_config"]], "get_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.link_loader_to_pipeline"]], "parse_all() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_all"]], "parse_text_to_dict() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.parse_text_to_dict"]], "recursive_parse() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.recursive_parse"]], "set_additional_kwargs() (templatetextparser method)": [[23, "brain_pipe.parser.template_text.TemplateTextParser.set_additional_kwargs"]], "brain_pipe.parser.text": [[24, "module-brain_pipe.parser.text"]], "textparser (class in brain_pipe.parser.text)": [[25, "brain_pipe.parser.text.TextParser"]], "__init__() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.__init__"]], "apply_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.apply_config"]], "get_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.link_loader_to_pipeline"]], "parse_all() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_all"]], "parse_text_to_dict() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.parse_text_to_dict"]], "recursive_parse() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.recursive_parse"]], "set_additional_kwargs() (textparser method)": [[25, "brain_pipe.parser.text.TextParser.set_additional_kwargs"]], "brain_pipe.parser.yaml": [[26, "module-brain_pipe.parser.yaml"]], "yamlfileparser (class in brain_pipe.parser.yaml)": [[27, "brain_pipe.parser.yaml.YAMLFileParser"]], "__init__() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.__init__"]], "apply_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.apply_config"]], "get_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.link_loader_to_pipeline"]], "load_file() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.load_file"]], "parse_all() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_all"]], "parse_text_to_dict() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.parse_text_to_dict"]], "recursive_parse() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.recursive_parse"]], "set_additional_kwargs() (yamlfileparser method)": [[27, "brain_pipe.parser.yaml.YAMLFileParser.set_additional_kwargs"]], "yamlmixin (class in brain_pipe.parser.yaml)": [[28, "brain_pipe.parser.yaml.YAMLMixin"]], "__init__() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.__init__"]], "parse_text_to_dict() (yamlmixin method)": [[28, "brain_pipe.parser.yaml.YAMLMixin.parse_text_to_dict"]], "yamltemplatefileparser (class in brain_pipe.parser.yaml)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser"]], "__init__() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.__init__"]], "apply_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.apply_config"]], "get_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.link_loader_to_pipeline"]], "load_file() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.load_file"]], "parse_all() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_all"]], "parse_text_to_dict() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.parse_text_to_dict"]], "recursive_parse() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.recursive_parse"]], "set_additional_kwargs() (yamltemplatefileparser method)": [[29, "brain_pipe.parser.yaml.YAMLTemplateFileParser.set_additional_kwargs"]], "yamltextparser (class in brain_pipe.parser.yaml)": [[30, "brain_pipe.parser.yaml.YAMLTextParser"]], "__init__() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.__init__"]], "apply_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.apply_config"]], "get_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_additional_kwargs"]], "get_runner_from_parsed_config() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.get_runner_from_parsed_config"]], "link_loader_to_pipeline() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.link_loader_to_pipeline"]], "parse_all() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_all"]], "parse_text_to_dict() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.parse_text_to_dict"]], "recursive_parse() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.recursive_parse"]], "set_additional_kwargs() (yamltextparser method)": [[30, "brain_pipe.parser.yaml.YAMLTextParser.set_additional_kwargs"]], "brain_pipe.pipeline": [[31, "module-brain_pipe.pipeline"]], "brain_pipe.pipeline.base": [[32, "module-brain_pipe.pipeline.base"]], "pipeline (class in brain_pipe.pipeline.base)": [[33, "brain_pipe.pipeline.base.Pipeline"]], "__init__() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.__init__"]], "parse_dict_keys() (pipeline method)": [[33, "brain_pipe.pipeline.base.Pipeline.parse_dict_keys"]], "pipelinestep (class in brain_pipe.pipeline.base)": [[34, "brain_pipe.pipeline.base.PipelineStep"]], "__init__() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.__init__"]], "parse_dict_keys() (pipelinestep method)": [[34, "brain_pipe.pipeline.base.PipelineStep.parse_dict_keys"]], "brain_pipe.pipeline.cache": [[35, "module-brain_pipe.pipeline.cache"]], "brain_pipe.pipeline.cache.base": [[36, "module-brain_pipe.pipeline.cache.base"]], "pipelinecache (class in brain_pipe.pipeline.cache.base)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache"]], "__init__() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.__init__"]], "find_existing_cache_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_cache_dict"]], "get_existing_cache_paths() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_existing_cache_paths"]], "get_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_filename"]], "get_foldername() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_foldername"]], "get_path() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.get_path"]], "load() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load"]], "load_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.predict_paths_from_previous_filename"]], "save() (pipelinecache method)": [[37, "brain_pipe.pipeline.cache.base.PipelineCache.save"]], "brain_pipe.pipeline.cache.default": [[38, "module-brain_pipe.pipeline.cache.default"]], "defaultpipelinecache (class in brain_pipe.pipeline.cache.default)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache"]], "__init__() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.__init__"]], "find_existing_cache_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_data_dict"]], "find_existing_cache_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.find_existing_cache_from_previous_filename"]], "get_cache_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_cache_dict"]], "get_existing_cache_paths() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_existing_cache_paths"]], "get_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_filename"]], "get_foldername() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_foldername"]], "get_path() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.get_path"]], "load() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load"]], "load_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.load_from_data_dict"]], "predict_filenames_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_data_dict"]], "predict_filenames_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_filenames_from_previous_filename"]], "predict_paths_from_data_dict() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_data_dict"]], "predict_paths_from_previous_filename() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.predict_paths_from_previous_filename"]], "save() (defaultpipelinecache method)": [[39, "brain_pipe.pipeline.cache.default.DefaultPipelineCache.save"]], "brain_pipe.pipeline.cache.pipeline": [[40, "module-brain_pipe.pipeline.cache.pipeline"]], "cachingpreprocessingpipeline (class in brain_pipe.pipeline.cache.pipeline)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline"]], "__init__() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.__init__"]], "check_reload() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.check_reload"]], "iterate_over_steps() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.iterate_over_steps"]], "on_error (cachingpreprocessingpipeline property)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.on_error"]], "parse_dict_keys() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.parse_dict_keys"]], "run_step() (cachingpreprocessingpipeline method)": [[41, "brain_pipe.pipeline.cache.pipeline.CachingPreprocessingPipeline.run_step"]], "brain_pipe.pipeline.default": [[42, "module-brain_pipe.pipeline.default"]], "defaultpipeline (class in brain_pipe.pipeline.default)": [[43, "brain_pipe.pipeline.default.DefaultPipeline"]], "__init__() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.__init__"]], "check_reload() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.check_reload"]], "iterate_over_steps() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.iterate_over_steps"]], "on_error (defaultpipeline property)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.on_error"]], "parse_dict_keys() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.parse_dict_keys"]], "run_step() (defaultpipeline method)": [[43, "brain_pipe.pipeline.default.DefaultPipeline.run_step"]], "default_error_handler_fn() (in module brain_pipe.pipeline.default)": [[44, "brain_pipe.pipeline.default.default_error_handler_fn"]], "brain_pipe.pipeline.wrapper": [[45, "module-brain_pipe.pipeline.wrapper"]], "wrapper (class in brain_pipe.pipeline.wrapper)": [[46, "brain_pipe.pipeline.wrapper.Wrapper"]], "__init__() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.__init__"]], "parse_dict_keys() (wrapper method)": [[46, "brain_pipe.pipeline.wrapper.Wrapper.parse_dict_keys"]], "brain_pipe.preprocessing": [[47, "module-brain_pipe.preprocessing"]], "brain_pipe.preprocessing.brain": [[48, "module-brain_pipe.preprocessing.brain"]], "brain_pipe.preprocessing.brain.artifact": [[49, "module-brain_pipe.preprocessing.brain.artifact"]], "artifactremovalmwf (class in brain_pipe.preprocessing.brain.artifact)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF"]], "__init__() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.__init__"]], "apply_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.apply_mwf"]], "check_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.check_symmetric"]], "compute_mwf() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.compute_mwf"]], "fix_symmetric() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.fix_symmetric"]], "get_artifact_segments() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.get_artifact_segments"]], "parse_dict_keys() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.parse_dict_keys"]], "sort_evd() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.sort_evd"]], "stack_delayed() (artifactremovalmwf method)": [[50, "brain_pipe.preprocessing.brain.artifact.ArtifactRemovalMWF.stack_delayed"]], "interpolateartifacts (class in brain_pipe.preprocessing.brain.artifact)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts"]], "__init__() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.__init__"]], "parse_dict_keys() (interpolateartifacts method)": [[51, "brain_pipe.preprocessing.brain.artifact.InterpolateArtifacts.parse_dict_keys"]], "brain_pipe.preprocessing.brain.eeg": [[52, "module-brain_pipe.preprocessing.brain.eeg"]], "brain_pipe.preprocessing.brain.eeg.biosemi": [[53, "module-brain_pipe.preprocessing.brain.eeg.biosemi"]], "biosemi_trigger_processing_fn() (in module brain_pipe.preprocessing.brain.eeg.biosemi)": [[54, "brain_pipe.preprocessing.brain.eeg.biosemi.biosemi_trigger_processing_fn"]], "brain_pipe.preprocessing.brain.eeg.load": [[55, "module-brain_pipe.preprocessing.brain.eeg.load"]], "loadeegnumpy (class in brain_pipe.preprocessing.brain.eeg.load)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy"]], "__init__() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.__init__"]], "get_channels() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.get_channels"]], "parse_dict_keys() (loadeegnumpy method)": [[56, "brain_pipe.preprocessing.brain.eeg.load.LoadEEGNumpy.parse_dict_keys"]], "brain_pipe.preprocessing.brain.epochs": [[57, "module-brain_pipe.preprocessing.brain.epochs"]], "splitepochs (class in brain_pipe.preprocessing.brain.epochs)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs"]], "__init__() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.__init__"]], "data_dict_copy() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.data_dict_copy"]], "parse_dict_keys() (splitepochs method)": [[58, "brain_pipe.preprocessing.brain.epochs.SplitEpochs.parse_dict_keys"]], "brain_pipe.preprocessing.brain.link": [[59, "module-brain_pipe.preprocessing.brain.link"]], "bidsstimulusinfoextractor (class in brain_pipe.preprocessing.brain.link)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor"]], "__init__() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.__init__"]], "read_events() (bidsstimulusinfoextractor method)": [[60, "brain_pipe.preprocessing.brain.link.BIDSStimulusInfoExtractor.read_events"]], "basenamecomparisonfn (class in brain_pipe.preprocessing.brain.link)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn"]], "__init__() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.__init__"]], "process_path() (basenamecomparisonfn method)": [[61, "brain_pipe.preprocessing.brain.link.BasenameComparisonFn.process_path"]], "linkstimulustobrainresponse (class in brain_pipe.preprocessing.brain.link)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse"]], "__init__() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.__init__"]], "parse_dict_keys() (linkstimulustobrainresponse method)": [[62, "brain_pipe.preprocessing.brain.link.LinkStimulusToBrainResponse.parse_dict_keys"]], "default_multiprocessing_key_fn() (in module brain_pipe.preprocessing.brain.link)": [[63, "brain_pipe.preprocessing.brain.link.default_multiprocessing_key_fn"]], "brain_pipe.preprocessing.brain.load": [[64, "module-brain_pipe.preprocessing.brain.load"]], "mneloader (class in brain_pipe.preprocessing.brain.load)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader"]], "__init__() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.__init__"]], "parse_dict_keys() (mneloader method)": [[65, "brain_pipe.preprocessing.brain.load.MNELoader.parse_dict_keys"]], "brain_pipe.preprocessing.brain.rereference": [[66, "module-brain_pipe.preprocessing.brain.rereference"]], "commonaveragerereference (class in brain_pipe.preprocessing.brain.rereference)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference"]], "__init__() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.__init__"]], "parse_dict_keys() (commonaveragerereference method)": [[67, "brain_pipe.preprocessing.brain.rereference.CommonAverageRereference.parse_dict_keys"]], "brain_pipe.preprocessing.brain.trigger": [[68, "module-brain_pipe.preprocessing.brain.trigger"]], "alignperiodicblocktriggers (class in brain_pipe.preprocessing.brain.trigger)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers"]], "__init__() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.__init__"]], "get_trigger_indices() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.get_trigger_indices"]], "parse_dict_keys() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.parse_dict_keys"]], "split_epochs() (alignperiodicblocktriggers method)": [[69, "brain_pipe.preprocessing.brain.trigger.AlignPeriodicBlockTriggers.split_epochs"]], "default_drift_correction() (in module brain_pipe.preprocessing.brain.trigger)": [[70, "brain_pipe.preprocessing.brain.trigger.default_drift_correction"]], "brain_pipe.preprocessing.filter": [[71, "module-brain_pipe.preprocessing.filter"]], "sosfiltfilt (class in brain_pipe.preprocessing.filter)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt"]], "__init__() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.__init__"]], "get_matlab_arguments() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.get_matlab_arguments"]], "parse_dict_keys() (sosfiltfilt method)": [[72, "brain_pipe.preprocessing.filter.SosFiltFilt.parse_dict_keys"]], "brain_pipe.preprocessing.resample": [[73, "module-brain_pipe.preprocessing.resample"]], "resamplepoly (class in brain_pipe.preprocessing.resample)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly"]], "__init__() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.__init__"]], "parse_dict_keys() (resamplepoly method)": [[74, "brain_pipe.preprocessing.resample.ResamplePoly.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus": [[75, "module-brain_pipe.preprocessing.stimulus"]], "brain_pipe.preprocessing.stimulus.audio": [[76, "module-brain_pipe.preprocessing.stimulus.audio"]], "brain_pipe.preprocessing.stimulus.audio.envelope": [[77, "module-brain_pipe.preprocessing.stimulus.audio.envelope"]], "envelopefromgammatone (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone"]], "__init__() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.__init__"]], "duration (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.duration"]], "process() (envelopefromgammatone method)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.process"]], "source (envelopefromgammatone property)": [[78, "brain_pipe.preprocessing.stimulus.audio.envelope.EnvelopeFromGammatone.source"]], "gammatoneenvelope (class in brain_pipe.preprocessing.stimulus.audio.envelope)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope"]], "__init__() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.__init__"]], "parse_dict_keys() (gammatoneenvelope method)": [[79, "brain_pipe.preprocessing.stimulus.audio.envelope.GammatoneEnvelope.parse_dict_keys"]], "brain_pipe.preprocessing.stimulus.audio.spectrogram": [[80, "module-brain_pipe.preprocessing.stimulus.audio.spectrogram"]], "librosamelspectrogram (class in brain_pipe.preprocessing.stimulus.audio.spectrogram)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram"]], "__init__() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.__init__"]], "parse_dict_keys() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.parse_dict_keys"]], "parse_librosa_kwargs() (librosamelspectrogram method)": [[81, "brain_pipe.preprocessing.stimulus.audio.spectrogram.LibrosaMelSpectrogram.parse_librosa_kwargs"]], "brain_pipe.preprocessing.stimulus.load": [[82, "module-brain_pipe.preprocessing.stimulus.load"]], "loadstimuli (class in brain_pipe.preprocessing.stimulus.load)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli"]], "__init__() (loadstimuli method)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.__init__"]], "parse_dict_keys() (loadstimuli method)": [[83, "brain_pipe.preprocessing.stimulus.load.LoadStimuli.parse_dict_keys"]], "brain_pipe.preprocessing.transpose": [[84, "module-brain_pipe.preprocessing.transpose"]], "transpose (class in brain_pipe.preprocessing.transpose)": [[85, "brain_pipe.preprocessing.transpose.Transpose"]], "__init__() (transpose method)": [[85, "brain_pipe.preprocessing.transpose.Transpose.__init__"]], "parse_dict_keys() (transpose method)": [[85, "brain_pipe.preprocessing.transpose.Transpose.parse_dict_keys"]], "brain_pipe.runner": [[86, "module-brain_pipe.runner"]], "brain_pipe.runner.base": [[87, "module-brain_pipe.runner.base"]], "runner (class in brain_pipe.runner.base)": [[88, "brain_pipe.runner.base.Runner"]], "__init__() (runner method)": [[88, "brain_pipe.runner.base.Runner.__init__"]], "run() (runner method)": [[88, "brain_pipe.runner.base.Runner.run"]], "brain_pipe.runner.default": [[89, "module-brain_pipe.runner.default"]], "defaultrunner (class in brain_pipe.runner.default)": [[90, "brain_pipe.runner.default.DefaultRunner"]], "__init__() (defaultrunner method)": [[90, "brain_pipe.runner.default.DefaultRunner.__init__"]], "run() (defaultrunner method)": [[90, "brain_pipe.runner.default.DefaultRunner.run"]], "brain_pipe.save": [[91, "module-brain_pipe.save"]], "brain_pipe.save.base": [[92, "module-brain_pipe.save.base"]], "save (class in brain_pipe.save.base)": [[93, "brain_pipe.save.base.Save"]], "__init__() (save method)": [[93, "brain_pipe.save.base.Save.__init__"]], "is_already_done() (save method)": [[93, "brain_pipe.save.base.Save.is_already_done"]], "is_reloadable() (save method)": [[93, "brain_pipe.save.base.Save.is_reloadable"]], "parse_dict_keys() (save method)": [[93, "brain_pipe.save.base.Save.parse_dict_keys"]], "reload() (save method)": [[93, "brain_pipe.save.base.Save.reload"]], "brain_pipe.save.default": [[94, "module-brain_pipe.save.default"]], "attachsave (class in brain_pipe.save.default)": [[95, "brain_pipe.save.default.AttachSave"]], "__init__() (attachsave method)": [[95, "brain_pipe.save.default.AttachSave.__init__"]], "attach_saver() (attachsave method)": [[95, "brain_pipe.save.default.AttachSave.attach_saver"]], "checkfunctor (class in brain_pipe.save.default)": [[96, "brain_pipe.save.default.CheckFunctor"]], "__init__() (checkfunctor method)": [[96, "brain_pipe.save.default.CheckFunctor.__init__"]], "attach_saver() (checkfunctor method)": [[96, "brain_pipe.save.default.CheckFunctor.attach_saver"]], "defaultfilenamefn (class in brain_pipe.save.default)": [[97, "brain_pipe.save.default.DefaultFilenameFn"]], "__init__() (defaultfilenamefn method)": [[97, "brain_pipe.save.default.DefaultFilenameFn.__init__"]], "defaultsave (class in brain_pipe.save.default)": [[98, "brain_pipe.save.default.DefaultSave"]], "__init__() (defaultsave method)": [[98, "brain_pipe.save.default.DefaultSave.__init__"]], "is_already_done() (defaultsave method)": [[98, "brain_pipe.save.default.DefaultSave.is_already_done"]], "is_reloadable() (defaultsave method)": [[98, "brain_pipe.save.default.DefaultSave.is_reloadable"]], "overwrite (defaultsave property)": [[98, "brain_pipe.save.default.DefaultSave.overwrite"]], "parse_dict_keys() (defaultsave method)": [[98, "brain_pipe.save.default.DefaultSave.parse_dict_keys"]], "reload() (defaultsave method)": [[98, "brain_pipe.save.default.DefaultSave.reload"]], "defaultsavemetadata (class in brain_pipe.save.default)": [[99, "brain_pipe.save.default.DefaultSaveMetadata"]], "__init__() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.__init__"]], "add() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.add"]], "attach_saver() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.attach_saver"]], "clear() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.clear"]], "convert_old_format() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.convert_old_format"]], "get() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.get"]], "get_metadata_for_savepath() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.get_metadata_for_savepath"]], "get_path() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.get_path"]], "get_relpath() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.get_relpath"]], "is_old_format() (defaultsavemetadata class method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.is_old_format"]], "lock (defaultsavemetadata property)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.lock"]], "write() (defaultsavemetadata method)": [[99, "brain_pipe.save.default.DefaultSaveMetadata.write"]], "isdonecheck (class in brain_pipe.save.default)": [[100, "brain_pipe.save.default.IsDoneCheck"]], "__init__() (isdonecheck method)": [[100, "brain_pipe.save.default.IsDoneCheck.__init__"]], "attach_saver() (isdonecheck method)": [[100, "brain_pipe.save.default.IsDoneCheck.attach_saver"]], "isreloadablecheck (class in brain_pipe.save.default)": [[101, "brain_pipe.save.default.IsReloadableCheck"]], "__init__() (isreloadablecheck method)": [[101, "brain_pipe.save.default.IsReloadableCheck.__init__"]], "attach_saver() (isreloadablecheck method)": [[101, "brain_pipe.save.default.IsReloadableCheck.attach_saver"]], "oldmetadatacompliant (class in brain_pipe.save.default)": [[102, "brain_pipe.save.default.OldMetadataCompliant"]], "__init__() (oldmetadatacompliant method)": [[102, "brain_pipe.save.default.OldMetadataCompliant.__init__"]], "convert_old_format() (oldmetadatacompliant method)": [[102, "brain_pipe.save.default.OldMetadataCompliant.convert_old_format"]], "savemetadata (class in brain_pipe.save.default)": [[103, "brain_pipe.save.default.SaveMetadata"]], "__init__() (savemetadata method)": [[103, "brain_pipe.save.default.SaveMetadata.__init__"]], "add() (savemetadata method)": [[103, "brain_pipe.save.default.SaveMetadata.add"]], "attach_saver() (savemetadata method)": [[103, "brain_pipe.save.default.SaveMetadata.attach_saver"]], "clear() (savemetadata method)": [[103, "brain_pipe.save.default.SaveMetadata.clear"]], "is_old_format() (savemetadata class method)": [[103, "brain_pipe.save.default.SaveMetadata.is_old_format"]], "default_metadata_key_fn() (in module brain_pipe.save.default)": [[104, "brain_pipe.save.default.default_metadata_key_fn"]], "brain_pipe.split": [[105, "module-brain_pipe.split"]], "brain_pipe.split.base": [[106, "module-brain_pipe.split.base"]], "splitter (class in brain_pipe.split.base)": [[107, "brain_pipe.split.base.Splitter"]], "__init__() (splitter method)": [[107, "brain_pipe.split.base.Splitter.__init__"]], "parse_dict_keys() (splitter method)": [[107, "brain_pipe.split.base.Splitter.parse_dict_keys"]], "split() (splitter method)": [[107, "brain_pipe.split.base.Splitter.split"]], "brain_pipe.split.mid": [[108, "module-brain_pipe.split.mid"]], "midsplit (class in brain_pipe.split.mid)": [[109, "brain_pipe.split.mid.MidSplit"]], "__init__() (midsplit method)": [[109, "brain_pipe.split.mid.MidSplit.__init__"]], "parse_dict_keys() (midsplit method)": [[109, "brain_pipe.split.mid.MidSplit.parse_dict_keys"]], "split() (midsplit method)": [[109, "brain_pipe.split.mid.MidSplit.split"]], "brain_pipe.split.operations": [[110, "module-brain_pipe.split.operations"]], "brain_pipe.split.operations.base": [[111, "module-brain_pipe.split.operations.base"]], "splitteroperation (class in brain_pipe.split.operations.base)": [[112, "brain_pipe.split.operations.base.SplitterOperation"]], "__init__() (splitteroperation method)": [[112, "brain_pipe.split.operations.base.SplitterOperation.__init__"]], "reset() (splitteroperation method)": [[112, "brain_pipe.split.operations.base.SplitterOperation.reset"]], "brain_pipe.split.operations.normalize": [[113, "module-brain_pipe.split.operations.normalize"]], "standardize (class in brain_pipe.split.operations.normalize)": [[114, "brain_pipe.split.operations.normalize.Standardize"]], "__init__() (standardize method)": [[114, "brain_pipe.split.operations.normalize.Standardize.__init__"]], "reset() (standardize method)": [[114, "brain_pipe.split.operations.normalize.Standardize.reset"]], "brain_pipe.split.sequential": [[115, "module-brain_pipe.split.sequential"]], "sequentialsplit (class in brain_pipe.split.sequential)": [[116, "brain_pipe.split.sequential.SequentialSplit"]], "__init__() (sequentialsplit method)": [[116, "brain_pipe.split.sequential.SequentialSplit.__init__"]], "parse_dict_keys() (sequentialsplit method)": [[116, "brain_pipe.split.sequential.SequentialSplit.parse_dict_keys"]], "split() (sequentialsplit method)": [[116, "brain_pipe.split.sequential.SequentialSplit.split"]], "brain_pipe.utils": [[117, "module-brain_pipe.utils"]], "objectswithconfig (class in brain_pipe.utils)": [[118, "brain_pipe.utils.ObjectsWithConfig"]], "__init__() (objectswithconfig method)": [[118, "brain_pipe.utils.ObjectsWithConfig.__init__"]], "apply_config() (objectswithconfig method)": [[118, "brain_pipe.utils.ObjectsWithConfig.apply_config"]], "brain_pipe.utils.find": [[119, "module-brain_pipe.utils.find"]], "finder (class in brain_pipe.utils.find)": [[120, "brain_pipe.utils.find.Finder"]], "__init__() (finder method)": [[120, "brain_pipe.utils.find.Finder.__init__"]], "filter() (finder method)": [[120, "brain_pipe.utils.find.Finder.filter"]], "filter_fn() (finder method)": [[120, "brain_pipe.utils.find.Finder.filter_fn"]], "load_from_path() (finder method)": [[120, "brain_pipe.utils.find.Finder.load_from_path"]], "predicate_fn() (finder method)": [[120, "brain_pipe.utils.find.Finder.predicate_fn"]], "brain_pipe.utils.list": [[121, "module-brain_pipe.utils.list"]], "flatten() (in module brain_pipe.utils.list)": [[122, "brain_pipe.utils.list.flatten"]], "wrap_in_list() (in module brain_pipe.utils.list)": [[123, "brain_pipe.utils.list.wrap_in_list"]], "brain_pipe.utils.log": [[124, "module-brain_pipe.utils.log"]], "colorformatter (class in brain_pipe.utils.log)": [[125, "brain_pipe.utils.log.ColorFormatter"]], "__init__() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.__init__"]], "converter() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.converter"]], "format() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.format"]], "formatexception() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.formatException"]], "formatstack() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.formatStack"]], "formattime() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.formatTime"]], "usestime() (colorformatter method)": [[125, "brain_pipe.utils.log.ColorFormatter.usesTime"]], "defaultformatter (class in brain_pipe.utils.log)": [[126, "brain_pipe.utils.log.DefaultFormatter"]], "__init__() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.__init__"]], "converter() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.converter"]], "format() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.format"]], "formatexception() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.formatException"]], "formatstack() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.formatStack"]], "formattime() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.formatTime"]], "usestime() (defaultformatter method)": [[126, "brain_pipe.utils.log.DefaultFormatter.usesTime"]], "default_logging() (in module brain_pipe.utils.log)": [[127, "brain_pipe.utils.log.default_logging"]], "brain_pipe.utils.multiprocess": [[128, "module-brain_pipe.utils.multiprocess"]], "multiprocessingsingleton (class in brain_pipe.utils.multiprocess)": [[129, "brain_pipe.utils.multiprocess.MultiprocessingSingleton"]], "__init__() (multiprocessingsingleton method)": [[129, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.__init__"]], "clean() (multiprocessingsingleton class method)": [[129, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.clean"]], "get_lock() (multiprocessingsingleton class method)": [[129, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.get_lock"]], "get_map_fn() (multiprocessingsingleton class method)": [[129, "brain_pipe.utils.multiprocess.MultiprocessingSingleton.get_map_fn"]], "progresscallbackfn (class in brain_pipe.utils.multiprocess)": [[130, "brain_pipe.utils.multiprocess.ProgressCallbackFn"]], "__init__() (progresscallbackfn method)": [[130, "brain_pipe.utils.multiprocess.ProgressCallbackFn.__init__"]], "simplecallbackfn (class in brain_pipe.utils.multiprocess)": [[131, "brain_pipe.utils.multiprocess.SimpleCallbackFn"]], "__init__() (simplecallbackfn method)": [[131, "brain_pipe.utils.multiprocess.SimpleCallbackFn.__init__"]], "brain_pipe.utils.path": [[132, "module-brain_pipe.utils.path"]], "bidspathgenerator (class in brain_pipe.utils.path)": [[133, "brain_pipe.utils.path.BIDSPathGenerator"]], "__init__() (bidspathgenerator method)": [[133, "brain_pipe.utils.path.BIDSPathGenerator.__init__"]], "select_paths() (bidspathgenerator method)": [[133, "brain_pipe.utils.path.BIDSPathGenerator.select_paths"]], "bidsstimulusgrouper (class in brain_pipe.utils.path)": [[134, "brain_pipe.utils.path.BIDSStimulusGrouper"]], "__init__() (bidsstimulusgrouper method)": [[134, "brain_pipe.utils.path.BIDSStimulusGrouper.__init__"]], "brain_pipe.utils.serialization": [[135, "module-brain_pipe.utils.serialization"]], "pickle_dump_wrapper() (in module brain_pipe.utils.serialization)": [[136, "brain_pipe.utils.serialization.pickle_dump_wrapper"]], "pickle_load_wrapper() (in module brain_pipe.utils.serialization)": [[137, "brain_pipe.utils.serialization.pickle_load_wrapper"]]}})